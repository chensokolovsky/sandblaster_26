(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.deferredmediad"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.deferredmediad"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.deferredmediad"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.deferredmediad"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.deferredmediad"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.deferredmediad"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.deferredmediad"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.deferredmediad"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.deferredmediad"))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.deferredmediad"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.deferredmediad"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.deferredmediad"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.deferredmediad"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.deferredmediad"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.deferredmediad")))))
(deny file-read*
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.deferredmediad")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.deferredmediad")))
	(require-all
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.deferredmediad"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.deferredmediad"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.deferredmediad")))
		(require-any
			(subpath-prefix "${HOME}/Media/DCIM")
			(require-all
				(require-not (subpath-prefix "${HOME}/Media/Deferred"))
				(require-not (subpath-prefix "${HOME}/Library/ISP"))
				(require-not (subpath-prefix "${HOME}/Library/Fonts"))))))
(deny file-read-metadata
	(require-all
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.deferredmediad"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.deferredmediad"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.deferredmediad")))))
(deny file-write*
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.deferredmediad")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.deferredmediad")))
	(require-all
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.deferredmediad"))
		(require-not (subpath-prefix "${HOME}/Media/Deferred"))
		(require-any (subpath "/private/var/tmp/com.apple.deferredmediad")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.deferredmediad"))))
(deny file-write-create
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.deferredmediad")
		(subpath-prefix "${HOME}/Library/Caches/com.apple.deferredmediad")
		(subpath-prefix "${HOME}/Media/Deferred")
		(require-any (subpath "/private/var/tmp/com.apple.deferredmediad")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.deferredmediad"))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
		(require-not (iokit-user-client-class "AGXCommandQueue"))
		(require-not (iokit-user-client-class "AGXDevice"))
		(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
		(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
		(require-not (iokit-user-client-class "AppleAVE2UserClient"))
		(iokit-user-client-class "IOGPUDeviceUserClient")
		(require-any (iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelSharedUserClient2"))
		(require-any (iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelSubmitter2")
(iokit-user-client-class "IOAccelSharedUserClient"))
		(iokit-user-client-class "AGXSharedUserClient")
		(require-any (iokit-connection "IOGPU")
(iokit-connection "IOGraphicsAccelerator2"))
		(extension com.apple.security.exception.iokit-user-client-class)
		(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient"))
		(iokit-user-client-class "ANEClientHintsUserClient")
		(entitlement-is-bool-true com.apple.private.ane.allow-set-client-hints)))
(deny iokit-open-service
	(require-all
		(require-not (iokit-user-client-class "AppleJPEGDriver"))
		(require-not (iokit-user-client-class "AGXAcceleratorG"))
		(require-not (iokit-user-client-class "IOSurfaceRoot"))
		(require-all (require-not (iokit-user-client-class "AppleCLCD"))
(require-not (iokit-user-client-class "AppleParavirtDisplay")))
		(require-not (iokit-user-client-class "AppleParavirtGPU"))))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.coremedia.compressionsession"))
		(require-not (global-name "com.apple.mediaserverd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.coremedia.decompressionsession"))
		(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.capture.deferred.containermanager.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
		(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
		(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
		(require-all (require-not (global-name "com.apple.cvmsServ"))
(require-not (global-name "com.apple.gpumemd.source")))
		(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
		(require-not (global-name "com.apple.itunesstored.xpc"))
		(require-not (global-name "com.apple.coremedia.videocompositor"))
		(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
		(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
		(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.pegasus"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
		(require-not (global-name "com.apple.privacyaccountingd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.coremedia.sandboxserver"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.timesync.ptp.manager"))
		(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.coremedia.player.xpc"))
		(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
		(require-not (global-name "com.apple.coremedia.sts"))
		(require-not (global-name "com.apple.itunescloudd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
		(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
		(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
		(require-not (xpc-service-name "com.apple.AGXCompilerService"))
		(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
		(require-not (xpc-service-name "com.apple.MTLCompilerService"))
		(require-not (xpc-service-name "com.apple.coremedia.decompressionsession.xpc"))
		(require-not (xpc-service-name "com.apple.coremedia.compressionsession.xpc"))
		(extension com.apple.security.exception.mach-lookup.global-name)
		(extension com.apple.security.exception.mach-lookup.local-name)
		(global-name "com.apple.appleneuralengine")
		(require-any
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)
				(require-any
					(xpc-service-name-regex #".+")
					(xpc-service-name "com.apple.WebKit.")
					(xpc-service-name "com.apple.CoreGraphics.CGPDFService")))
			(require-all
				(global-name "com.apple.lsd.openurl")
				(global-name "com.apple.tccd")
				(global-name "com.apple.lsd.advertisingidentifiers")
				(xpc-service-name-regex #".+")))))
(deny syscall-unix
	(c1 29e1 504e 9ce0))
(deny system-fsctl
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 28))
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 18))
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 27))))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
		(require-not (preference-domain "com.apple.coreimage"))
		(require-not (preference-domain "com.apple.deferredmediad"))
		(require-not (preference-domain "com.apple.celestial"))
		(require-any
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true com.apple.itunesstored.private)
				(process-attribute is-apple-signed-executable))
			(require-all
				(require-not (preference-domain "com.apple.coremedia"))
				(require-not (preference-domain "com.apple.coreaudio"))
				(require-not (preference-domain "com.apple.mobileipod"))
				(require-not (preference-domain "com.apple.avfoundation"))
				(preference-domain "com.apple.corevideo")
				(preference-domain "com.apple.opengl")))))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.coreimage"))
		(preference-domain "com.apple.deferredmediad")))
(deny storage-class-map)
