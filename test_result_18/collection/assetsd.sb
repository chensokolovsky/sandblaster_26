(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-not (subpath-prefix "${HOME}/Media/DCIM"))
		(require-not (subpath-prefix "${HOME}/Media/Photos"))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-not (subpath-prefix "${HOME}/Media/DCIM"))
		(require-not (subpath-prefix "${HOME}/Media/Photos"))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-not (subpath-prefix "${HOME}/Media/DCIM"))
		(require-not (subpath-prefix "${HOME}/Media/Photos"))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-not (subpath-prefix "${HOME}/Media/DCIM"))
		(require-not (subpath-prefix "${HOME}/Media/Photos"))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-not (subpath-prefix "${HOME}/Media/DCIM"))
		(require-not (subpath-prefix "${HOME}/Media/Photos"))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
	(require-all
		(extension-class "com.apple.corespotlightservice.read-write")
		(require-not (subpath-prefix "${HOME}/Media/PhotoData/Caches/search/Spotlight")))
	(require-all
		(extension-class "com.apple.avasset.read-only")
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/DCIM")))
	(require-all
		(extension com.apple.sandbox.application-group)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
				(extension-class "com.apple.quicklook.readonly")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.sharing.airdrop.readonly")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension-class "com.apple.wcd.readonly")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.spotlight-indexable")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(extension-class "com.apple.quicklook.readonly")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.sharing.airdrop.readonly")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension-class "com.apple.wcd.readonly")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.spotlight-indexable")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assetsd"))
						(require-any
							(require-all
								(subpath "/private/var/tmp/com.apple.assetsd")
								(extension-class "com.apple.app-sandbox.read-write")
								(extension-class "com.apple.app-sandbox.read")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.aned.read-only")
								(extension-class "com.apple.mediaserverd.read"))
							(require-all
								(require-any (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.assetsd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.assetsd"))
								(extension-class "com.apple.app-sandbox.read-write")
								(extension-class "com.apple.app-sandbox.read")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.aned.read-only")
								(extension-class "com.apple.mediaserverd.read"))))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-not (subpath-prefix "${HOME}/Media")))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assetsd"))
		(require-any
			(require-all
				(subpath "/private/var/tmp/com.apple.assetsd")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(require-any (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.assetsd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.assetsd"))
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.mediaserverd.read"))))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(require-not (extension com.apple.sandbox.executable)))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assetsd"))
		(require-any
			(require-all
				(subpath "/private/var/tmp/com.apple.assetsd")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(require-any (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.assetsd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.assetsd"))
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.mediaserverd.read"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assetsd"))
		(require-any
			(require-all
				(subpath "/private/var/tmp/com.apple.assetsd")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(require-any (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.assetsd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.assetsd"))
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.mediaserverd.read"))))
	(require-all
		(subpath-prefix "${HOME}/Media/PhotoStreamsData")
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.aned.read-only"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assetsd"))
		(require-any
			(require-all
				(subpath "/private/var/tmp/com.apple.assetsd")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(require-any (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.assetsd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.assetsd"))
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.mediaserverd.read"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assetsd"))
		(require-any
			(require-all
				(subpath "/private/var/tmp/com.apple.assetsd")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(require-any (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.assetsd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.assetsd"))
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.mediaserverd.read")))))
(deny file-link
	(require-all
		(subpath-prefix "${HOME}/Media")
		(process-attribute is-apple-signed-executable)))
(deny file-read*
	(require-all
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath-prefix "${HOME}/Library/Fonts"))
		(require-all (require-not (subpath-prefix "${HOME}/Documents/DemoPhotoLibrary"))
(require-not (subpath-prefix "${HOME}/Documents/DemoPhotoLibrary..prestage"))
(require-not (subpath-prefix "${HOME}/Library/Cookies/com.apple.assetsd.binarycookies"))
(require-not (subpath-prefix "${HOME}/Library/Wallpapers/Collections/Locket.photoslibrary"))
(require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.assetsd"))
(require-not (literal-prefix "${HOME}/Library/Logs/MobileBackup/MobileBackup-assetsd.log")))
		(require-not (subpath-prefix "${HOME}/Documents/DemoPhotoLibraryTemplate"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-not (subpath-prefix "${HOME}/Library/MediaStream"))
		(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/Photos"))
		(require-not (literal-prefix "${HOME}/Library/Caches/Checkpoint.plist"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Media/Photos"))
		(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CloudPhotoLibrary.aslgroup"))
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-not (subpath-prefix "${HOME}/Media/DCIM"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
		(require-any
			(require-any (literal "/usr/sbin/fairplayd")
(subpath-prefix "${HOME}/Library/FairPlay"))
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
			(require-all
				(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
				(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
				(require-not (literal "/private/var/preferences/com.apple.security.plist"))
				(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
				(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
				(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
					(require-all
						(entitlement-is-present com.apple.private.networkextension.configuration)
						(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
						(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
						(require-any
							(require-all
								(extension com.apple.sandbox.application-group)
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
										(subpath-prefix "${FRONT_USER_HOME}"))))
							(require-all
								(vnode-type REGULAR-FILE)
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assetsd")))
							(require-all
								(vnode-type DIRECTORY)
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assetsd")))
							(require-all
								(require-not (subpath "/private/var/tmp/com.apple.assetsd"))
								(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assetsd"))
								(require-all (require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.assetsd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.assetsd")))
								(require-any
									(require-all
										(entitlement-is-bool-true com.apple.Contacts.database-allow)
										(extension com.apple.tcc.kTCCServiceAddressBook)
										(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
										(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
										(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
									(require-all
										(extension com.apple.sandbox.application-group)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
										(literal "/private/var/")
										(require-any
											(extension com.apple.app-sandbox.read)
											(extension com.apple.app-sandbox.read-write)
											(extension com.apple.security.exception.files.absolute-path.read-only)
											(extension com.apple.security.exception.files.absolute-path.read-write)
											(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
											(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
											(require-all
												(literal "/private/var/PersonaVolumes/")
												(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
											(require-all
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
												(subpath-prefix "${FRONT_USER_HOME}")))))))))))))
(deny file-read-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-read-metadata
	(require-all
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath "/private/var/tmp/com.apple.assetsd"))
		(require-not (literal-prefix "${HOME}/Library/Logs/MobileBackup"))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assetsd"))
		(require-all (require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.assetsd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.assetsd")))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-any
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-not (literal-prefix "${HOME}/Library/Caches"))
				(require-not (literal-prefix "${HOME}/Library/Preferences"))
				(require-not (subpath-prefix "${HOME}/Media/DCIM"))
				(require-not (subpath-prefix "${HOME}/Media/Photos"))
				(process-attribute is-apple-signed-executable)
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}"))))))
(deny file-write*
	(require-all
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-all (require-not (subpath-prefix "${HOME}/Documents/DemoPhotoLibrary"))
(require-not (subpath-prefix "${HOME}/Documents/DemoPhotoLibrary..prestage"))
(require-not (subpath-prefix "${HOME}/Library/Cookies/com.apple.assetsd.binarycookies"))
(require-not (subpath-prefix "${HOME}/Library/Wallpapers/Collections/Locket.photoslibrary"))
(require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.assetsd"))
(require-not (literal-prefix "${HOME}/Library/Logs/MobileBackup/MobileBackup-assetsd.log")))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/Photos"))
		(require-not (subpath-prefix "${HOME}/Media/Photos"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Media/DCIM"))
		(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CloudPhotoLibrary.aslgroup"))
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assetsd"))
				(require-all (require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.assetsd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.assetsd")))
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(extension com.apple.tcc.kTCCServiceAddressBook)
						(require-any
							(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
							(require-all
								(vnode-type REGULAR-FILE)
								(require-not (literal-prefix "${HOME}/Library/AddressBook/"))
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assetsd")))))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assetsd")))
					(require-all
						(vnode-type DIRECTORY)
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assetsd"))))))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/Logs/MobileBackup"))
		(require-all (require-not (literal-prefix "${HOME}/Media/Memories"))
(require-not (literal-prefix "${HOME}/Media/MediaAnalysis")))
		(process-attribute is-apple-signed-executable)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (literal-prefix "${HOME}/Library/Caches")))
	(require-all
		(literal "/private/var/")
		(extension com.apple.sandbox.application-group)
		(require-any
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Preferences$"))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Preferences$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$")))))
(deny file-write-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
		(require-not (iokit-user-client-class "AGXDevice"))
		(require-not (iokit-user-client-class "AGXGLContext"))
		(require-not (iokit-user-client-class "AGXDeviceUserClient"))
		(require-not (iokit-user-client-class "AppleVideoToolboxParavirtualizationUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
		(require-not (iokit-user-client-class "RootDomainUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
		(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
		(require-not (extension com.apple.security.exception.iokit-user-client-class))
		(iokit-user-client-class "AGXCommandQueue")
		(iokit-user-client-class "AGXSharedUserClient")
		(require-any (iokit-connection "IOGPU")
(iokit-connection "IOGraphicsAccelerator2"))
		(iokit-user-client-class "IOGPUDeviceUserClient")
		(require-any (iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelSharedUserClient2"))
		(require-any (iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelSubmitter2")
(iokit-user-client-class "IOAccelSharedUserClient"))
		(iokit-user-client-class "AppleKeyStoreUserClient")))
(deny iokit-open-service
	(require-all
		(require-not (iokit-user-client-class "AppleJPEGDriver"))
		(require-not (iokit-user-client-class "AGXAcceleratorG"))
		(require-not (iokit-user-client-class "IOSurfaceRoot"))
		(require-all (require-not (iokit-user-client-class "AppleCLCD"))
(require-not (iokit-user-client-class "AppleParavirtDisplay")))
		(require-not (iokit-user-client-class "AppleParavirtGPU"))))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.mediaserverd"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.accessories.transport-server"))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.coremedia.decompressionsession"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
		(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
		(require-not (global-name "com.apple.contactsd"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
		(require-not (global-name "com.apple.routined.registration"))
		(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.mobile.keybagd.UserManager.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
		(require-not (global-name "com.apple.CARenderServer"))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-not (global-name "com.apple.mediaanalysisd.analysis"))
		(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
		(require-not (global-name "com.apple.coreduetd"))
		(require-not (global-name "com.apple.SharingServices"))
		(require-not (global-name "com.apple.cloudasset.cloudd"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
		(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
		(require-not (global-name "com.apple.cloudphotod"))
		(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.assetsd.changehub"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.mobile.usermanagerd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.ckdiscretionaryd"))
		(require-all (require-not (global-name "com.apple.CloudPhotoDerivativeGenerator"))
(require-not (global-name "com.apple.coremedia.deferredmedia.photoprocessor")))
		(require-not (global-name "com.apple.siri.vocabularyupdates"))
		(require-not (global-name "com.apple.backupd"))
		(require-not (global-name "com.apple.mediastream.mstreamd"))
		(require-not (global-name "com.apple.accessories.externalaccessory-server"))
		(require-all (require-not (global-name "com.apple.coremedia.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mutablecomposition.xpc"))
(require-not (global-name "com.apple.coremedia.mediaparserd.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.mutablecomposition.xpc")))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-all (require-not (global-name "com.apple.cvmsServ"))
(require-not (global-name "com.apple.gpumemd.source")))
		(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
		(require-not (global-name "com.apple.FSEvents"))
		(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.photos.service"))
		(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.itunesstored.xpc"))
		(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
		(require-not (global-name "com.apple.backboard.hid.services"))
		(require-not (global-name "com.apple.cache_delete"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.coremedia.videocompositor"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
		(require-not (global-name "com.apple.spotlight.IndexAgent"))
		(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
		(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.cloudd"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.pegasus"))
		(require-not (global-name "com.apple.coremedia.cameraviewfinder"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
		(require-not (global-name "com.apple.privacyaccountingd"))
		(require-not (global-name "com.apple.corespotlightservice"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
		(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.coreduetd.knowledge"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.coremedia.sandboxserver"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.timesync.ptp.manager"))
		(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.mediastream.sharing"))
		(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.coremedia.player.xpc"))
		(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.ABDatabaseDoctor"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
		(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
		(require-not (global-name "com.apple.backboard.hid-services.xpc"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(require-not (global-name "com.apple.photoanalysisd"))
		(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
		(require-not (global-name "com.apple.usernotifications.listener"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
		(require-not (global-name "com.apple.coremedia.sts"))
		(require-not (global-name "com.apple.itunescloudd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
		(require-not (global-name "com.apple.frontboard.systemappservices"))
		(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
		(require-not (global-name "com.apple.ak.anisette.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
		(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(require-not (xpc-service-name "com.apple.AGXCompilerService"))
		(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
		(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
		(require-not (xpc-service-name "com.apple.MTLCompilerService"))
		(require-not (xpc-service-name "com.apple.coremedia.decompressionsession.xpc"))
		(require-not (extension com.apple.sandbox.application-group))
		(require-not (global-name "com.apple.lsd.openurl"))
		(require-not (global-name "com.apple.tccd"))
		(require-not (global-name "com.apple.lsd.advertisingidentifiers"))
		(require-not (extension com.apple.security.exception.mach-lookup.global-name))
		(require-not (extension com.apple.security.exception.mach-lookup.local-name))
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(global-name "com.apple.ckdiscretionaryd.debug")
			(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
			(global-name "com.apple.cloudkit.partlycloudd")
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny syscall-unix
	(c1 0b6c 78e6 9ce0))
(deny sysctl-read
	(require-not (sysctl-name "kern.proc.all")))
(deny system-fsctl
	(require-all
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 71)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "h" 29)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 73)))
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 32))
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 3))
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 28))
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 18))
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 27))))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.assetsd"))
		(require-not (preference-domain "com.apple.UIKit"))
		(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.mmcs"))
		(require-not (preference-domain "com.apple.camera"))
		(require-not (preference-domain "com.apple.DataDeliveryServices"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.mobileslideshow"))
		(require-not (preference-domain "com.apple.iclouddrive.features"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.SocialLayer"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-any
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true com.apple.itunesstored.private)
				(process-attribute is-apple-signed-executable))
			(require-all
				(require-not (preference-domain "com.apple.Metal"))
				(require-not (preference-domain "com.apple.coremedia"))
				(require-not (preference-domain "com.apple.coreaudio"))
				(require-not (preference-domain "com.apple.CFNetwork"))
				(require-not (preference-domain "com.apple.mobileipod"))
				(require-not (preference-domain "com.apple.avfoundation"))
				(require-not (preference-domain "com.apple.opengl"))
				(require-not (preference-domain "com.apple.CloudKit"))
				(require-not (preference-domain "com.apple.GEO"))
				(require-not (preference-domain "com.apple.corevideo"))
				(require-not (preference-domain "com.apple.CoreDuet"))
				(require-not (preference-domain "com.apple.DataMigration"))
				(require-not (preference-domain "com.apple.icloud.findmydeviced.postwipe"))
				(require-not (preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
				(require-not (preference-domain "com.apple.AppSupport"))
				(preference-domain "com.apple.AOSNotification.public.notbackedup")
				(preference-domain "com.apple.PeoplePicker")))))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.assetsd"))
		(require-not (preference-domain "com.apple.camera"))
		(preference-domain "com.apple.mobileslideshow")))
(deny storage-class-map)
