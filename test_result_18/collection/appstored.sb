(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AppleMediaServices"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iTunesStore"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AppleMediaServices"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iTunesStore"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AppleMediaServices"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iTunesStore"))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AppleMediaServices"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iTunesStore"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AppleMediaServices"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iTunesStore"))))
	(require-all
		(extension-class "com.apple.odr-assets")
		(require-all (require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks"))
(require-not (subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))))
	(require-all
		(extension-class "com.apple.StreamingUnzipService")
		(require-not (regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/Library/Caches/Scratch"))
		(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.installcoordinationd/Library/InstallCoordination/PromiseStaging"))))
(deny file-read*
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.StoreServices"))
		(require-not (subpath-prefix "${HOME}/Library/Fonts"))
		(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
		(require-not (subpath "/private/var/containers/Bundle"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
		(require-not (subpath "/Developer/Applications"))
		(require-not (literal "/private/var/preferences/com.apple.security.plist"))
		(require-not (literal "/usr/local/bin/asclient"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.appstored"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.appstored"))
(require-not (literal-prefix "${HOME}/Library/Cookies"))
(require-not (literal-prefix "${HOME}/Library/Cookies/com.apple.appstored.binarycookies"))
(require-not (subpath-prefix "${HOME}/Library/OnDemandResources"))
(require-not (subpath-prefix "${HOME}/Library/Logs/AppleSupport"))
(require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/com.apple.AppleMediaServices.notbackedup")))
		(require-not (subpath-prefix "${HOME}/Library/com.apple.itunesstored"))
		(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.installcoordinationd/Library/InstallCoordination/PromiseStaging"))
		(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
		(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.installcoordinationd/Library/InstallCoordination/Removability"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AppleMediaServices"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iTunesStore")))
		(require-not (literal "/usr/local/bin"))
		(require-not (subpath "/Applications"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-any
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored"))
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$")))
					(require-all
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit$")))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
						(require-not (process-attribute is-apple-signed-executable)))
					(require-all
						(entitlement-is-present com.apple.private.networkextension.configuration)
						(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iTunesStore"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleMediaServices"))))
			(require-all
				(vnode-type DIRECTORY)
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iTunesStore"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleMediaServices")))))))
(deny file-read-metadata
	(require-all
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AppleMediaServices"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iTunesStore")))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-not (literal-prefix "${HOME}"))
		(process-attribute is-apple-signed-executable)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(require-any
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(subpath-prefix "${HOME}/Library/Logs/com.apple.StoreServices")
				(subpath-prefix "${HOME}/Library/Fonts")
				(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
				(subpath "/private/var/containers/Bundle")
				(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
				(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
				(subpath "/Developer/Applications")
				(literal "/private/var/preferences/com.apple.security.plist")
				(literal "/usr/local/bin/asclient")
				(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
				(literal "/private/var/db/com.apple.networkextension.tracker-info")
				(require-any (subpath "/private/var/tmp/com.apple.appstored")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.appstored")
(literal-prefix "${HOME}/Library/Cookies")
(literal-prefix "${HOME}/Library/Cookies/com.apple.appstored.binarycookies")
(subpath-prefix "${HOME}/Library/OnDemandResources")
(subpath-prefix "${HOME}/Library/Logs/AppleSupport")
(subpath-prefix "${HOME}/Library/Logs/com.apple.appstored")
(subpath-prefix "${HOME}/Library/com.apple.AppleMediaServices.notbackedup"))
				(subpath-prefix "${HOME}/Library/com.apple.itunesstored")
				(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.installcoordinationd/Library/InstallCoordination/PromiseStaging")
				(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
				(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.installcoordinationd/Library/InstallCoordination/Removability")
				(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
				(require-any (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.appstored")
(subpath-prefix "${HOME}/Library/Caches/com.apple.AppleMediaServices")
(subpath-prefix "${HOME}/Library/Caches/com.apple.appstored")
(subpath-prefix "${HOME}/Library/Caches/com.apple.iTunesStore"))
				(literal "/usr/local/bin")
				(subpath "/Applications")
				(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
				(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
				(require-any
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$"))
							(require-all
								(subpath-prefix "${HOME}")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit$"))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
								(process-attribute is-apple-signed-executable))
							(require-all
								(entitlement-is-present com.apple.private.networkextension.configuration)
								(literal "/private/var/preferences/com.apple.networkextension.plist"))))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.appstored")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iTunesStore")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleMediaServices")))
					(require-all
						(vnode-type DIRECTORY)
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.appstored")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iTunesStore")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleMediaServices"))))))))
(deny file-write*
	(require-all
		(require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.StoreServices"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.appstored"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.appstored"))
(require-not (literal-prefix "${HOME}/Library/Cookies"))
(require-not (literal-prefix "${HOME}/Library/Cookies/com.apple.appstored.binarycookies"))
(require-not (subpath-prefix "${HOME}/Library/OnDemandResources"))
(require-not (subpath-prefix "${HOME}/Library/Logs/AppleSupport"))
(require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/com.apple.AppleMediaServices.notbackedup")))
		(require-not (subpath-prefix "${HOME}/Library/com.apple.itunesstored"))
		(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.installcoordinationd/Library/InstallCoordination/PromiseStaging"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AppleMediaServices"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.appstored"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iTunesStore")))
		(require-any
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]appstored")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit$")))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)/StoreKit$")))))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.appstored")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iTunesStore")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleMediaServices")))
			(require-all
				(vnode-type DIRECTORY)
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.appstored")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iTunesStore")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleMediaServices"))))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny file-write-xattr
	(require-all
		(xattr "com.apple.MobileBackup")
		(literal "/private/var/containers/Data/System/")
		(extension com.apple.sandbox.system-container)
		(require-not (regex #"^/private/var/containers/Data/System/[^/]+"))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
		(require-not (iokit-user-client-class "AGXCommandQueue"))
		(require-not (iokit-user-client-class "AGXDevice"))
		(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
		(require-not (iokit-user-client-class "IOGPUDeviceUserClient"))
		(require-all (require-not (iokit-user-client-class "IOAccelDevice2"))
(require-not (iokit-user-client-class "IOAccelContext2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient2")))
		(require-all (require-not (iokit-user-client-class "IOAccelDevice"))
(require-not (iokit-user-client-class "IOAccelContext"))
(require-not (iokit-user-client-class "IOAccelSubmitter2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient")))
		(require-not (iokit-user-client-class "AGXSharedUserClient"))
		(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
		(require-all (require-not (iokit-connection "IOGPU"))
(require-not (iokit-connection "IOGraphicsAccelerator2")))))
(deny iokit-open-service
	(require-all
		(require-not (iokit-user-client-class "AppleJPEGDriver"))
		(require-not (iokit-user-client-class "AGXAcceleratorG"))
		(require-not (iokit-user-client-class "IOSurfaceRoot"))
		(require-all (require-not (iokit-user-client-class "AppleCLCD"))
(require-not (iokit-user-client-class "AppleParavirtDisplay")))
		(require-not (iokit-user-client-class "AppleParavirtGPU"))))
(deny ipc-posix-sem*
	(require-not (ipc-posix-name "appstored.run-once")))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.fairplayd.versioned"))
		(require-not (global-name "com.apple.springboard.blockableservices"))
		(require-not (global-name "com.apple.passd.library"))
		(require-not (global-name "com.apple.mobile.installd"))
		(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
		(require-not (global-name "com.apple.lsd.xpc"))
		(require-not (global-name "com.apple.nanoprefsync"))
		(require-not (global-name "com.apple.mobile.keybagd.UserManager.xpc"))
		(require-not (global-name "com.apple.FileCoordination"))
		(require-not (global-name "com.apple.CARenderServer"))
		(require-not (global-name "com.apple.xpc.amstreatmentstoreservice"))
		(require-all (require-not (global-name "com.apple.cvmsServ"))
(require-not (global-name "com.apple.gpumemd.source")))
		(require-not (global-name "com.apple.seserviced.passkit-extensions"))
		(require-not (global-name "com.apple.apsd"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-not (global-name "com.apple.mobile.usermanagerd.xpc"))
		(require-not (global-name "com.apple.iconservices"))
		(require-not (global-name "com.apple.appconduitd.device-connection"))
		(require-not (global-name "com.apple.springboard.services"))
		(require-not (global-name "com.apple.lsd.modifydb"))
		(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
		(require-not (global-name "com.apple.cache_delete"))
		(require-not (global-name "com.apple.installcoordinationd"))
		(require-not (global-name "com.apple.corefollowup.agent"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.duetactivityscheduler"))
		(require-not (global-name "com.apple.AssetCacheLocatorService"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.lsd.installation"))
		(require-not (xpc-service-name "com.apple.MTLCompilerService"))
		(require-not (global-name "com.apple.ProgressReporting"))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (global-name "com.apple.usernotifications.listener"))
		(require-not (global-name "com.apple.NPKCompanionAgent.library"))
		(require-not (xpc-service-name "com.apple.AGXCompilerService"))
		(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
		(global-name "com.apple.accountsd.accountmanager")
		(global-name "com.apple.GSSCred")
		(global-name "com.apple.nehelper")
		(global-name "com.apple.securityd")
		(global-name "com.apple.SystemConfiguration.DNSConfiguration")
		(global-name "com.apple.networkscored")
		(global-name "com.apple.SystemConfiguration.NetworkInformation")
		(global-name "com.apple.powerlog.plxpclogger.xpc")
		(global-name "com.apple.SystemConfiguration.helper")
		(global-name "com.apple.commcenter.xpc")
		(global-name "com.apple.SystemConfiguration.configd")
		(global-name "com.apple.cfnetwork.cfnetworkagent")
		(global-name "com.apple.nesessionmanager")
		(global-name "com.apple.networkserviceproxy.fetch-token")
		(global-name "com.apple.dnssd.service")
		(global-name "com.apple.usymptomsd")
		(global-name "com.apple.trustd")
		(global-name "com.apple.SystemConfiguration.PPPController")
		(global-name "com.apple.commcenter.cupolicy.xpc")
		(global-name "com.apple.nsurlsessiond")
		(global-name "com.apple.symptomsd")
		(global-name "com.apple.AppSSO.service-xpc")
		(global-name "com.apple.symptoms.symptomsd.managed_events")
		(global-name "com.apple.iokit.powerdxpc")
		(global-name "com.apple.PowerManagement.control")
		(global-name "com.apple.networkd")
		(global-name "com.apple.cfnetwork.AuthBrokerAgent")
		(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
		(extension com.apple.security.exception.mach-lookup.global-name)
		(extension com.apple.security.exception.mach-lookup.local-name)
		(global-name "com.apple.marco")
		(global-name "com.apple.identityservicesd.embedded.auth")
		(global-name "com.apple.lsd.openurl")
		(global-name "com.apple.tccd")
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny syscall-unix
	(c1 0b6c 7d87 9ce0))
(deny sysctl-read
	(require-all
		(sysctl-name "kern.bootsessionuuid")
		(signing-identifier "com.apple.")))
(deny system-fsctl
	(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 2))))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.Metal"))
		(require-not (preference-domain "com.apple.CoreDuet"))
		(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
		(require-not (preference-domain "com.apple.nanoprefsyncd"))
		(require-not (preference-domain "com.apple.itunescloud"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.coremedia"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.mobileipod"))
		(require-not (preference-domain "com.apple.appstored"))
		(require-not (preference-domain "com.apple.itunesstored"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.opengl"))
		(require-not (preference-domain "com.apple.iclouddrive.features"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.AppleMediaServices"))
		(require-not (preference-domain "com.apple.asd"))
		(require-not (preference-domain "com.apple.purplebuddy"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.conference"))
		(preference-domain "com.apple.ids")
		(preference-domain "com.apple.marco")))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.itunescloud"))
		(require-not (preference-domain "com.apple.appstored"))
		(preference-domain "com.apple.AppleMediaServices")))
(deny storage-class-map)
