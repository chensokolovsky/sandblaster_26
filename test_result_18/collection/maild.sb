(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension com.apple.librarian.ubiquity-container)
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
		(require-not (extension com.apple.app-sandbox.read-write)))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
		(require-not (extension com.apple.app-sandbox.read-write)))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.app-sandbox.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.app-sandbox.read-write)))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (extension com.apple.app-sandbox.read-write)))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (extension com.apple.app-sandbox.read-write)))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-not (subpath-prefix "${HOME}/Library/Mail")))
	(require-all
		(extension-class "com.apple.spotlight-indexable")
		(require-not (subpath-prefix "${HOME}/Library/Mail")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(require-not (extension com.apple.sandbox.executable)))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-not (extension com.apple.app-sandbox.read-write)))
	(require-all
		(extension com.apple.sandbox.application-group)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
				(extension-class "com.apple.quicklook.readonly")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.sharing.airdrop.readonly")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension-class "com.apple.wcd.readonly")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.spotlight-indexable")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(extension-class "com.apple.quicklook.readonly")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.sharing.airdrop.readonly")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension-class "com.apple.wcd.readonly")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.spotlight-indexable")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
						(extension com.apple.odr-assets))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (subpath-prefix "${HOME}/Media/Purchases"))
		(literal "/private/var/")
		(subpath-prefix "${HOME}")
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(extension com.apple.usernotifications.attachments.read-only)
				(require-not (regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")))
			(require-all
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
		(extension com.apple.odr-assets))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-not (subpath-prefix "${HOME}/Media/Purchases"))
		(literal "/private/var/")
		(subpath-prefix "${HOME}")
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(extension com.apple.usernotifications.attachments.read-only)
				(require-not (regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")))
			(require-all
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension com.apple.security.exception.files.home-relative-path.read-write)
		(extension com.apple.security.exception.files.absolute-path.read-write)
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
		(extension com.apple.odr-assets))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath-prefix "${HOME}/Media/Purchases"))
		(literal "/private/var/")
		(subpath-prefix "${HOME}")
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(extension com.apple.usernotifications.attachments.read-only)
				(require-not (regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")))
			(require-all
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension com.apple.security.exception.files.home-relative-path.read-only)
		(extension com.apple.security.exception.files.absolute-path.read-only)
		(extension com.apple.security.exception.files.home-relative-path.read-write)
		(extension com.apple.security.exception.files.absolute-path.read-write)
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(extension com.apple.assets.read)
				(subpath "/private/var/MobileAsset")
				(subpath-prefix "${HOME}/Library/Assets"))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(extension com.apple.clouddocs.version))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(extension com.apple.clouddocs.version))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE)
				(extension com.apple.clouddocs.version))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE)
				(extension com.apple.clouddocs.version))))
	(require-all
		(subpath "/Library/Ringtones")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension com.apple.app-sandbox.read-write)
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(extension com.apple.security.exception.files.home-relative-path.read-write)
				(extension com.apple.tcc.kTCCServicePhotos))
			(require-all
				(extension com.apple.security.exception.files.absolute-path.read-write)
				(extension com.apple.tcc.kTCCServicePhotos))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(extension com.apple.tcc.kTCCServicePhotos)
				(extension com.apple.security.exception.files.home-relative-path.read-only)
				(extension com.apple.security.exception.files.absolute-path.read-only)
				(extension com.apple.security.exception.files.home-relative-path.read-write)
				(extension com.apple.security.exception.files.absolute-path.read-write))
			(require-all
				(subpath-prefix "${HOME}/Media")
				(extension com.apple.avasset.read-only)
				(extension com.apple.tcc.kTCCServicePhotos)))))
(deny file-mknod)
(deny file-read*
	(literal "/usr/sbin/fairplayd")
	(require-all
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
		(require-not (subpath-prefix "${HOME}/Library/Carrier Bundles"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
		(require-any
			(require-all
				(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?"))
				(require-not (extension com.apple.librarian.ubiquity-revision)))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
					(require-all
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
					(require-all
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
				(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
			(require-all
				(literal "/System/Library/Carrier Bundles/")
				(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
				(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$")
						(require-any
							(subpath-prefix "${HOME}")
							(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(require-not (subpath-prefix "${HOME}")))
							(require-all
								(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
								(require-not (extension com.apple.bulletindistributor.attachments.read-only)))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
								(subpath-prefix "${HOME}")
								(require-not (extension com.apple.usernotifications.attachments.read-only)))
							(require-all
								(require-not (subpath-prefix "${HOME}/Library/Fonts"))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
								(require-any
									(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
									(require-all
										(entitlement-is-bool-true com.apple.Contacts.database-allow)
										(extension com.apple.tcc.kTCCServiceAddressBook)
										(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
										(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
										(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
										(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
									(require-all
										(extension com.apple.sandbox.application-group)
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
												(literal "/private/var/")
												(require-any
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))
														(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${HOME}")
										(extension com.apple.tcc.kTCCServiceMediaLibrary)
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$"))
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))
									(require-all
										(extension com.apple.fileprovider.read-write)
										(require-all (require-not (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?")))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
										(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
									(require-all
										(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
										(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
										(require-not (literal "/private/var/preferences/com.apple.security.plist"))
										(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
										(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
										(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
										(require-all (require-not (subpath "/Library/Dictionaries"))
(require-not (subpath-prefix "${HOME}/Library/Dictionaries")))
										(require-not (literal-prefix "${HOME}/Library/Caches/DateFormats.plist"))
										(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
										(require-any
											(require-all
												(literal "/private/var/")
												(require-any
													(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
													(require-all
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
														(require-not (subpath-prefix "${FRONT_USER_HOME}")))
													(require-all
														(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
														(require-not (subpath-prefix "${HOME}"))
														(process-attribute is-apple-signed-executable)
														(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist")))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.plist")
														(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))))
											(require-all
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar"))
												(require-any
													(require-all
														(process-attribute is-apple-signed-executable)
														(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist")))
													(require-all
														(require-not (subpath-prefix "${HOME}/Library/Fonts"))
														(require-not (subpath "/Library/Audio/Tunings/Generic/Haptics"))
														(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
														(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache"))
														(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist"))
														(require-all (require-not (subpath-prefix "${HOME}/Library/VoiceServices/Assets"))
(require-not (subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice")))
														(require-not (subpath "/private/var/db/com.apple.naturallanguaged"))
														(require-not (literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
														(require-any
															(require-all
																(extension com.apple.assets.read)
																(require-not (subpath "/private/var/MobileAsset"))
																(require-not (subpath-prefix "${HOME}/Library/Assets")))
															(require-all
																(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
																(require-not (subpath "/Library/Ringtones"))
																(require-any
																	(require-all
																		(subpath-prefix "${HOME}/Library/ReplayKit")
																		(require-not (extension com.apple.replayd.read-only)))
																	(require-all
																		(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
																		(require-not (extension com.apple.Pasteboard-readonly)))
																	(require-all
																		(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
																		(require-not (extension com.apple.odr-assets)))
																	(require-all
																		(extension com.apple.fileprovider.read-write)
																		(require-all (require-not (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?")))
																		(literal "/private/var/")
																		(require-any
																			(require-all
																				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
																				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
																			(require-all
																				(subpath-prefix "${FRONT_USER_HOME}")
																				(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$"))
																				(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
																				(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
																	(require-all
																		(literal "/private/var/")
																		(subpath-prefix "${FRONT_USER_HOME}")
																		(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$"))
																		(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
																		(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))
																	(require-all
																		(extension com.apple.classkit.read-write)
																		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?"))
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
																		(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
																	(require-all
																		(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
																		(require-not (extension com.apple.librarian.ubiquity-revision)))
																	(require-all
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
																		(require-not (extension com.apple.librarian.ubiquity-revision)))
																	(require-all
																		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
																		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
																		(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
																	(require-all
																		(extension com.apple.librarian.ubiquity-container)
																		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
																		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
																		(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
																	(require-all
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
																		(require-not (extension com.apple.clouddocs.version)))
																	(require-all
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
																		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																		(require-not (extension com.apple.clouddocs.version)))
																	(require-all
																		(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
																		(vnode-type REGULAR-FILE)
																		(require-not (extension com.apple.clouddocs.version)))
																	(require-all
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
																		(vnode-type REGULAR-FILE)
																		(require-not (extension com.apple.clouddocs.version)))
																	(require-all
																		(subpath-prefix "${HOME}/Media")
																		(require-any
																			(require-all
																				(extension com.apple.tcc.kTCCServicePhotos)
																				(require-not (subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData"))
																				(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Metadata")))
																				(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
																				(require-not (subpath-prefix "${HOME}/Media/DCIM"))
																				(require-not (literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist"))
																				(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Sync"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Mutations")))
																				(require-not (extension com.apple.avasset.read-only))
																				(process-attribute is-platform-binary)
																				(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")))
																			(require-all
																				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																				(extension com.apple.identityservices.deliver))))
																	(require-all
																		(require-not (literal-prefix "${HOME}/Library/Caches/Checkpoint.plist"))
																		(require-any
																			(subpath-prefix "${HOME}/Library/FairPlay")
																			(require-all
																				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																				(extension com.apple.identityservices.deliver))))))))))))))))
					(require-all
						(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
						(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
						(require-not (literal "/private/var/preferences/com.apple.security.plist"))
						(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
						(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist"))
						(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
						(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")))))
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist"))
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.plist")
						(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))
					(require-all
						(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
						(require-not (extension com.apple.bulletindistributor.attachments.read-only)))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(require-not (subpath-prefix "${HOME}")))
							(require-all
								(subpath-prefix "${HOME}")
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
						(subpath-prefix "${HOME}")
						(require-not (extension com.apple.usernotifications.attachments.read-only)))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Fonts"))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
						(require-any
							(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
							(require-all
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(extension com.apple.tcc.kTCCServiceAddressBook)
								(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
								(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
								(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
								(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
							(require-all
								(extension com.apple.sandbox.application-group)
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
										(subpath-prefix "${FRONT_USER_HOME}"))
									(require-all
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
										(literal "/private/var/")
										(require-any
											(require-all
												(literal "/private/var/PersonaVolumes/")
												(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))
												(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(extension com.apple.tcc.kTCCServiceMediaLibrary)
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$"))
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))
							(require-all
								(extension com.apple.fileprovider.read-write)
								(require-all (require-not (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?")))
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
								(require-not (subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
								(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
							(require-all
								(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
								(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
								(require-not (literal "/private/var/preferences/com.apple.security.plist"))
								(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
								(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
								(require-all (require-not (subpath "/Library/Dictionaries"))
(require-not (subpath-prefix "${HOME}/Library/Dictionaries")))
								(require-not (literal-prefix "${HOME}/Library/Caches/DateFormats.plist"))
								(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
								(require-any
									(require-all
										(literal "/private/var/")
										(require-any
											(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
											(require-all
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
												(require-not (subpath-prefix "${FRONT_USER_HOME}")))
											(require-all
												(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
												(require-not (subpath-prefix "${HOME}"))
												(process-attribute is-apple-signed-executable)
												(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist")))
											(require-all
												(literal "/private/var/preferences/com.apple.networkextension.plist")
												(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar"))
										(require-any
											(require-all
												(process-attribute is-apple-signed-executable)
												(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist")))
											(require-all
												(require-not (subpath-prefix "${HOME}/Library/Fonts"))
												(require-not (subpath "/Library/Audio/Tunings/Generic/Haptics"))
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
												(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache"))
												(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist"))
												(require-all (require-not (subpath-prefix "${HOME}/Library/VoiceServices/Assets"))
(require-not (subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice")))
												(require-not (subpath "/private/var/db/com.apple.naturallanguaged"))
												(require-not (literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
												(require-any
													(require-all
														(extension com.apple.assets.read)
														(require-not (subpath "/private/var/MobileAsset"))
														(require-not (subpath-prefix "${HOME}/Library/Assets")))
													(require-all
														(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
														(require-not (subpath "/Library/Ringtones"))
														(require-any
															(require-all
																(subpath-prefix "${HOME}/Library/ReplayKit")
																(require-not (extension com.apple.replayd.read-only)))
															(require-all
																(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
																(require-not (extension com.apple.Pasteboard-readonly)))
															(require-all
																(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
																(require-not (extension com.apple.odr-assets)))
															(require-all
																(extension com.apple.fileprovider.read-write)
																(require-all (require-not (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?")))
																(literal "/private/var/")
																(require-any
																	(require-all
																		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
																		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
																	(require-all
																		(subpath-prefix "${FRONT_USER_HOME}")
																		(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$"))
																		(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
																		(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
															(require-all
																(literal "/private/var/")
																(subpath-prefix "${FRONT_USER_HOME}")
																(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$"))
																(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
																(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))
															(require-all
																(extension com.apple.classkit.read-write)
																(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?"))
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
																(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
															(require-all
																(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
																(require-not (extension com.apple.librarian.ubiquity-revision)))
															(require-all
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
																(require-not (extension com.apple.librarian.ubiquity-revision)))
															(require-all
																(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
																(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
																(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																(require-not (subpath-prefix "${FRONT_USER_HOME}")))
															(require-all
																(extension com.apple.librarian.ubiquity-container)
																(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
																(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
																(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																(require-not (subpath-prefix "${FRONT_USER_HOME}")))
															(require-all
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
																(require-not (extension com.apple.clouddocs.version)))
															(require-all
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
																(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																(require-not (extension com.apple.clouddocs.version)))
															(require-all
																(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
																(vnode-type REGULAR-FILE)
																(require-not (extension com.apple.clouddocs.version)))
															(require-all
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
																(vnode-type REGULAR-FILE)
																(require-not (extension com.apple.clouddocs.version)))
															(require-all
																(subpath-prefix "${HOME}/Media")
																(require-any
																	(require-all
																		(extension com.apple.tcc.kTCCServicePhotos)
																		(require-not (subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData"))
																		(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Metadata")))
																		(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
																		(require-not (subpath-prefix "${HOME}/Media/DCIM"))
																		(require-not (literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist"))
																		(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Sync"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Mutations")))
																		(require-not (extension com.apple.avasset.read-only))
																		(process-attribute is-platform-binary)
																		(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")))
																	(require-all
																		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																		(extension com.apple.identityservices.deliver))))
															(require-all
																(require-not (literal-prefix "${HOME}/Library/Caches/Checkpoint.plist"))
																(require-any
																	(subpath-prefix "${HOME}/Library/FairPlay")
																	(require-all
																		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																		(extension com.apple.identityservices.deliver)))))))))))))))))))
(deny file-read-data
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-read-metadata
	(literal "/usr/sbin/fairplayd")
	(require-all
		(require-not (literal "/private/var"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices"))
		(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-not (literal-prefix "${HOME}/Library/GameKit/Data"))
		(require-not (literal-prefix "${HOME}/Library"))
		(require-any
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))
			(require-all
				(vnode-type SYMLINK)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))
			(require-all
				(entitlement-is-bool-true com.apple.developer.group-session)
				(require-not (literal-prefix "${HOME}"))
				(require-not (literal-prefix "${HOME}/Library/Preferences")))
			(require-all
				(extension com.apple.tcc.kTCCServicePhotos)
				(require-not (literal-prefix "${HOME}"))
				(require-not (literal-prefix "${HOME}/Library/Preferences")))
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}"))
				(subpath-prefix "${HOME}/Library/Carrier Bundles")
				(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?"))
						(extension com.apple.librarian.ubiquity-revision))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
							(require-all
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
							(require-all
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
						(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
						(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(extension com.apple.clouddocs.version))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(extension com.apple.clouddocs.version))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE)
						(extension com.apple.clouddocs.version))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$")
								(require-any
									(subpath-prefix "${HOME}")
									(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(subpath-prefix "${HOME}"))
									(require-all
										(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
										(extension com.apple.bulletindistributor.attachments.read-only))
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
										(subpath-prefix "${HOME}")
										(extension com.apple.usernotifications.attachments.read-only))
									(require-all
										(subpath-prefix "${HOME}/Library/Fonts")
										(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
										(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
										(require-any
											(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
											(require-all
												(entitlement-is-bool-true com.apple.Contacts.database-allow)
												(extension com.apple.tcc.kTCCServiceAddressBook)
												(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
												(subpath-prefix "${HOME}/Library/AddressBook")
												(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
											(require-all
												(literal "/System/Library/Carrier Bundles/")
												(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
												(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
											(require-all
												(extension com.apple.sandbox.application-group)
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
														(literal "/private/var/")
														(require-any
															(require-all
																(literal "/private/var/PersonaVolumes/")
																(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${HOME}")
												(extension com.apple.tcc.kTCCServiceMediaLibrary)
												(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(extension com.apple.fileprovider.read-write)
												(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(process-attribute is-apple-signed-executable)
												(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
												(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
											(require-all
												(literal "/private/var/preferences/com.apple.networkd.plist")
												(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
												(literal "/private/var/preferences/com.apple.security.plist")
												(subpath "/private/var/containers/Data/System/com.apple.geod")
												(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
												(literal "/private/var/db/com.apple.networkextension.tracker-info")
												(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
												(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
												(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
												(require-any
													(require-all
														(literal "/private/var/")
														(require-any
															(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
															(require-all
																(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
																(subpath-prefix "${FRONT_USER_HOME}"))
															(require-all
																(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
																(subpath-prefix "${HOME}")
																(process-attribute is-apple-signed-executable)
																(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
															(require-all
																(literal "/private/var/preferences/com.apple.networkextension.plist")
																(entitlement-is-present com.apple.private.networkextension.configuration))))
													(require-all
														(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
														(require-any
															(require-all
																(process-attribute is-apple-signed-executable)
																(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
															(require-all
																(subpath-prefix "${HOME}/Library/Fonts")
																(subpath "/Library/Audio/Tunings/Generic/Haptics")
																(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
																(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
																(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
																(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
																(subpath "/private/var/db/com.apple.naturallanguaged")
																(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist")
																(require-any
																	(require-all
																		(extension com.apple.assets.read)
																		(subpath "/private/var/MobileAsset")
																		(subpath-prefix "${HOME}/Library/Assets"))
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
																		(subpath "/Library/Ringtones")
																		(require-any
																			(require-all
																				(subpath-prefix "${HOME}/Library/ReplayKit")
																				(extension com.apple.replayd.read-only))
																			(require-all
																				(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
																				(extension com.apple.Pasteboard-readonly))
																			(require-all
																				(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
																				(extension com.apple.odr-assets))
																			(require-all
																				(extension com.apple.fileprovider.read-write)
																				(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
																				(literal "/private/var/")
																				(require-any
																					(require-all
																						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
																						(subpath-prefix "${FRONT_USER_HOME}"))
																					(require-all
																						(subpath-prefix "${FRONT_USER_HOME}")
																						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))))
																			(require-all
																				(literal "/private/var/")
																				(subpath-prefix "${FRONT_USER_HOME}")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))
																			(require-all
																				(extension com.apple.classkit.read-write)
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
																				(literal "/private/var/")
																				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
																				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
																			(require-all
																				(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
																				(extension com.apple.librarian.ubiquity-revision))
																			(require-all
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
																				(extension com.apple.librarian.ubiquity-revision))
																			(require-all
																				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																				(subpath-prefix "${HOME}/Library/Mobile Documents")
																				(literal "/private/var/")
																				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																				(subpath-prefix "${FRONT_USER_HOME}"))
																			(require-all
																				(extension com.apple.librarian.ubiquity-container)
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																				(subpath-prefix "${HOME}/Library/Mobile Documents")
																				(literal "/private/var/")
																				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																				(subpath-prefix "${FRONT_USER_HOME}"))
																			(require-all
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
																				(extension com.apple.clouddocs.version))
																			(require-all
																				(literal "/private/var/")
																				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
																				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																				(extension com.apple.clouddocs.version))
																			(require-all
																				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
																				(vnode-type REGULAR-FILE)
																				(extension com.apple.clouddocs.version))
																			(require-all
																				(subpath-prefix "${HOME}/Media")
																				(require-any
																					(require-all
																						(extension com.apple.tcc.kTCCServicePhotos)
																						(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
																						(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
																						(subpath-prefix "${HOME}/Media/PhotoStreamsData")
																						(subpath-prefix "${HOME}/Media/DCIM")
																						(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
																						(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
																						(extension com.apple.avasset.read-only)
																						(process-attribute is-platform-binary)
																						(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))
																					(require-all
																						(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																						(extension com.apple.identityservices.deliver))))
																			(require-all
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
																				(vnode-type REGULAR-FILE)
																				(extension com.apple.clouddocs.version))
																			(require-all
																				(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
																				(require-any
																					(subpath-prefix "${HOME}/Library/FairPlay")
																					(require-all
																						(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																						(extension com.apple.identityservices.deliver))))))))))))))))
							(require-all
								(literal "/private/var/preferences/com.apple.networkd.plist")
								(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
								(literal "/private/var/preferences/com.apple.security.plist")
								(literal "/private/var/db/com.apple.networkextension.tracker-info")
								(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
								(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
								(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))))
					(require-all
						(process-attribute is-apple-signed-executable)
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
						(require-any
							(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.plist")
								(entitlement-is-present com.apple.private.networkextension.configuration))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(subpath-prefix "${HOME}"))
									(require-all
										(subpath-prefix "${HOME}")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))))
							(require-all
								(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
								(extension com.apple.bulletindistributor.attachments.read-only))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
								(subpath-prefix "${HOME}")
								(extension com.apple.usernotifications.attachments.read-only))
							(require-all
								(subpath-prefix "${HOME}/Library/Fonts")
								(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
								(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
								(require-any
									(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
									(require-all
										(entitlement-is-bool-true com.apple.Contacts.database-allow)
										(extension com.apple.tcc.kTCCServiceAddressBook)
										(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
										(subpath-prefix "${HOME}/Library/AddressBook")
										(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
										(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
										(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
									(require-all
										(extension com.apple.sandbox.application-group)
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
												(literal "/private/var/")
												(require-any
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${HOME}")
										(extension com.apple.tcc.kTCCServiceMediaLibrary)
										(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
									(require-all
										(extension com.apple.fileprovider.read-write)
										(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
										(subpath-prefix "${FRONT_USER_HOME}"))
									(require-all
										(process-attribute is-apple-signed-executable)
										(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
										(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
									(require-all
										(literal "/private/var/preferences/com.apple.networkd.plist")
										(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
										(literal "/private/var/preferences/com.apple.security.plist")
										(subpath "/private/var/containers/Data/System/com.apple.geod")
										(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
										(literal "/private/var/db/com.apple.networkextension.tracker-info")
										(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
										(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
										(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
										(require-any
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
													(require-all
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
														(subpath-prefix "${HOME}")
														(process-attribute is-apple-signed-executable)
														(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.plist")
														(entitlement-is-present com.apple.private.networkextension.configuration))))
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
												(require-any
													(require-all
														(process-attribute is-apple-signed-executable)
														(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
													(require-all
														(subpath-prefix "${HOME}/Library/Fonts")
														(subpath "/Library/Audio/Tunings/Generic/Haptics")
														(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
														(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
														(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
														(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
														(subpath "/private/var/db/com.apple.naturallanguaged")
														(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist")
														(require-any
															(require-all
																(extension com.apple.assets.read)
																(subpath "/private/var/MobileAsset")
																(subpath-prefix "${HOME}/Library/Assets"))
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
																(subpath "/Library/Ringtones")
																(require-any
																	(require-all
																		(subpath-prefix "${HOME}/Library/ReplayKit")
																		(extension com.apple.replayd.read-only))
																	(require-all
																		(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
																		(extension com.apple.Pasteboard-readonly))
																	(require-all
																		(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
																		(extension com.apple.odr-assets))
																	(require-all
																		(extension com.apple.fileprovider.read-write)
																		(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
																		(literal "/private/var/")
																		(require-any
																			(require-all
																				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
																				(subpath-prefix "${FRONT_USER_HOME}"))
																			(require-all
																				(subpath-prefix "${FRONT_USER_HOME}")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))))
																	(require-all
																		(literal "/private/var/")
																		(subpath-prefix "${FRONT_USER_HOME}")
																		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))
																	(require-all
																		(extension com.apple.classkit.read-write)
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
																		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
																	(require-all
																		(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
																		(extension com.apple.librarian.ubiquity-revision))
																	(require-all
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
																		(extension com.apple.librarian.ubiquity-revision))
																	(require-all
																		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																		(subpath-prefix "${HOME}/Library/Mobile Documents")
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																		(subpath-prefix "${FRONT_USER_HOME}"))
																	(require-all
																		(extension com.apple.librarian.ubiquity-container)
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																		(subpath-prefix "${HOME}/Library/Mobile Documents")
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																		(subpath-prefix "${FRONT_USER_HOME}"))
																	(require-all
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
																		(extension com.apple.clouddocs.version))
																	(require-all
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
																		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																		(extension com.apple.clouddocs.version))
																	(require-all
																		(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
																		(vnode-type REGULAR-FILE)
																		(extension com.apple.clouddocs.version))
																	(require-all
																		(subpath-prefix "${HOME}/Media")
																		(require-any
																			(require-all
																				(extension com.apple.tcc.kTCCServicePhotos)
																				(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
																				(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
																				(subpath-prefix "${HOME}/Media/PhotoStreamsData")
																				(subpath-prefix "${HOME}/Media/DCIM")
																				(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
																				(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
																				(extension com.apple.avasset.read-only)
																				(process-attribute is-platform-binary)
																				(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))
																			(require-all
																				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																				(extension com.apple.identityservices.deliver))))
																	(require-all
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
																		(vnode-type REGULAR-FILE)
																		(extension com.apple.clouddocs.version))
																	(require-all
																		(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
																		(require-any
																			(subpath-prefix "${HOME}/Library/FairPlay")
																			(require-all
																				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																				(extension com.apple.identityservices.deliver))))))))))))))))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE)
						(extension com.apple.clouddocs.version))))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}"))
				(subpath-prefix "${HOME}/Library/Carrier Bundles")
				(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?"))
						(extension com.apple.librarian.ubiquity-revision))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
							(require-all
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
							(require-all
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
						(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
						(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(extension com.apple.clouddocs.version))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(extension com.apple.clouddocs.version))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE)
						(extension com.apple.clouddocs.version))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$")
								(require-any
									(subpath-prefix "${HOME}")
									(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(subpath-prefix "${HOME}"))
									(require-all
										(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
										(extension com.apple.bulletindistributor.attachments.read-only))
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
										(subpath-prefix "${HOME}")
										(extension com.apple.usernotifications.attachments.read-only))
									(require-all
										(subpath-prefix "${HOME}/Library/Fonts")
										(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
										(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
										(require-any
											(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
											(require-all
												(entitlement-is-bool-true com.apple.Contacts.database-allow)
												(extension com.apple.tcc.kTCCServiceAddressBook)
												(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
												(subpath-prefix "${HOME}/Library/AddressBook")
												(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
											(require-all
												(literal "/System/Library/Carrier Bundles/")
												(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
												(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
											(require-all
												(extension com.apple.sandbox.application-group)
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
														(literal "/private/var/")
														(require-any
															(require-all
																(literal "/private/var/PersonaVolumes/")
																(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${HOME}")
												(extension com.apple.tcc.kTCCServiceMediaLibrary)
												(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(extension com.apple.fileprovider.read-write)
												(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(process-attribute is-apple-signed-executable)
												(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
												(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
											(require-all
												(literal "/private/var/preferences/com.apple.networkd.plist")
												(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
												(literal "/private/var/preferences/com.apple.security.plist")
												(subpath "/private/var/containers/Data/System/com.apple.geod")
												(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
												(literal "/private/var/db/com.apple.networkextension.tracker-info")
												(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
												(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
												(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
												(require-any
													(require-all
														(literal "/private/var/")
														(require-any
															(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
															(require-all
																(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
																(subpath-prefix "${FRONT_USER_HOME}"))
															(require-all
																(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
																(subpath-prefix "${HOME}")
																(process-attribute is-apple-signed-executable)
																(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
															(require-all
																(literal "/private/var/preferences/com.apple.networkextension.plist")
																(entitlement-is-present com.apple.private.networkextension.configuration))))
													(require-all
														(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
														(require-any
															(require-all
																(process-attribute is-apple-signed-executable)
																(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
															(require-all
																(subpath-prefix "${HOME}/Library/Fonts")
																(subpath "/Library/Audio/Tunings/Generic/Haptics")
																(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
																(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
																(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
																(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
																(subpath "/private/var/db/com.apple.naturallanguaged")
																(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist")
																(require-any
																	(require-all
																		(extension com.apple.assets.read)
																		(subpath "/private/var/MobileAsset")
																		(subpath-prefix "${HOME}/Library/Assets"))
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
																		(subpath "/Library/Ringtones")
																		(require-any
																			(require-all
																				(subpath-prefix "${HOME}/Library/ReplayKit")
																				(extension com.apple.replayd.read-only))
																			(require-all
																				(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
																				(extension com.apple.Pasteboard-readonly))
																			(require-all
																				(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
																				(extension com.apple.odr-assets))
																			(require-all
																				(extension com.apple.fileprovider.read-write)
																				(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
																				(literal "/private/var/")
																				(require-any
																					(require-all
																						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
																						(subpath-prefix "${FRONT_USER_HOME}"))
																					(require-all
																						(subpath-prefix "${FRONT_USER_HOME}")
																						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))))
																			(require-all
																				(literal "/private/var/")
																				(subpath-prefix "${FRONT_USER_HOME}")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))
																			(require-all
																				(extension com.apple.classkit.read-write)
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
																				(literal "/private/var/")
																				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
																				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
																			(require-all
																				(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
																				(extension com.apple.librarian.ubiquity-revision))
																			(require-all
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
																				(extension com.apple.librarian.ubiquity-revision))
																			(require-all
																				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																				(subpath-prefix "${HOME}/Library/Mobile Documents")
																				(literal "/private/var/")
																				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																				(subpath-prefix "${FRONT_USER_HOME}"))
																			(require-all
																				(extension com.apple.librarian.ubiquity-container)
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																				(subpath-prefix "${HOME}/Library/Mobile Documents")
																				(literal "/private/var/")
																				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																				(subpath-prefix "${FRONT_USER_HOME}"))
																			(require-all
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
																				(extension com.apple.clouddocs.version))
																			(require-all
																				(literal "/private/var/")
																				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
																				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																				(extension com.apple.clouddocs.version))
																			(require-all
																				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
																				(vnode-type REGULAR-FILE)
																				(extension com.apple.clouddocs.version))
																			(require-all
																				(subpath-prefix "${HOME}/Media")
																				(require-any
																					(require-all
																						(extension com.apple.tcc.kTCCServicePhotos)
																						(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
																						(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
																						(subpath-prefix "${HOME}/Media/PhotoStreamsData")
																						(subpath-prefix "${HOME}/Media/DCIM")
																						(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
																						(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
																						(extension com.apple.avasset.read-only)
																						(process-attribute is-platform-binary)
																						(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))
																					(require-all
																						(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																						(extension com.apple.identityservices.deliver))))
																			(require-all
																				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
																				(vnode-type REGULAR-FILE)
																				(extension com.apple.clouddocs.version))
																			(require-all
																				(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
																				(require-any
																					(subpath-prefix "${HOME}/Library/FairPlay")
																					(require-all
																						(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																						(extension com.apple.identityservices.deliver))))))))))))))))
							(require-all
								(literal "/private/var/preferences/com.apple.networkd.plist")
								(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
								(literal "/private/var/preferences/com.apple.security.plist")
								(literal "/private/var/db/com.apple.networkextension.tracker-info")
								(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
								(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
								(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))))
					(require-all
						(process-attribute is-apple-signed-executable)
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
						(require-any
							(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.plist")
								(entitlement-is-present com.apple.private.networkextension.configuration))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(subpath-prefix "${HOME}"))
									(require-all
										(subpath-prefix "${HOME}")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))))
							(require-all
								(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
								(extension com.apple.bulletindistributor.attachments.read-only))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
								(subpath-prefix "${HOME}")
								(extension com.apple.usernotifications.attachments.read-only))
							(require-all
								(subpath-prefix "${HOME}/Library/Fonts")
								(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
								(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
								(require-any
									(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
									(require-all
										(entitlement-is-bool-true com.apple.Contacts.database-allow)
										(extension com.apple.tcc.kTCCServiceAddressBook)
										(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
										(subpath-prefix "${HOME}/Library/AddressBook")
										(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
										(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
										(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
									(require-all
										(extension com.apple.sandbox.application-group)
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
												(literal "/private/var/")
												(require-any
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${HOME}")
										(extension com.apple.tcc.kTCCServiceMediaLibrary)
										(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
									(require-all
										(extension com.apple.fileprovider.read-write)
										(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
										(subpath-prefix "${FRONT_USER_HOME}"))
									(require-all
										(process-attribute is-apple-signed-executable)
										(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
										(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
									(require-all
										(literal "/private/var/preferences/com.apple.networkd.plist")
										(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
										(literal "/private/var/preferences/com.apple.security.plist")
										(subpath "/private/var/containers/Data/System/com.apple.geod")
										(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
										(literal "/private/var/db/com.apple.networkextension.tracker-info")
										(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
										(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
										(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
										(require-any
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
													(require-all
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
														(subpath-prefix "${HOME}")
														(process-attribute is-apple-signed-executable)
														(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.plist")
														(entitlement-is-present com.apple.private.networkextension.configuration))))
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
												(require-any
													(require-all
														(process-attribute is-apple-signed-executable)
														(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
													(require-all
														(subpath-prefix "${HOME}/Library/Fonts")
														(subpath "/Library/Audio/Tunings/Generic/Haptics")
														(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
														(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
														(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
														(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
														(subpath "/private/var/db/com.apple.naturallanguaged")
														(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist")
														(require-any
															(require-all
																(extension com.apple.assets.read)
																(subpath "/private/var/MobileAsset")
																(subpath-prefix "${HOME}/Library/Assets"))
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
																(subpath "/Library/Ringtones")
																(require-any
																	(require-all
																		(subpath-prefix "${HOME}/Library/ReplayKit")
																		(extension com.apple.replayd.read-only))
																	(require-all
																		(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
																		(extension com.apple.Pasteboard-readonly))
																	(require-all
																		(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
																		(extension com.apple.odr-assets))
																	(require-all
																		(extension com.apple.fileprovider.read-write)
																		(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
																		(literal "/private/var/")
																		(require-any
																			(require-all
																				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
																				(subpath-prefix "${FRONT_USER_HOME}"))
																			(require-all
																				(subpath-prefix "${FRONT_USER_HOME}")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))))
																	(require-all
																		(literal "/private/var/")
																		(subpath-prefix "${FRONT_USER_HOME}")
																		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))
																	(require-all
																		(extension com.apple.classkit.read-write)
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
																		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
																	(require-all
																		(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
																		(extension com.apple.librarian.ubiquity-revision))
																	(require-all
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
																		(extension com.apple.librarian.ubiquity-revision))
																	(require-all
																		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																		(subpath-prefix "${HOME}/Library/Mobile Documents")
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																		(subpath-prefix "${FRONT_USER_HOME}"))
																	(require-all
																		(extension com.apple.librarian.ubiquity-container)
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																		(subpath-prefix "${HOME}/Library/Mobile Documents")
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																		(subpath-prefix "${FRONT_USER_HOME}"))
																	(require-all
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
																		(extension com.apple.clouddocs.version))
																	(require-all
																		(literal "/private/var/")
																		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
																		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																		(extension com.apple.clouddocs.version))
																	(require-all
																		(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
																		(vnode-type REGULAR-FILE)
																		(extension com.apple.clouddocs.version))
																	(require-all
																		(subpath-prefix "${HOME}/Media")
																		(require-any
																			(require-all
																				(extension com.apple.tcc.kTCCServicePhotos)
																				(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
																				(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
																				(subpath-prefix "${HOME}/Media/PhotoStreamsData")
																				(subpath-prefix "${HOME}/Media/DCIM")
																				(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
																				(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
																				(extension com.apple.avasset.read-only)
																				(process-attribute is-platform-binary)
																				(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))
																			(require-all
																				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																				(extension com.apple.identityservices.deliver))))
																	(require-all
																		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
																		(vnode-type REGULAR-FILE)
																		(extension com.apple.clouddocs.version))
																	(require-all
																		(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
																		(require-any
																			(subpath-prefix "${HOME}/Library/FairPlay")
																			(require-all
																				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																				(extension com.apple.identityservices.deliver))))))))))))))))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE)
						(extension com.apple.clouddocs.version)))))))
(deny file-read-xattr
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension com.apple.revisiond.revision))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension com.apple.revisiond.revision))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension com.apple.revisiond.revision)))))
(deny file-test-existence
	(require-not (subpath-prefix "${HOME}/Media/Purchases"))
	(require-all
		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
		(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
		(literal "/private/var/")
		(require-any
			(require-all
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
				(require-not (subpath-prefix "${HOME}"))
				(process-attribute is-apple-signed-executable)
				(extension-path-ancestor 0)
				(require-any
					(require-any (literal "/bin/")
(literal "/sbin/")
(literal "/usr/bin/")
(literal "/usr/share/terminfo")
(literal "/private/etc/"))
					(require-all
						(literal "/dev/urandom")
						(literal "/dev/random")
						(literal "/")
						(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
						(subpath "/usr/lib")
						(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
						(subpath "/System")
						(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
						(require-any
							(require-any (literal "/private/var/Managed Preferences/mobile/")
(literal-prefix "${HOME}/Media/Recordings/")
(literal-prefix "${HOME}/Library/Recordings/")
(literal-prefix "${HOME}/Library/SMS/")
(literal-prefix "${HOME}/Library/SpringBoard/PushStore/")
(literal-prefix "${HOME}/Library/SpringBoard/ApplicationShortcuts/")
(literal-prefix "${HOME}/Library/OnDemandResources/Manifests/")
(literal-prefix "${HOME}/Library/CallServices/Ringtones/")
(literal-prefix "${HOME}/Library/Caches/BridgeIconCache/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.bird/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.CloudDocsUI.CloudSharing/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/containers/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/unprotected/containers/"))
							(literal-prefix "${HOME}/Library/Mobile Documents/")))))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))
	(require-all
		(extension com.apple.librarian.ubiquity-container)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
		(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
		(literal "/private/var/")
		(require-any
			(require-all
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
				(require-not (subpath-prefix "${HOME}"))
				(process-attribute is-apple-signed-executable)
				(extension-path-ancestor 0)
				(require-any
					(require-any (literal "/bin/")
(literal "/sbin/")
(literal "/usr/bin/")
(literal "/usr/share/terminfo")
(literal "/private/etc/"))
					(require-all
						(literal "/dev/urandom")
						(literal "/dev/random")
						(literal "/")
						(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
						(subpath "/usr/lib")
						(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
						(subpath "/System")
						(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
						(require-any
							(require-any (literal "/private/var/Managed Preferences/mobile/")
(literal-prefix "${HOME}/Media/Recordings/")
(literal-prefix "${HOME}/Library/Recordings/")
(literal-prefix "${HOME}/Library/SMS/")
(literal-prefix "${HOME}/Library/SpringBoard/PushStore/")
(literal-prefix "${HOME}/Library/SpringBoard/ApplicationShortcuts/")
(literal-prefix "${HOME}/Library/OnDemandResources/Manifests/")
(literal-prefix "${HOME}/Library/CallServices/Ringtones/")
(literal-prefix "${HOME}/Library/Caches/BridgeIconCache/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.bird/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.CloudDocsUI.CloudSharing/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/containers/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/unprotected/containers/"))
							(literal-prefix "${HOME}/Library/Mobile Documents/")))))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))
	(require-all
		(literal "/private/var/")
		(require-any
			(require-all
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
				(require-not (subpath-prefix "${HOME}"))
				(process-attribute is-apple-signed-executable)
				(extension-path-ancestor 0)
				(require-any
					(require-any (literal "/bin/")
(literal "/sbin/")
(literal "/usr/bin/")
(literal "/usr/share/terminfo")
(literal "/private/etc/"))
					(require-all
						(literal "/dev/urandom")
						(literal "/dev/random")
						(literal "/")
						(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
						(subpath "/usr/lib")
						(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
						(subpath "/System")
						(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
						(require-any
							(require-any (literal "/private/var/Managed Preferences/mobile/")
(literal-prefix "${HOME}/Media/Recordings/")
(literal-prefix "${HOME}/Library/Recordings/")
(literal-prefix "${HOME}/Library/SMS/")
(literal-prefix "${HOME}/Library/SpringBoard/PushStore/")
(literal-prefix "${HOME}/Library/SpringBoard/ApplicationShortcuts/")
(literal-prefix "${HOME}/Library/OnDemandResources/Manifests/")
(literal-prefix "${HOME}/Library/CallServices/Ringtones/")
(literal-prefix "${HOME}/Library/Caches/BridgeIconCache/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.bird/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.CloudDocsUI.CloudSharing/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/containers/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/unprotected/containers/"))
							(literal-prefix "${HOME}/Library/Mobile Documents/"))))))))
(deny file-write*
	(literal-prefix "${HOME}/Library/Preferences/com.apple.springboard.plist")
	(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
	(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
	(require-all
		(entitlement-is-bool-true com.apple.Contacts.database-allow)
		(extension com.apple.tcc.kTCCServiceAddressBook)
		(require-any
			(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-not (literal-prefix "${HOME}/Library/AddressBook/"))
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(require-not (extension com.apple.revisiond.staging)))
	(require-all
		(vnode-type DIRECTORY)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(require-not (extension com.apple.revisiond.staging)))
	(require-all
		(vnode-type SYMLINK)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(require-not (extension com.apple.revisiond.staging)))
	(require-all
		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
		(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(extension com.apple.librarian.ubiquity-container)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
		(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(extension com.apple.sandbox.application-group)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
	(require-all
		(extension com.apple.fileprovider.read-write)
		(require-all (require-not (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?")))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
		(subpath-prefix "${FRONT_USER_HOME}"))
	(require-all
		(process-attribute is-apple-signed-executable)
		(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
	(require-all
		(extension com.apple.fileprovider.read-write)
		(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
		(subpath-prefix "${FRONT_USER_HOME}"))
	(require-all
		(extension com.apple.classkit.read-write)
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(subpath-prefix "${HOME}/Library/Mobile Documents")
		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
		(extension com.apple.librarian.ubiquity-container))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
		(extension com.apple.librarian.ubiquity-container))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
		(extension com.apple.librarian.ubiquity-container))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
		(subpath-prefix "${FRONT_USER_HOME}")
		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
		(extension com.apple.librarian.ubiquity-container))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(extension com.apple.revisiond.staging))
	(require-all
		(vnode-type DIRECTORY)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(extension com.apple.revisiond.staging))
	(require-all
		(vnode-type SYMLINK)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(extension com.apple.revisiond.staging)))
(deny (with no-report) file-write-acl)
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-any (literal-prefix "${HOME}/Library/Preferences/com.apple.UIKit.plist")
(literal-prefix "${HOME}/Library/Preferences/com.apple.Accessibility.plist"))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))
		(process-attribute is-apple-signed-executable)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices")))
	(require-all
		(literal "/private/var/")
		(extension com.apple.sandbox.application-group)
		(require-any
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Preferences$"))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Preferences$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))))
(deny file-write-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
		(require-not (extension com.apple.identityservices.deliver)))
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-not (iokit-user-client-class "IOHIDLibUserClient")))
	(require-all
		(require-not (iokit-user-client-class "IOGPUDeviceUserClient"))
		(require-all (require-not (iokit-user-client-class "IOAccelDevice2"))
(require-not (iokit-user-client-class "IOAccelContext2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient2")))
		(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceSendRight"))
		(require-all (require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient")))
		(iokit-user-client-class "IOSurfaceAcceleratorClient")
		(iokit-user-client-class "AGXCommandQueue")
		(require-any (iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelSubmitter2")
(iokit-user-client-class "IOAccelSharedUserClient"))
		(iokit-user-client-class "AGXSharedUserClient")
		(iokit-user-client-class "AGXDevice")
		(iokit-user-client-class "AppleKeyStoreUserClient")
		(iokit-user-client-class "IOMobileFramebufferUserClient")
		(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
		(iokit-user-client-class "IOSurfaceRootUserClient")
		(require-any
			(require-all
				(iokit-user-client-class "ANEClientHintsUserClient")
				(entitlement-is-bool-true com.apple.private.ane.allow-set-client-hints))
			(require-all
				(require-any (iokit-connection "IOGPU")
(iokit-connection "IOGraphicsAccelerator2"))
				(extension com.apple.security.exception.iokit-user-client-class)
				(iokit-user-client-class "RootDomainUserClient")))))
(deny ipc-posix-sem*
	(require-not (semaphore-owner self)))
(deny ipc-posix-shm-write-create
	(require-not (ipc-posix-name)))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-not (global-name "com.apple.vibrationmanagerd"))
		(require-not (global-name "com.apple.fairplayd.versioned"))
		(require-not (global-name "com.apple.wcd"))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.springboard.blockableservices"))
		(require-not (global-name "com.apple.coremedia.compressionsession"))
		(require-not (global-name "com.apple.server.bluetooth.le.pipe.xpc"))
		(require-not (global-name "com.apple.certui.relay"))
		(require-not (global-name "com.apple.sessionservices"))
		(require-not (global-name "com.apple.replayd"))
		(require-not (global-name "com.apple.mediaserverd"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.server.bluetooth.le.att.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.passd.assertions"))
		(require-not (global-name "com.apple.librariand"))
		(require-not (global-name "com.apple.nearbyd.xpc.nearbyinteraction"))
		(require-not (global-name "com.apple.cvhwa.xpc"))
		(require-not (global-name "com.apple.mobile.installd"))
		(require-all (require-not (global-name "com.apple.inputanalyticsd"))
(require-not (global-name "com.apple.CameraOverlayAngel.application-service")))
		(require-not (global-name "com.apple.networking.captivenetworksupport"))
		(require-not (global-name "com.apple.fairplayd"))
		(require-not (global-name "com.apple.mobileassetd"))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.WebBookmarks.webbookmarksd"))
		(require-not (global-name "com.apple.locationd.synchronous"))
		(require-not (global-name "com.apple.coremedia.decompressionsession"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.bird"))
		(require-not (global-name "com.apple.VoiceOverTouch"))
		(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
		(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
		(require-not (global-name "com.apple.contactsd"))
		(require-not (global-name "com.apple.safarifetcherd"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.calaccessd"))
		(require-not (global-name "com.apple.calaccessd.xpc"))
		(require-all (require-not (global-name "com.apple.shazamd"))
(require-not (global-name "com.apple.SiriTTSService.TrialProxy")))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
		(require-not (global-name "com.apple.aps.alertprovider.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.coremedia.audiodeviceclock"))
		(require-not (global-name "com.apple.mobile.keybagd.UserManager.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
		(require-not (global-name "com.apple.commcenter.mobile-helper"))
		(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
		(require-not (global-name "com.apple.FileCoordination"))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (global-name "com.apple.mobilemail.services.xpc"))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-not (global-name "com.apple.mediaanalysisd.analysis"))
		(require-all (require-not (global-name "com.apple.accountsd.authmanager"))
(require-not (global-name "com.apple.accountsd.accessmanager")))
		(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
		(require-not (global-name "com.apple.coreduetd"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.mobile.keybagd.xpc"))
		(require-not (global-name "com.apple.mediaanalysisd.service.public"))
		(require-not (global-name "com.apple.unfreed"))
		(require-not (global-name "com.apple.passd.in-app-payment"))
		(require-not (global-name "com.apple.MobileInternetSharing"))
		(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
		(require-not (global-name "com.apple.mobileassetd.v2"))
		(require-all (require-not (global-name "com.apple.iapd.distributednotification.server"))
(require-not (global-name "com.apple.iap2d.distributednotification.server")))
		(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.apsd"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-not (global-name "com.apple.lskdd"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-not (global-name "com.apple.naturallanguaged"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.gamed"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.itdbprep.server"))
		(require-not (global-name "com.apple.bird.token"))
		(require-not (global-name "com.apple.imavagent.embedded.auth"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.assetsd.changehub"))
		(require-not (global-name "com.apple.revisiond"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
		(require-not (global-name "com.apple.backgroundassets.user"))
		(require-not (global-name "PurplePPTServer"))
		(require-not (global-name "com.apple.iapauthd.xpc"))
		(require-not (global-name "com.apple.fontservicesd"))
		(require-not (global-name "com.apple.parsecd"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-not (global-name "com.apple.syncdefaultsd"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.notificationcenter.widgetcontrollerconnection"))
		(require-not (global-name "com.apple.atc"))
		(require-not (global-name "com.apple.osanalytics.osanalyticshelper"))
		(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
		(require-not (global-name "com.apple.midiserver.io"))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-not (global-name "com.apple.marco"))
		(require-not (global-name "PurpleSystemAppPort"))
		(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.GameController.gamecontrollerd"))
		(require-not (global-name "com.apple.locationd.registration"))
		(require-not (global-name "com.apple.kvsd"))
		(require-all (require-not (global-name "com.apple.mDNSResponder"))
(require-not (global-name "com.apple.instruments.server.mig")))
		(require-not (global-name "com.apple.ClipServices.clipserviced"))
		(require-all (require-not (global-name "com.apple.coremedia.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mutablecomposition.xpc"))
(require-not (global-name "com.apple.coremedia.mediaparserd.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.mutablecomposition.xpc")))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.healthd.restriction"))
		(require-not (global-name "com.apple.server.bluetooth"))
		(require-not (global-name "com.apple.twitterd.server"))
		(require-not (global-name "com.apple.inputservice.input-ui-host"))
		(require-all (require-not (global-name "com.apple.cvmsServ"))
(require-not (global-name "com.apple.gpumemd.source")))
		(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
		(require-not (global-name "com.apple.FSEvents"))
		(require-not (global-name "com.apple.storekitd"))
		(require-not (global-name "com.apple.photos.service"))
		(require-not (global-name "com.apple.PointerUI.pointeruid.service"))
		(require-not (global-name "com.apple.remindd"))
		(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.itunesstored.xpc"))
		(require-not (global-name "com.apple.springboard"))
		(require-not (global-name "com.apple.cache_delete"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.coremedia.videocompositor"))
		(require-not (global-name "com.apple.audio.AudioUnitServer"))
		(require-not (global-name "com.apple.awdd"))
		(require-not (global-name "com.apple.midiserver"))
		(require-all (require-not (global-name "com.apple.iTunesStore.daemon"))
(require-not (global-name "com.apple.iTunesStore.daemon.deatchwatch"))
(require-not (global-name "com.apple.iTunesStore.daemon-notifications")))
		(require-not (global-name "com.apple.ak.authorizationservices.xpc"))
		(require-not (global-name "com.apple.homed.xpc"))
		(require-not (global-name "com.apple.ScreenTimeAgent"))
		(require-not (global-name "com.apple.FileProvider"))
		(require-not (global-name "com.apple.springboard.icongeneration"))
		(require-all (require-not (global-name "com.apple.iap2d"))
(require-not (global-name "com.apple.iaptransportd")))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.businessservicesd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.accountsd.oauthsigner"))
		(require-not (global-name "com.apple.healthd.server"))
		(require-not (global-name "com.apple.webfilterd"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.coremedia.videoqueue"))
		(require-not (global-name "com.apple.synapse.backlink-service"))
		(require-all (require-not (global-name "com.apple.ptpcamerad"))
(require-not (global-name "com.apple.widget.pushkit"))
(require-not (global-name "com.apple.gputools.producer"))
(require-not (global-name "com.apple.VoiceOverTouch.drag.xpc"))
(require-not (global-name "com.apple.FontServices.FontProviderLoader"))
(require-not (global-name "com.apple.relatived.public"))
(require-not (global-name "com.apple.relatived.status"))
(require-not (global-name "com.apple.testmanagerd"))
(require-not (global-name "com.apple.translation.text"))
(require-not (global-name "com.apple.DragUI.druid.source"))
(require-not (global-name "com.apple.DragUI.druid.destination"))
(require-not (global-name "com.apple.storekitservice"))
(require-not (global-name "com.apple.storekit.configuration.xpc"))
(require-not (global-name "com.apple.SpatialAudioXPCService"))
(require-not (global-name "com.apple.SensorKit.SKMediaEventsHelper"))
(require-not (global-name "com.apple.uikit.eyedropperd.service"))
(require-not (global-name "com.apple.uiintelligencesupport.agent"))
(require-not (global-name "com.apple.CoreMLModelSecurityService"))
(require-not (global-name "com.apple.ClockKit.CLKWatchFaceLibrary"))
(require-not (global-name "com.apple.IncomingCallNotifications.ICNotificationManagerHost"))
(require-not (global-name "com.apple.fullkeyboardaccess.drag.xpc"))
(require-not (global-name "com.apple.financed.service.financestore"))
(require-not (global-name "com.apple.icprefd-xpc"))
(require-not (global-name "com.apple.inputservice.keyboardui"))
(require-not (global-name "com.apple.iMessageAppsViewService.warmup-connection"))
(require-not (global-name "com.apple.homed.xpc.accessory-setup"))
(require-not (global-name "com.apple.handwritingd.pksettings"))
(require-not (global-name "com.apple.handwritingd.pkanalytics"))
(require-not (global-name "com.apple.managedappdistributiond.xpc"))
(require-not (global-name "com.apple.metrickit.xpc"))
(require-not (global-name "com.apple.metricmeasurement.MetricMeasurementHelper"))
(require-not (global-name "com.apple.chrono.controlcenter"))
(require-not (global-name "com.apple.chrono.widgetcenterconnection"))
(require-not (global-name "com.apple.corelocation.locationUI"))
(require-not (global-name "com.apple.commandandcontrol.drag.xpc"))
(require-not (global-name "com.apple.contactsd.support"))
(require-not (global-name "com.apple.contactsd.contact-provider"))
(require-not (global-name "com.apple.USDLib.FormatLoader"))
(require-not (global-name "com.apple.USDKit.FormatLoader"))
(require-not (global-name "com.apple.UIKit.OverlayUI.services"))
(require-not (global-name "com.apple.UIKit.SecureControlService"))
(require-not (global-name "com.apple.AccessorySetupUI"))
(require-not (global-name "com.apple.AppTrackingTransparency.EnforcementService"))
(require-not (global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent"))
(require-not (global-name "com.apple.dasd.end-prewarm"))
(require-not (global-name "com.apple.dt.xctestd.target"))
(require-not (global-name "com.apple.dt.testmanagerd.runner"))
(require-not (global-name "com.apple.dt.testmanagerd.uiprocess"))
(require-not (global-name "com.apple.donotdisturb.availability.service"))
(require-not (global-name "com.apple.donotdisturb.appconfiguration.service"))
(require-not (global-name "com.apple.assistivetouchd.drag.xpc"))
(require-not (global-name "com.apple.arkit.service.location"))
(require-not (global-name "com.apple.arkit.service.geoTracking"))
(require-not (global-name "com.apple.appprotectiond.extensioninfo"))
(require-not (global-name "com.apple.appprotectiond.extensionmonitor"))
(require-not (global-name "com.apple.ap.promotedcontent.attributionservice"))
(require-not (global-name "com.apple.ap.adprivacyd.attribution"))
(require-not (global-name "com.apple.ap.adprivacyd.trackingtransparency")))
		(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
		(require-not (global-name "com.apple.VoiceOverTouch.xpc"))
		(require-not (global-name "com.apple.spotlight.IndexAgent"))
		(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
		(require-not (global-name "com.apple.AccessibilityUIServer"))
		(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
		(require-all (require-not (global-name "com.apple.prdaily"))
(require-not (global-name "com.apple.fileprovider.pushkit"))
(require-not (global-name "com.apple.gizmoappd"))
(require-not (global-name "com.apple.gamed.note"))
(require-not (global-name "com.apple.vsassetd"))
(require-not (global-name "com.apple.videoconference.avconference"))
(require-not (global-name "com.apple.AdSheetPad.server"))
(require-not (global-name "com.apple.AdSheetPhone.server"))
(require-not (global-name "com.apple.scrod"))
(require-not (global-name "com.apple.sandboxd"))
(require-not (global-name "com.apple.springboard.watchdogserver"))
(require-not (global-name "com.apple.weibod.server"))
(require-not (global-name "com.apple.wapi.client"))
(require-not (global-name "com.apple.watchconnectivity.complication"))
(require-not (global-name "com.apple.datamigrator.dz"))
(require-not (global-name "com.apple.distributed_notifications@0v3"))
(require-not (global-name "com.apple.cvmsCompAgent_armv7"))
(require-not (global-name "com.apple.coremedia.wirelessdisplay"))
(require-not (global-name "com.apple.coremedia.wirelessdisplayserver"))
(require-not (global-name "com.apple.iapauthd"))
(require-not (global-name "com.apple.itunescloudd.tcchelper"))
(require-not (global-name "com.apple.iTunesStore.daemon.public"))
(require-not (global-name "com.apple.iTunesStore.daemon.notifications.public"))
(require-not (global-name "com.apple.telephonyutilities.remotelogdaemon"))
(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.voip"))
(require-not (global-name "com.apple.bypassBasebandAutoBooter.msgport"))
(require-not (global-name "com.apple.backboard.watchdog"))
(require-not (global-name "com.apple.backboard.workspaceserverconnection"))
(require-not (global-name "com.apple.MediaControl.daemon"))
(require-not (global-name "com.apple.Music.MPMusicPlayerMigServer"))
(require-not (global-name "com.apple.MobileFileIntegrity"))
(require-not (global-name "com.apple.MobileAccessoryUpdater"))
(require-not (global-name "com.apple.appleprofilepolicyd"))
(require-not (global-name "com.apple.ait.client"))
(require-not (global-name "com.apple.airplay.sender.xpc"))
(require-not (global-name "com.apple.audio.AudioFileServer"))
(require-not (global-name "com.apple.audio.AudioConverterServer"))
(require-not (global-name "com.apple.mediastream.sharing-nowake"))
(require-not (global-name "com.apple.managedconfiguration.mdmdservice"))
(require-not (global-name "com.apple.mobileipod.MPMusicPlayerControllerInternal"))
(require-not (global-name "com.apple.mobileipod.MPMusicPlayerMigServer"))
(require-not (global-name "com.apple.mobileipod.MPMusicPlayerMigServerExists")))
		(require-not (global-name "com.apple.audio.AURemoteIOServer"))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.gamecenter"))
		(require-not (global-name "PurpleSystemEventPort"))
		(require-not (global-name "com.apple.bulletindistributord.server"))
		(require-not (global-name "com.apple.Music.MPMusicPlayerControllerInternal"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.webprivacyd"))
		(require-not (global-name "com.apple.mobile.softwareupdated"))
		(require-not (global-name "com.apple.pegasus"))
		(require-not (global-name "com.apple.iapd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.Music.MPMusicPlayerMigServerExists"))
		(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
		(require-not (global-name "com.apple.privacyaccountingd"))
		(require-not (global-name "com.apple.corespotlightservice"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
		(require-not (global-name "com.apple.medialibraryd.xpc"))
		(require-not (global-name "com.apple.ctkd.slot-client"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.webinspector"))
		(require-not (global-name "com.apple.coresymbolicationd"))
		(require-not (global-name "com.apple.cache_delete.public"))
		(require-not (global-name "com.apple.imagent.embedded.auth"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.coremedia.sandboxserver"))
		(require-not (global-name "com.apple.duetactivityscheduler"))
		(require-not (global-name "com.apple.iaptransportd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.timesync.ptp.manager"))
		(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
		(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.mediastream.sharing"))
		(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
		(require-not (global-name "com.apple.corerecents.recentsd"))
		(require-all (require-not (global-name "com.apple.commcenter.dm-helper"))
(require-not (global-name "com.apple.callkit.callsourcehost")))
		(require-not (global-name "com.apple.videoconference.camera"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.coremedia.player.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.cpe.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpe.xpc")))
		(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.locationd.spi"))
		(require-not (global-name "com.apple.ABDatabaseDoctor"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-not (global-name "com.apple.twitterd"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
		(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
		(require-not (global-name "com.apple.handwritingd.remoterecognition"))
		(require-not (global-name "com.apple.siri.VoiceShortcuts.xpc"))
		(require-all (require-not (global-name "com.apple.personad.xpc"))
(require-not (global-name "com.apple.suggestd.mail")))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
		(require-not (global-name "com.apple.ProgressReporting"))
		(require-all (require-not (global-name "com.apple.ReportCrash"))
(require-not (global-name "com.apple.ReportCrash.SafetyNet"))
(require-not (global-name "com.apple.ReportCrash.StackShot"))
(require-not (global-name "com.apple.ReportCrash.DirectoryService")))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
		(require-not (global-name "com.apple.spotlight.SearchAgent"))
		(require-not (global-name "com.apple.coremedia.sts"))
		(require-not (global-name "com.apple.itunescloudd.xpc"))
		(require-not (global-name "com.apple.devicecheckd"))
		(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
		(require-not (global-name "com.apple.appleneuralengine"))
		(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
		(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
		(require-not (global-name "com.apple.Safari.SafeBrowsing.Service"))
		(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
		(require-not (global-name "com.apple.triald.namespace-management"))
		(require-all (require-not (global-name "com.apple.dockaccessoryd"))
(require-not (global-name "com.apple.relatived.tempest")))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(require-not (xpc-service-name "com.apple.siri.context.service"))
		(require-not (xpc-service-name "com.apple.intents.intents-helper"))
		(require-all (require-not (xpc-service-name "com.apple.OSLogService"))
(require-not (xpc-service-name "com.apple.mscamerad-xpc"))
(require-not (xpc-service-name "com.apple.ModelIO.AssetLoader"))
(require-not (xpc-service-name "com.apple.PrintKit.PrinterTool"))
(require-not (xpc-service-name "com.apple.WorkoutKitXPCService"))
(require-not (xpc-service-name "com.apple.avkit.SharedPreferences"))
(require-not (xpc-service-name "com.apple.DocumentManagerCore.Rename"))
(require-not (xpc-service-name "com.apple.uifoundation-bundle-helper"))
(require-not (xpc-service-name "com.apple.BarcodeSupport.ParsingService"))
(require-not (xpc-service-name "com.apple.datadetectors.AddToRecentsService"))
(require-not (xpc-service-name "com.apple.ContactsUI.ContactsButtonXPCService"))
(require-not (xpc-service-name "com.apple.StocksKitService"))
(require-not (xpc-service-name "com.apple.SafariFoundation.AutoFillHelper"))
(require-not (xpc-service-name "com.apple.SafariFoundation.CredentialProviderExtensionHelper")))
		(require-not (xpc-service-name "com.apple.AGXCompilerService"))
		(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
		(require-not (xpc-service-name "com.apple.imfoundation.IMRemoteURLConnectionAgent"))
		(require-not (xpc-service-name "com.apple.textkit.nsattributedstringagent"))
		(require-not (xpc-service-name "com.apple.WebKit.WebAuthn"))
		(require-not (xpc-service-name "com.apple.accessibility.heard"))
		(require-not (xpc-service-name "com.apple.MTLCompilerService"))
		(require-not (xpc-service-name "com.apple.accessibility.AccessibilityUIServer"))
		(require-all (require-not (xpc-service-name "com.apple.WebKit.Networking"))
(require-not (xpc-service-name "com.apple.WebKit.WebContent")))
		(require-not (xpc-service-name "com.apple.WebKit.GPU"))
		(require-all (require-not (xpc-service-name "com.apple.iWorkFileFormat"))
(require-not (xpc-service-name "com.apple.CompassCalibration"))
(require-not (xpc-service-name "com.apple.CallKit.CallDirectory"))
(require-not (xpc-service-name "com.apple.SafariServices.ContentBlockerLoader")))
		(require-not (xpc-service-name "com.apple.WebKit.WebContent.CaptivePortal"))
		(require-not (xpc-service-name "com.apple.MapKit.SnapshotService"))
		(require-not (extension com.apple.sandbox.application-group))
		(require-not (extension com.apple.security.exception.mach-lookup.global-name))
		(require-not (extension com.apple.security.exception.mach-lookup.local-name))
		(require-any
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(require-not (process-attribute is-apple-signed-executable))
				(require-not (entitlement-is-bool-true com.apple.authkit.client))
				(require-not (entitlement-is-bool-true com.apple.authkit.client.private))
				(require-not (entitlement-is-bool-true com.apple.authkit.client.internal))
				(xpc-service-name)
				(xpc-service-name "com.apple.iconservices")
				(xpc-service-name "com.apple.externalaccessory.WACEAService")
				(xpc-service-name "com.apple.audio.analytics.service")
				(xpc-service-name)
				(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
				(xpc-service-name "com.apple.tonelibraryd")
				(require-any
					(global-name "com.apple.ckdiscretionaryd.debug")
					(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
					(global-name "com.apple.cloudkit.partlycloudd")
					(require-all
						(xpc-service-name-regex #".+")
						(require-any
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers"))))
					(require-all
						(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
						(global-name "com.apple.uikit.viewservice."))))
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(require-not (process-attribute is-apple-signed-executable))
				(require-not (entitlement-is-bool-true com.apple.authkit.client))
				(require-not (entitlement-is-bool-true com.apple.authkit.client.private))
				(require-not (entitlement-is-bool-true com.apple.authkit.client.internal))
				(xpc-service-name)
				(xpc-service-name "com.apple.iconservices")
				(xpc-service-name "com.apple.externalaccessory.WACEAService")
				(xpc-service-name "com.apple.audio.analytics.service")
				(xpc-service-name)
				(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
				(xpc-service-name "com.apple.tonelibraryd")
				(require-any
					(global-name "com.apple.ckdiscretionaryd.debug")
					(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
					(global-name "com.apple.cloudkit.partlycloudd")
					(require-all
						(xpc-service-name-regex #".+")
						(require-any
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers"))))
					(require-all
						(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
						(global-name "com.apple.uikit.viewservice."))))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(require-not (entitlement-is-bool-true com.apple.networkd.modify_settings))
				(require-not (entitlement-is-bool-true com.apple.networkd.disable_opportunistic))
				(require-not (entitlement-is-bool-true com.apple.networkd.advisory_socket))
				(require-not (entitlement-is-bool-true com.apple.networkd_privileged))
				(require-not (entitlement-is-bool-true com.apple.networkd.persistent_interface))
				(process-attribute is-apple-signed-executable)
				(require-not (global-name "com.apple.dataaccess.dataaccessd"))
				(require-not (global-name "com.apple.exchangesyncd"))
				(require-not (xpc-service-name "com.apple.ctcategories.service"))
				(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
			(require-all
				(global-name "com.apple.SafetyKit")
				(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
				(process-attribute is-apple-signed-executable)
				(require-not (global-name "com.apple.dataaccess.dataaccessd"))
				(require-not (global-name "com.apple.exchangesyncd"))
				(require-not (xpc-service-name "com.apple.ctcategories.service"))
				(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
			(require-all
				(global-name "com.apple.weatherkit.authservice")
				(require-not (entitlement-is-present com.apple.developer.weatherkit))
				(process-attribute is-apple-signed-executable)
				(require-not (global-name "com.apple.dataaccess.dataaccessd"))
				(require-not (global-name "com.apple.exchangesyncd"))
				(require-not (xpc-service-name "com.apple.ctcategories.service"))
				(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
			(require-all
				(global-name "com.apple.merchantd.identity")
				(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
				(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
				(process-attribute is-apple-signed-executable)
				(require-not (global-name "com.apple.dataaccess.dataaccessd"))
				(require-not (global-name "com.apple.exchangesyncd"))
				(require-not (xpc-service-name "com.apple.ctcategories.service"))
				(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
			(require-all
				(global-name "com.apple.merchantd.discovery")
				(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
				(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
				(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
				(process-attribute is-apple-signed-executable)
				(require-not (global-name "com.apple.dataaccess.dataaccessd"))
				(require-not (global-name "com.apple.exchangesyncd"))
				(require-not (xpc-service-name "com.apple.ctcategories.service"))
				(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
			(require-all
				(debug-mode)
				(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
			(require-all
				(global-name "com.apple.gputools.service")
				(debug-mode)
				(xpc-service-name)
				(xpc-service-name "com.apple.iconservices")
				(xpc-service-name "com.apple.externalaccessory.WACEAService")
				(xpc-service-name "com.apple.audio.analytics.service")
				(xpc-service-name)
				(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
				(xpc-service-name "com.apple.tonelibraryd")
				(require-any
					(global-name "com.apple.ckdiscretionaryd.debug")
					(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
					(global-name "com.apple.cloudkit.partlycloudd")
					(require-all
						(xpc-service-name-regex #".+")
						(require-any
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers"))))
					(require-all
						(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
						(global-name "com.apple.uikit.viewservice."))))
			(require-all
				(global-name "com.apple.callkit.networkextension.voip")
				(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
				(process-attribute is-apple-signed-executable)
				(require-not (global-name "com.apple.dataaccess.dataaccessd"))
				(require-not (global-name "com.apple.exchangesyncd"))
				(require-not (xpc-service-name "com.apple.ctcategories.service"))
				(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
			(require-all
				(global-name "com.apple.seserviced.credential.manager")
				(entitlement-is-present com.apple.developer.secure-element-credential)
				(xpc-service-name)
				(xpc-service-name "com.apple.iconservices")
				(xpc-service-name "com.apple.externalaccessory.WACEAService")
				(xpc-service-name "com.apple.audio.analytics.service")
				(xpc-service-name)
				(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
				(xpc-service-name "com.apple.tonelibraryd")
				(require-any
					(global-name "com.apple.ckdiscretionaryd.debug")
					(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
					(global-name "com.apple.cloudkit.partlycloudd")
					(require-all
						(xpc-service-name-regex #".+")
						(require-any
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers"))))
					(require-all
						(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
						(global-name "com.apple.uikit.viewservice."))))
			(require-all
				(global-name "com.apple.MomentsUIService")
				(require-not (entitlement-is-present com.apple.developer.journal.allow))
				(process-attribute is-apple-signed-executable)
				(require-not (global-name "com.apple.dataaccess.dataaccessd"))
				(require-not (global-name "com.apple.exchangesyncd"))
				(require-not (xpc-service-name "com.apple.ctcategories.service"))
				(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
			(require-all
				(global-name "com.apple.financed.service.coredatastore")
				(entitlement-is-present com.apple.finance.private)
				(entitlement-is-present com.apple.developer.financekit)
				(xpc-service-name)
				(xpc-service-name "com.apple.iconservices")
				(xpc-service-name "com.apple.externalaccessory.WACEAService")
				(xpc-service-name "com.apple.audio.analytics.service")
				(xpc-service-name)
				(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
				(xpc-service-name "com.apple.tonelibraryd")
				(require-any
					(global-name "com.apple.ckdiscretionaryd.debug")
					(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
					(global-name "com.apple.cloudkit.partlycloudd")
					(require-all
						(xpc-service-name-regex #".+")
						(require-any
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers"))))
					(require-all
						(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
						(global-name "com.apple.uikit.viewservice."))))
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (global-name "com.apple.SharedWebCredentials"))
				(require-not (global-name "com.apple.dataaccess.dataaccessd"))
				(require-not (global-name "com.apple.exchangesyncd"))
				(require-not (xpc-service-name "com.apple.ctcategories.service"))
				(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
			(require-all
				(global-name "com.apple.assessmentagent")
				(entitlement-is-present com.apple.developer.automatic-assessment-configuration)
				(xpc-service-name)
				(xpc-service-name "com.apple.iconservices")
				(xpc-service-name "com.apple.externalaccessory.WACEAService")
				(xpc-service-name "com.apple.audio.analytics.service")
				(xpc-service-name)
				(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
				(xpc-service-name "com.apple.tonelibraryd")
				(require-any
					(global-name "com.apple.ckdiscretionaryd.debug")
					(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
					(global-name "com.apple.cloudkit.partlycloudd")
					(require-all
						(xpc-service-name-regex #".+")
						(require-any
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers"))))
					(require-all
						(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
						(global-name "com.apple.uikit.viewservice."))))
			(require-all
				(global-name "com.apple.ThreadNetwork.xpc")
				(entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials)
				(xpc-service-name)
				(xpc-service-name "com.apple.iconservices")
				(xpc-service-name "com.apple.externalaccessory.WACEAService")
				(xpc-service-name "com.apple.audio.analytics.service")
				(xpc-service-name)
				(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
				(xpc-service-name "com.apple.tonelibraryd")
				(require-any
					(global-name "com.apple.ckdiscretionaryd.debug")
					(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
					(global-name "com.apple.cloudkit.partlycloudd")
					(require-all
						(xpc-service-name-regex #".+")
						(require-any
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers"))))
					(require-all
						(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
						(global-name "com.apple.uikit.viewservice."))))
			(require-all
				(global-name "com.apple.messages.critical-messaging")
				(entitlement-is-bool-true com.apple.developer.messages.critical-messaging)
				(xpc-service-name)
				(xpc-service-name "com.apple.iconservices")
				(xpc-service-name "com.apple.externalaccessory.WACEAService")
				(xpc-service-name "com.apple.audio.analytics.service")
				(xpc-service-name)
				(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
				(xpc-service-name "com.apple.tonelibraryd")
				(require-any
					(global-name "com.apple.ckdiscretionaryd.debug")
					(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
					(global-name "com.apple.cloudkit.partlycloudd")
					(require-all
						(xpc-service-name-regex #".+")
						(require-any
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers"))))
					(require-all
						(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
						(global-name "com.apple.uikit.viewservice."))))
			(require-all
				(global-name "com.apple.coreidvd.digital-presentment.xpc")
				(require-any
					(require-all
						(xpc-service-name)
						(xpc-service-name "com.apple.iconservices")
						(xpc-service-name "com.apple.externalaccessory.WACEAService")
						(xpc-service-name "com.apple.audio.analytics.service")
						(xpc-service-name)
						(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
						(xpc-service-name "com.apple.tonelibraryd")
						(require-any
							(global-name "com.apple.ckdiscretionaryd.debug")
							(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
							(global-name "com.apple.cloudkit.partlycloudd")
							(require-all
								(xpc-service-name-regex #".+")
								(require-any
									(require-all
										(global-name "com.apple.system.notification_center")
										(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
									(require-all
										(global-name "com.apple.lsd.openurl")
										(global-name "com.apple.tccd")
										(global-name "com.apple.lsd.advertisingidentifiers"))))
							(require-all
								(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
								(global-name "com.apple.uikit.viewservice."))))
					(require-all
						(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
						(entitlement-is-present com.apple.developer.in-app-identity-presentment))))
			(require-all
				(global-name "com.apple.ExposureNotification")
				(entitlement-is-bool-true com.apple.developer.exposure-notification)
				(xpc-service-name)
				(xpc-service-name "com.apple.iconservices")
				(xpc-service-name "com.apple.externalaccessory.WACEAService")
				(xpc-service-name "com.apple.audio.analytics.service")
				(xpc-service-name)
				(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
				(xpc-service-name "com.apple.tonelibraryd")
				(require-any
					(global-name "com.apple.ckdiscretionaryd.debug")
					(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
					(global-name "com.apple.cloudkit.partlycloudd")
					(require-all
						(xpc-service-name-regex #".+")
						(require-any
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers"))))
					(require-all
						(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
						(global-name "com.apple.uikit.viewservice."))))
			(require-all
				(global-name "com.apple.seserviced.session")
				(entitlement-is-bool-true com.apple.developer.carkey.session)
				(xpc-service-name)
				(xpc-service-name "com.apple.iconservices")
				(xpc-service-name "com.apple.externalaccessory.WACEAService")
				(xpc-service-name "com.apple.audio.analytics.service")
				(xpc-service-name)
				(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
				(xpc-service-name "com.apple.tonelibraryd")
				(require-any
					(global-name "com.apple.ckdiscretionaryd.debug")
					(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
					(global-name "com.apple.cloudkit.partlycloudd")
					(require-all
						(xpc-service-name-regex #".+")
						(require-any
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers"))))
					(require-all
						(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
						(global-name "com.apple.uikit.viewservice."))))
			(require-all
				(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
				(require-any
					(require-all
						(xpc-service-name)
						(xpc-service-name "com.apple.iconservices")
						(xpc-service-name "com.apple.externalaccessory.WACEAService")
						(xpc-service-name "com.apple.audio.analytics.service")
						(xpc-service-name)
						(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
						(xpc-service-name "com.apple.tonelibraryd")
						(require-any
							(global-name "com.apple.ckdiscretionaryd.debug")
							(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
							(global-name "com.apple.cloudkit.partlycloudd")
							(require-all
								(xpc-service-name-regex #".+")
								(require-any
									(require-all
										(global-name "com.apple.system.notification_center")
										(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
									(require-all
										(global-name "com.apple.lsd.openurl")
										(global-name "com.apple.tccd")
										(global-name "com.apple.lsd.advertisingidentifiers"))))
							(require-all
								(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
								(global-name "com.apple.uikit.viewservice."))))
					(require-all
						(debug-mode)
						(entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider))))
			(require-all
				(require-not (global-name "com.apple.sharingd.nsxpc"))
				(require-not (global-name "com.apple.vibrationmanagerd"))
				(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
				(require-not (global-name "com.apple.passd.library"))
				(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
				(require-not (global-name "com.apple.mediaserverd"))
				(require-not (global-name "com.apple.voiceservices.tts"))
				(require-not (global-name "com.apple.mobileasset.autoasset"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
				(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
				(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
				(require-not (global-name "com.apple.accessories.transport-server"))
				(require-not (global-name "com.apple.librariand"))
				(require-not (global-name "com.apple.audio.AudioConverterService"))
				(require-not (global-name "com.apple.mobileassetd"))
				(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
				(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
				(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
				(require-not (global-name "com.apple.UIKit.statusbarserver"))
				(require-not (global-name "com.apple.bird"))
				(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
				(require-not (global-name "com.apple.assistant.dictation"))
				(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
				(require-not (global-name "com.apple.nanoprefsync"))
				(require-not (global-name "com.apple.DeviceAccess.xpc"))
				(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
				(require-not (global-name "com.apple.TextInput.lexicon-server"))
				(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
				(require-not (global-name "com.apple.audio.AudioQueueServer"))
				(require-not (global-name "com.apple.mediaremoted.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
				(require-not (global-name "com.apple.backboard.display.services"))
				(require-not (global-name "com.apple.FileCoordination"))
				(require-not (global-name "com.apple.CARenderServer"))
				(require-not (global-name "com.apple.seserviced.passkit-extensions"))
				(require-not (global-name "com.apple.audio.AudioSession"))
				(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
				(require-not (global-name "com.apple.cloudasset.cloudd"))
				(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
				(require-not (global-name "com.apple.TextInput.preferences"))
				(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
				(require-not (global-name "com.apple.mobileassetd.v2"))
				(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
				(require-not (global-name "com.apple.bird.token"))
				(require-not (global-name "com.apple.assetsd.changehub"))
				(require-not (global-name "com.apple.linkd.transcript"))
				(require-not (global-name "com.apple.revisiond"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
				(require-not (global-name "com.apple.springboard.backgroundappservices"))
				(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
				(require-not (global-name "com.apple.iconservices"))
				(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
				(require-not (global-name "com.apple.marco"))
				(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
				(require-not (global-name "com.apple.ckdiscretionaryd"))
				(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
				(require-not (global-name "com.apple.accessories.externalaccessory-server"))
				(require-not (global-name "com.apple.springboard.services"))
				(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
				(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
				(require-not (global-name "com.apple.photos.service"))
				(require-not (global-name "com.apple.accessibility.gax.backboard"))
				(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
				(require-not (global-name "com.apple.itunesstored.xpc"))
				(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
				(require-not (global-name "com.apple.backboard.hid.services"))
				(require-not (global-name "com.apple.voiceservices.keepalive"))
				(require-not (global-name "com.apple.assistant.analytics"))
				(require-not (global-name "com.apple.coremedia.videocompositor"))
				(require-not (global-name "com.apple.FileProvider"))
				(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
				(require-not (global-name "com.apple.frontboard.workspace"))
				(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
				(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
				(require-not (global-name "com.apple.pasteboard.pasted"))
				(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
				(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
				(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
				(require-not (global-name "com.apple.audio.AURemoteIOServer"))
				(require-not (global-name "com.apple.coremedia.admin"))
				(require-not (global-name "com.apple.cloudd"))
				(require-not (global-name "com.apple.coremedia.asset.xpc"))
				(require-not (global-name "com.apple.iokit.powerdxpc"))
				(require-not (global-name "com.apple.iohideventsystem"))
				(require-not (global-name "com.apple.PowerManagement.control"))
				(require-not (global-name "com.apple.pegasus"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
				(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
				(require-not (global-name "com.apple.identityservicesd.embedded.auth"))
				(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
				(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
				(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
				(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
				(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
				(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
				(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
				(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
				(require-any (global-name "com.apple.dictationd.recognition")
(global-name "com.apple.speech.localspeechrecognition"))
				(global-name "com.apple.privacyaccountingd")
				(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
				(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server")
				(global-name "com.apple.iphone.axserver-systemwide")
				(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
				(global-name "com.apple.accessibility.AXBackBoardServer")
				(global-name "com.apple.dt.automationmode.reader")
				(global-name "com.apple.TextInput")
				(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
				(global-name "com.apple.TextInput.image-cache-server")
				(global-name "com.apple.coremedia.sandboxserver")
				(global-name "com.apple.audio.hapticd")
				(global-name "com.apple.timesync.ptp.manager")
				(global-name "com.apple.quicklook.ThumbnailsAgent")
				(global-name "com.apple.coremedia.assetimagegenerator.xpc")
				(global-name "com.apple.mobilecheckpoint.checkpointd")
				(global-name "com.apple.coremedia.player.xpc")
				(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
				(global-name "com.apple.audioanalyticsd")
				(global-name "com.apple.UIKit.KeyboardManagement.hosted")
				(global-name "com.apple.coremedia.customurlloader.xpc")
				(global-name "com.apple.linkd.autoShortcut")
				(global-name "com.apple.backboard.hid-services.xpc")
				(global-name "com.apple.backboard.TouchDeliveryPolicyServer")
				(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
				(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
				(global-name "com.apple.UIKit.pasteboardd")
				(global-name "com.apple.audio.SystemSoundServer-iOS")
				(global-name "com.apple.usernotifications.listener")
				(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
				(global-name "com.apple.coremedia.sts")
				(global-name "com.apple.NPKCompanionAgent.library")
				(global-name "com.apple.itunescloudd.xpc")
				(global-name "com.apple.callkit.callcontrollerhost")
				(global-name "com.apple.frontboard.systemappservices")
				(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
				(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
				(global-name "com.apple.TextInput.rdt")
				(require-any (global-name "com.apple.progressd")
(global-name "com.apple.KeyboardServices.TextReplacementService"))
				(local-name "com.apple.assistant.contextprovider.")
				(xpc-service-name)
				(xpc-service-name "com.apple.iconservices")
				(xpc-service-name "com.apple.externalaccessory.WACEAService")
				(xpc-service-name "com.apple.audio.analytics.service")
				(xpc-service-name)
				(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
				(xpc-service-name "com.apple.tonelibraryd")
				(require-any
					(global-name "com.apple.ckdiscretionaryd.debug")
					(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
					(global-name "com.apple.cloudkit.partlycloudd")
					(require-all
						(xpc-service-name-regex #".+")
						(require-any
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers"))))
					(require-all
						(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
						(global-name "com.apple.uikit.viewservice.")))))))
(deny network-inbound
	(require-all
		(require-not (local ip "*:*"))
		(require-not (entitlement-is-bool-true com.apple.developer.networking.multicast))
		(require-any
			(require-all
				(extension com.apple.app-sandbox.read-write)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(subpath-prefix "${HOME}/Library/Mobile Documents"))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(extension com.apple.sandbox.application-group)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/tmp/ubiquity.socket")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath-prefix "${FRONT_USER_HOME}")))))))
(deny network-outbound
	(require-all
		(require-not (control-name "com.apple.flow-divert"))
		(require-not (literal "/private/var/run/lockdown.sock"))
		(require-any
			(remote tcp "localhost:873")
			(remote tcp "localhost:62078")
			(remote tcp "localhost:22")
			(remote tcp "localhost:23")
			(require-all
				(extension com.apple.app-sandbox.read-write)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents")))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-not (control-name "com.apple.netsrc"))
				(require-not (control-name "com.apple.network.statistics"))
				(require-not (remote ip "*:*"))
				(require-not (remote udp "*:443"))
				(require-not (literal "/private/var/run/mDNSResponder"))
				(require-any
					(require-all
						(extension com.apple.sandbox.application-group)
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(vnode-type SOCKET)
						(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))))))
(deny process-fork)
(deny process-info-codesignature
	(process-attribute is-apple-signed-executable))
(deny syscall-unix
	(c1 6670 38b3 9ce0))
(deny system-fsctl
	(require-all
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 93)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "h" 32)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "h" 31)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 32)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 3)))
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 72))))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.dataaccess.dataaccessd"))
		(require-not (preference-domain "com.apple.appleaccount"))
		(require-all (require-not (preference-domain "mediaremote"))
(require-not (preference-domain "itdbprepserver"))
(require-not (preference-domain "com.apple.nike"))
(require-not (preference-domain "com.apple.certui"))
(require-not (preference-domain "com.apple.XCTest"))
(require-not (preference-domain "com.apple.iqagent"))
(require-not (preference-domain "com.apple.gamekit"))
(require-not (preference-domain "com.apple.voicemail"))
(require-not (preference-domain "com.apple.adtracking"))
(require-not (preference-domain "com.apple.preferences.network"))
(require-not (preference-domain "com.apple.preferences.datetime"))
(require-not (preference-domain "com.apple.messagesbadgecontroller"))
(require-not (preference-domain "com.apple.managedconfiguration.janitor"))
(require-not (preference-domain "com.apple.mobiletimer"))
(require-not (preference-domain "com.apple.mobilestoresettings"))
(require-not (preference-domain "com.apple.mobile.SyncMigrator"))
(require-not (preference-domain "com.apple.mobileme.fmf.assistant")))
		(require-not (preference-domain "com.apple.locationd"))
		(require-not (preference-domain "com.apple.aggregated"))
		(require-not (preference-domain "com.apple.LaunchServices"))
		(require-not (preference-domain "com.apple.Metal"))
		(require-not (preference-domain "com.apple.lookup.shared"))
		(require-not (preference-domain "com.apple.CoreDuet"))
		(require-not (preference-domain "com.apple.corevideo"))
		(require-not (preference-domain "com.apple.persistentconnection-mcc"))
		(require-not (preference-domain "com.apple.UIKit"))
		(require-not (preference-domain "com.apple.assistant.support"))
		(require-not (preference-domain "com.apple.AdLib"))
		(require-not (preference-domain "com.apple.AppSupport"))
		(require-not (preference-domain "com.apple.CoreMotion"))
		(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
		(require-not (preference-domain "com.apple.nanoprefsyncd"))
		(require-not (preference-domain "com.apple.VoiceOverTouch"))
		(require-all (require-not (preference-domain "com.apple.SwiftUI"))
(require-not (preference-domain "com.apple.morphology"))
(require-not (preference-domain "com.apple.LinearMediaKit"))
(require-not (preference-domain "com.apple.MapKit.internal"))
(require-not (preference-domain "com.apple.Accessibility.speech")))
		(require-not (preference-domain "com.apple.imessage"))
		(require-not (preference-domain "com.apple.imdsmsrecordstore"))
		(require-not (preference-domain "com.apple.DataMigration"))
		(require-not (preference-domain "com.apple.apsd"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.DataAccess.BehaviorOptions"))
		(require-not (preference-domain "com.apple.mmcs"))
		(require-not (preference-domain "com.apple.mms_override"))
		(require-not (preference-domain "com.apple.WebUI"))
		(require-not (preference-domain "com.apple.preferences.sounds"))
		(require-not (preference-domain "com.apple.coremedia"))
		(require-not (preference-domain "com.apple.CloudKit"))
		(require-not (preference-domain "com.apple.springboard"))
		(require-not (preference-domain "com.apple.ConfigServer"))
		(require-not (preference-domain "com.apple.coreaudio"))
		(require-not (preference-domain "com.apple.itdbprep.server"))
		(require-not (preference-domain "com.apple.mobilenotes"))
		(require-not (preference-domain "com.apple.GEO"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.WebFoundation"))
		(require-not (preference-domain "com.apple.assistant.backedup"))
		(require-not (preference-domain "com.apple.marco"))
		(require-not (preference-domain "com.apple.mediaaccessibility"))
		(require-not (preference-domain "com.apple.softwareupdateservicesd"))
		(require-not (preference-domain "com.apple.avkit"))
		(require-not (preference-domain "com.apple.celestial"))
		(require-not (preference-domain "com.apple.mobileipod"))
		(require-not (preference-domain "com.apple.camera"))
		(require-not (preference-domain "kCFPreferencesAnyApplication"))
		(require-not (preference-domain "com.apple.MobileAsset"))
		(require-not (preference-domain "com.apple.DataDeliveryServices"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.postwipe"))
		(require-not (preference-domain "com.apple.VoiceMemos"))
		(require-not (preference-domain "com.apple.mediaremote"))
		(require-not (preference-domain "com.apple.mobilecal.alarmengine"))
		(require-not (preference-domain "com.apple.madrid"))
		(require-not (preference-domain "com.apple.telephonyutilities.dialassist"))
		(require-not (preference-domain "com.apple.InputModePreferences"))
		(require-not (preference-domain "com.apple.GameController"))
		(require-not (preference-domain "com.apple.atc"))
		(require-not (preference-domain "com.apple.SpeakSelection"))
		(require-not (preference-domain "com.apple.airplay"))
		(require-not (preference-domain "com.apple.keyboard"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.youtubeframework"))
		(require-not (preference-domain "com.apple.imagent"))
		(require-all (require-not (preference-domain "com.apple.mobilevpn"))
(require-not (preference-domain "com.apple.network.eapclient.tls.TrustExceptions")))
		(require-not (preference-domain "com.apple.avfoundation"))
		(require-not (preference-domain "com.apple.preferences-sounds"))
		(require-not (preference-domain "com.apple.ubd"))
		(require-not (preference-domain "com.apple.mobileslideshow"))
		(require-not (preference-domain "com.apple.indigo"))
		(require-not (preference-domain "com.apple.OTASyncState"))
		(require-not (preference-domain "com.apple.videos"))
		(require-not (preference-domain "com.apple.opengl"))
		(require-not (preference-domain "com.apple.Accessibility"))
		(require-not (preference-domain "com.apple.Wallet.public"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.GMM"))
		(require-not (preference-domain "com.apple.PencilKit"))
		(require-not (preference-domain "com.apple.voiceservices"))
		(require-not (preference-domain "com.apple.iclouddrive.features"))
		(require-not (preference-domain "com.apple.compass"))
		(require-not (preference-domain "com.apple.AOSNotification.public.notbackedup"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.TTY"))
		(require-not (preference-domain "com.apple.PeoplePicker"))
		(require-not (preference-domain "com.apple.avfoundation.videoperformancehud"))
		(require-not (preference-domain "com.apple.conference"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
		(require-not (preference-domain "com.apple.keyboard.preferences"))
		(require-not (preference-domain "com.apple.mt"))
		(require-not (preference-domain "com.apple.mobilecal"))
		(require-not (preference-domain "com.apple.persistentconnection"))
		(require-not (preference-domain "com.apple.ids"))
		(require-not (preference-domain "com.apple.iapd"))
		(require-not (preference-domain "com.apple.coreanimation"))
		(require-not (preference-domain "com.apple.gamed"))
		(require-any
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (preference-domain "com.apple.morphology.internal"))
				(require-not (preference-domain "com.apple.purplebuddy"))
				(require-not (preference-domain "com.apple.Preferences"))
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true com.apple.itunesstored.private))
			(require-all
				(preference-domain "com.apple.groupactivities")
				(entitlement-is-bool-true com.apple.developer.group-session))
			(require-all
				(preference-domain "com.apple.coremedia")
				(extension com.apple.tcc.kTCCServicePhotos))
			(require-all
				(preference-domain "com.apple.coreaudio")
				(extension com.apple.tcc.kTCCServicePhotos))
			(require-all
				(preference-domain "com.apple.avfoundation")
				(extension com.apple.tcc.kTCCServicePhotos))
			(require-all
				(preference-domain "com.apple.corevideo")
				(extension com.apple.tcc.kTCCServicePhotos)))))
(deny storage-class-map)
