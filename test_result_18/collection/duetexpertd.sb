(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
	(require-all
		(extension com.apple.sandbox.application-group)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
						(require-not (extension-class "com.apple.aned.read-only"))
						(require-not (extension-class "com.apple.mediaserverd.read"))
						(require-not (extension-class "com.apple.app-sandbox.read")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")
						(require-not (extension-class "com.apple.aned.read-only"))
						(require-not (extension-class "com.apple.mediaserverd.read"))
						(require-not (extension-class "com.apple.app-sandbox.read"))))))))
(deny file-read*
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
		(require-all (require-not (literal "/private/var/db/MobileIdentityData/Indeterminates.plist"))
(require-not (literal "/private/var/db/MobileIdentityData/AuthListReadyCdHashes.plist")))
		(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
		(require-all (require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/MDMAppManagement.plist"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/MDMAppManagement.plist"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/MDMAppManagement.plist")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs"))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.networkd.plist"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-not (subpath-prefix "${HOME}/Library/CoreDuet"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.Pasteboard"))
		(require-not (subpath "/Developer/Applications"))
		(require-not (subpath "/Library/RegionFeatures"))
		(require-not (subpath-prefix "${HOME}/Library/CallHistoryDB"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle/Application"))
		(require-not (subpath-prefix "${HOME}/Library/DuetExpertCenter"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Biome/streams"))
(require-not (subpath-prefix "${HOME}/Library/Logs/CallHistory"))
(require-not (literal-prefix "${HOME}/Library/Logs/coreduetd.log"))
(require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.duetexpertd"))
(require-not (literal-prefix "${HOME}/Library/SMS/com.apple.messages.abcache.duetexpertd.plist")))
		(require-all (require-not (literal "/private/var/db/MobileIdentityData/denylist.map"))
(require-not (literal "/private/var/db/MobileIdentityData/Version.plist"))
(require-not (subpath-prefix "${HOME}/Library/Spotlight"))
(require-not (literal-prefix "${HOME}/Library/Mail/VIPs.plist")))
		(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-any
			(require-all
				(literal "/System/Library/Carrier Bundles/")
				(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
				(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
				(literal "/private/var/")
				(require-any
					(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync"))
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$"))
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))))
			(require-all
				(require-not (subpath "/private/var/tmp"))
				(require-not (subpath "/Applications"))
				(require-any
					(require-all
						(literal "/private/var/")
						(require-any
							(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
								(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync"))
								(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$"))
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))))
					(require-all
						(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm")))
						(require-not (literal-prefix "${HOME}/Library/Caches/DateFormats.plist"))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
						(require-not (subpath "/private/var/containers/Bundle/Application"))
						(require-not (subpath-prefix "${HOME}/Library/WebClips"))
						(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
						(require-any
							(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
							(require-all
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter"))
								(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
								(require-any
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/proactive_" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/proactive_" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]proactive_" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]proactive_" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])proactive_" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])proactive_" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])proactive_"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")))
									(require-all
										(extension com.apple.sandbox.application-group)
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(entitlement-is-bool-true com.apple.Contacts.database-allow)
										(extension com.apple.tcc.kTCCServiceAddressBook)
										(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
										(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
										(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
									(require-all
										(literal "/private/var/")
										(require-any
											(extension com.apple.app-sandbox.read)
											(extension com.apple.app-sandbox.read-write)
											(extension com.apple.security.exception.files.absolute-path.read-only)
											(extension com.apple.security.exception.files.absolute-path.read-write)
											(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
											(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
											(require-all
												(extension com.apple.sandbox.application-group)
												(require-any
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))))))))))
(deny file-read-metadata
	(require-all
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
						(require-not (process-attribute is-apple-signed-executable))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync"))
						(literal "/private/var/"))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
								(require-not (process-attribute is-apple-signed-executable))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync"))
								(literal "/private/var/"))
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
								(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
				(require-not (process-attribute is-apple-signed-executable))
				(literal "/private/var/"))
			(require-all
				(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
				(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
				(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/MDMAppManagement.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/MDMAppManagement.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/MDMAppManagement.plist"))
				(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs")
				(literal "/private/var/Managed Preferences/mobile/com.apple.networkd.plist")
				(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
				(subpath-prefix "${HOME}/Library/CoreDuet")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.Pasteboard")
				(subpath "/Developer/Applications")
				(subpath "/Library/RegionFeatures")
				(subpath-prefix "${HOME}/Library/CallHistoryDB")
				(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle/Application")
				(subpath-prefix "${HOME}/Library/DuetExpertCenter")
				(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal")
				(require-any (subpath-prefix "${HOME}/Library/Biome/streams")
(subpath-prefix "${HOME}/Library/Logs/CallHistory")
(literal-prefix "${HOME}/Library/Logs/coreduetd.log")
(subpath-prefix "${HOME}/Library/Logs/com.apple.duetexpertd")
(literal-prefix "${HOME}/Library/SMS/com.apple.messages.abcache.duetexpertd.plist"))
				(require-any (literal "/private/var/db/MobileIdentityData/denylist.map")
(literal "/private/var/db/MobileIdentityData/Version.plist")
(subpath-prefix "${HOME}/Library/Spotlight")
(literal-prefix "${HOME}/Library/Mail/VIPs.plist"))
				(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")
				(subpath-prefix "${PROCESS_TEMP_DIR}")
				(require-any
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
						(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
						(literal "/private/var/")
						(require-any
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))))
					(require-all
						(subpath "/private/var/tmp")
						(subpath "/Applications")
						(require-any
							(require-all
								(literal "/private/var/")
								(require-any
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
										(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))))
							(require-all
								(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm"))
								(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
								(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
								(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs")
								(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
								(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
								(subpath "/private/var/containers/Bundle/Application")
								(subpath-prefix "${HOME}/Library/WebClips")
								(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
								(require-any
									(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
									(require-all
										(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")
										(subpath "/private/var/containers/Data/System/com.apple.geod")
										(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
										(require-any
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Library/Logs/CrashReporter/proactive_" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/proactive_" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]proactive_" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]proactive_" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])proactive_" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])proactive_" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])proactive_")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
											(require-all
												(extension com.apple.sandbox.application-group)
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
														(subpath-prefix "${FRONT_USER_HOME}"))))
											(require-all
												(entitlement-is-bool-true com.apple.Contacts.database-allow)
												(extension com.apple.tcc.kTCCServiceAddressBook)
												(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
												(subpath-prefix "${HOME}/Library/AddressBook")
												(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
											(require-all
												(literal "/private/var/")
												(require-any
													(extension com.apple.app-sandbox.read)
													(extension com.apple.app-sandbox.read-write)
													(extension com.apple.security.exception.files.absolute-path.read-only)
													(extension com.apple.security.exception.files.absolute-path.read-write)
													(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
													(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
													(require-all
														(extension com.apple.sandbox.application-group)
														(require-any
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
															(require-all
																(literal "/private/var/PersonaVolumes/")
																(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))))))))))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(require-not (process-attribute is-apple-signed-executable))
						(literal "/private/var/"))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}"))))))))
(deny file-read-xattr
	(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")))
(deny file-write*
	(require-all
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs"))
		(require-not (subpath-prefix "${HOME}/Library/CoreDuet"))
		(require-not (subpath-prefix "${HOME}/Library/CallHistoryDB"))
		(require-not (subpath-prefix "${HOME}/Library/DuetExpertCenter"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Biome/streams"))
(require-not (subpath-prefix "${HOME}/Library/Logs/CallHistory"))
(require-not (literal-prefix "${HOME}/Library/Logs/coreduetd.log"))
(require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.duetexpertd"))
(require-not (literal-prefix "${HOME}/Library/SMS/com.apple.messages.abcache.duetexpertd.plist")))
		(require-any
			(require-all
				(literal "/private/var/")
				(require-not (subpath "/private/var/tmp"))
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]apppredictionsync")))
			(require-all
				(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm")))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs"))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
				(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/Logs/CrashReporter/proactive_" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/proactive_" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]proactive_" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]proactive_" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])proactive_" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])proactive_" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])proactive_")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(extension com.apple.tcc.kTCCServiceAddressBook)
						(require-any
							(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
							(require-all
								(vnode-type REGULAR-FILE)
								(literal-prefix "${HOME}/Library/AddressBook/")))))))))
(deny file-write-create
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
				(require-not (process-attribute is-apple-signed-executable)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (process-attribute is-apple-signed-executable)))
			(require-all
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync"))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}"))))))
(deny file-write-mode
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
		(subpath-prefix "${FRONT_USER_HOME}")))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny file-write-xattr
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(literal "/private/var/")
		(subpath-prefix "${FRONT_USER_HOME}")
		(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$"))))
(deny ipc-posix-shm*
	(ipc-posix-name "/sas_prediction_cache"))
(deny ipc-posix-shm-read-data
	(require-all
		(ipc-posix-name "apple.shm.notification_center")
		(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))
(deny job-creation)
(deny mach-lookup
	(xpc-service-name "com.apple.WebKit.")
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.online-auth-agent.xpc"))
		(require-not (global-name "com.apple.passd.library"))
		(require-not (global-name "com.apple.mediaserverd"))
		(require-not (global-name "com.apple.coreservices.lsbestappsuggestionmanager.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.networking.captivenetworksupport"))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
		(require-not (global-name "com.apple.locationd.synchronous"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
		(require-not (global-name "com.apple.misagent"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.calaccessd"))
		(require-not (global-name "com.apple.email.maild"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
		(require-not (global-name "com.apple.routined.registration"))
		(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
		(require-not (global-name "com.apple.mediaremoted.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
		(require-not (global-name "com.apple.FileCoordination"))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (global-name "com.apple.CARenderServer"))
		(require-not (global-name "com.apple.seserviced.passkit-extensions"))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-all (require-not (global-name "com.apple.proactive.AppPrediction.predictions"))
(require-not (global-name "com.apple.proactive.ActionPrediction.predictions")))
		(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
		(require-not (global-name "com.apple.coreduetd"))
		(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
		(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-not (global-name "com.apple.familycircle.agent"))
		(require-not (global-name "com.apple.linkd.transcript"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
		(require-not (global-name "com.apple.parsecd"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-not (global-name "com.apple.notificationcenter.widgetcontrollerconnection"))
		(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-not (global-name "com.apple.marco"))
		(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.powerd.lowpowermode"))
		(require-not (global-name "com.apple.locationd.registration"))
		(require-not (global-name "com.apple.ClipServices.clipserviced"))
		(require-not (global-name "com.apple.springboard.services"))
		(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
		(require-not (global-name "com.apple.donotdisturb.service.non-launching"))
		(require-not (global-name "com.apple.remindd"))
		(require-not (global-name "com.apple.itunesstored.xpc"))
		(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
		(require-not (global-name "com.apple.coremedia.videocompositor"))
		(require-not (global-name "com.apple.awdd"))
		(require-not (global-name "com.apple.CallHistorySyncHelper"))
		(require-not (global-name "com.apple.suggestd.contacts"))
		(require-not (global-name "com.apple.donotdisturb.service"))
		(require-not (global-name "com.apple.carkit.dnd.service"))
		(require-all (require-not (global-name "com.apple.mdt"))
(require-not (global-name "com.apple.wifid"))
(require-not (global-name "com.apple.ModeEntityScorer"))
(require-not (global-name "com.apple.atc.xpc.sessions"))
(require-not (global-name "com.apple.duet.expertcenter"))
(require-not (global-name "com.apple.suggestd.events"))
(require-not (global-name "com.apple.suggestd.PersonalizationPortrait.StringDonation"))
(require-not (global-name "com.apple.usernotifications.usernotificationsettingsservice"))
(require-not (global-name "com.apple.posterboardservices.services"))
(require-not (global-name "com.apple.proactive.SuggestionRequest."))
(require-not (global-name "com.apple.proactive.HomeScreenSuggestion.xpc"))
(require-not (global-name "com.apple.proactive.ModeAnchorModelSuggestion.xpc"))
(require-not (global-name "com.apple.proactive.UserEducationSuggestion.client-listener.xpc")))
		(require-not (global-name "com.apple.proactive.PersonalizationPortrait.Event"))
		(require-not (global-name "com.apple.pasteboard.pasted"))
		(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
		(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
		(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.iohideventsystem"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.pegasus"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
		(require-not (global-name "com.apple.identityservicesd.embedded.auth"))
		(require-not (global-name "com.apple.privacyaccountingd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
		(require-not (global-name "com.apple.coreduetd.knowledge"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.navd"))
		(require-not (global-name "com.apple.imagent.embedded.auth"))
		(require-not (global-name "com.apple.proactive.PersonalizationPortrait.NamedEntity.readOnly"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.coremedia.sandboxserver"))
		(require-not (global-name "com.apple.duetactivityscheduler"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.timesync.ptp.manager"))
		(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.bulletinboard.observerconnection"))
		(require-not (global-name "com.apple.corerecents.recentsd"))
		(require-not (global-name "com.apple.chronoservices"))
		(require-not (global-name "com.apple.coremedia.player.xpc"))
		(require-not (global-name "com.apple.coreduetd.knowledgebase"))
		(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.locationd.spi"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
		(require-not (global-name "com.apple.siri.VoiceShortcuts.xpc"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (global-name "com.apple.MobileTimer.alarmserver"))
		(require-not (global-name "com.apple.usernotifications.listener"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
		(require-not (global-name "com.apple.coremedia.sts"))
		(require-not (global-name "com.apple.NPKCompanionAgent.library"))
		(require-not (global-name "com.apple.itunescloudd.xpc"))
		(require-not (global-name "com.apple.callkit.callcontrollerhost"))
		(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
		(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
		(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
		(require-not (global-name "com.apple.linkd.registry"))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
		(require-not (extension com.apple.security.exception.mach-lookup.global-name))
		(require-not (extension com.apple.security.exception.mach-lookup.local-name))
		(require-any
			(require-all
				(global-name "com.apple.ckdiscretionaryd.debug")
				(require-any
					(xpc-service-name-regex #".+")
					(xpc-service-name "com.apple.CoreGraphics.CGPDFService")))
			(require-all
				(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
				(require-any
					(xpc-service-name-regex #".+")
					(xpc-service-name "com.apple.CoreGraphics.CGPDFService")))
			(require-all
				(global-name "com.apple.cloudkit.partlycloudd")
				(require-any
					(xpc-service-name-regex #".+")
					(xpc-service-name "com.apple.CoreGraphics.CGPDFService")))
			(require-all
				(require-not (global-name "com.apple.contactsd"))
				(require-not (global-name "com.apple.cloudasset.cloudd"))
				(require-not (global-name "com.apple.ckdiscretionaryd"))
				(require-not (global-name "com.apple.spotlight.IndexAgent"))
				(require-not (global-name "com.apple.cloudd"))
				(global-name "com.apple.identityservicesd.idquery.embedded.auth")
				(global-name "com.apple.spotlight.IndexDelegateAgent")
				(global-name "com.apple.accountsd.accountmanager")
				(global-name "com.apple.ABDatabaseDoctor")
				(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
				(global-name "com.apple.cmfsyncagent.embedded.auth")
				(require-any
					(require-all
						(global-name "com.apple.system.notification_center")
						(entitlement-is-bool-true com.apple.security.on-demand-install-capable)
						(xpc-service-name-regex #".+"))
					(require-all
						(global-name "com.apple.lsd.openurl")
						(global-name "com.apple.tccd")
						(global-name "com.apple.lsd.advertisingidentifiers")
						(xpc-service-name-regex #".+")))))))
(deny syscall-unix
	(c1 4a4d 4d6c 9ce0))
(deny system-fcntl
	(ce 04d2 4d6a 9ce0))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.lockscreen.shared"))
		(require-not (preference-domain "com.apple.sleepd"))
		(require-not (preference-domain "com.apple.MobileSMS"))
		(require-not (preference-domain "com.apple.UIKit"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.DuetExpertCenter."))
		(require-not (preference-domain "com.apple.messages"))
		(require-not (preference-domain "com.apple.coremedia"))
		(require-not (preference-domain "com.apple.coreaudio"))
		(require-not (preference-domain "com.apple.mobilenotes"))
		(require-not (preference-domain "com.apple.SiriViewService"))
		(require-not (preference-domain "com.apple.mediaremote"))
		(require-not (preference-domain "com.apple.message"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.spotlightui"))
		(require-not (preference-domain "com.apple.parsecd"))
		(require-not (preference-domain "com.apple.duetexpertd"))
		(require-not (preference-domain "com.apple.suggestions"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.imessage.bag"))
		(require-not (preference-domain "com.apple.AppPredictionWidget.defaults"))
		(require-not (preference-domain "com.apple.Intents.UpcomingMediaManager"))
		(require-not (preference-domain "com.apple.mobilecal"))
		(require-not (preference-domain "com.apple.facetime.bag"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.TelephonyUtilities"))
		(require-not (preference-domain "com.apple.companionsync"))
		(require-any
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true com.apple.itunesstored.private)
				(process-attribute is-apple-signed-executable))
			(require-all
				(require-not (preference-domain "com.apple.locationd"))
				(require-not (preference-domain "com.apple.AppSupport"))
				(require-not (preference-domain "com.apple.CloudKit"))
				(require-not (preference-domain "com.apple.GEO"))
				(require-not (preference-domain "com.apple.mobileipod"))
				(require-not (preference-domain "com.apple.avfoundation"))
				(require-not (preference-domain "com.apple.carrier"))
				(require-not (preference-domain "com.apple.CrashReporter"))
				(require-not (preference-domain "com.apple.ids"))
				(require-not (preference-domain "com.apple.conference"))
				(preference-domain "com.apple.marco")
				(preference-domain "com.apple.corevideo")
				(preference-domain "com.apple.CoreDuet")
				(preference-domain "com.apple.DataMigration")
				(preference-domain "com.apple.icloud.findmydeviced.postwipe")
				(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
				(preference-domain "com.apple.AOSNotification.public.notbackedup")
				(preference-domain "com.apple.PeoplePicker")))))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.DuetExpertCenter."))
		(require-not (preference-domain "com.apple.mediaremote"))
		(require-not (preference-domain "com.apple.spotlightui"))
		(require-not (preference-domain "com.apple.duetexpertd"))
		(require-not (preference-domain "com.apple.imessage.bag"))))
(deny storage-class-map)
