(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iapd"))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iapd"))
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd")
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iapd"))
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd")
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(extension-class "com.apple.mediaserverd.read"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iapd"))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iapd"))
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd")
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iapd"))
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd")
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(extension-class "com.apple.mediaserverd.read"))))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension com.apple.sandbox.executable))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iapd"))
		(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd")
		(require-not (extension-class "com.apple.app-sandbox.read-write"))
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.aned.read-only"))
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iapd"))
		(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd")
		(require-not (extension-class "com.apple.app-sandbox.read-write"))
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.aned.read-only"))
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iapd"))
		(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd")
		(require-not (extension-class "com.apple.app-sandbox.read-write"))
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.aned.read-only"))
		(extension-class "com.apple.mediaserverd.read")))
(deny file-read*
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
		(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles"))
		(require-not (subpath "/usr/sbin"))
		(require-all (require-not (subpath-prefix "${HOME}/Media/Radio"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iap2d"))
(require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.ioam"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/mp"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/iapd"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/iap2d"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/haywire"))
(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/Panics"))
(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.assistivetouchd.enabled.launchd")))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
		(require-not (literal "/private/var/preferences/com.apple.security.plist"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory"))
		(require-not (subpath-prefix "${HOME}/Library/CallHistoryDB"))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-not (subpath "/private/var/tmp"))
		(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist"))
		(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.mobilegestalt.plist"))
		(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/accessoryd"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.plist")
				(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/euser[0-9]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/[-0-9A-F]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/Users/[^/]+/Library/ExternalAccessory/ea[.0-9]+$")))))
			(require-all
				(require-not (subpath-prefix "${HOME}/Library/Fonts"))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
				(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
				(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
				(require-not (subpath-prefix "${HOME}/Library/CoreAccessories"))
				(require-all (require-not (subpath "/private/var/hardware/FactoryData"))
(require-not (literal "/usr/standalone/firmware/apticket.der")))
				(require-not (subpath "/private/preboot"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
				(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iapd"))
				(require-any
					(require-all
						(extension com.apple.assets.read)
						(require-not (subpath "/private/var/MobileAsset"))
						(require-not (subpath-prefix "${HOME}/Library/Assets")))
					(require-all
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(extension com.apple.tcc.kTCCServiceAddressBook)
						(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
						(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
						(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.accessoryd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iapd"))))
					(require-all
						(vnode-type DIRECTORY)
						(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.accessoryd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iapd"))))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
						(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
						(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))))))
(deny file-read-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-write*
	(require-all
		(require-all (require-not (subpath-prefix "${HOME}/Media/Radio"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iap2d"))
(require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.ioam"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/mp"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/iapd"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/iap2d"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/haywire"))
(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/Panics"))
(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.assistivetouchd.enabled.launchd")))
		(require-any
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/euser[0-9]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/[-0-9A-F]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/Users/[^/]+/Library/ExternalAccessory/ea[.0-9]+$")))))
			(require-all
				(require-not (subpath-prefix "${HOME}/Library/CallHistoryDB"))
				(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
				(require-not (subpath "/private/var/tmp"))
				(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/accessoryd"))
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
						(require-not (subpath-prefix "${HOME}/Library/CoreAccessories"))
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.iapd"))
						(require-any
							(require-all
								(vnode-type REGULAR-FILE)
								(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.accessoryd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iapd")))
								(vnode-type REGULAR-FILE)
								(literal-prefix "${HOME}/Library/AddressBook/")
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(extension com.apple.tcc.kTCCServiceAddressBook))
							(require-all
								(vnode-type DIRECTORY)
								(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.accessoryd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iapd")))
								(vnode-type REGULAR-FILE)
								(literal-prefix "${HOME}/Library/AddressBook/")
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(extension com.apple.tcc.kTCCServiceAddressBook))
							(require-all
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
								(extension com.apple.tcc.kTCCServiceAddressBook)))))))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))))
(deny file-write-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(require-all
		(require-all (require-not (iokit-user-client-class "AppleAuthCPUserClient"))
(require-not (iokit-user-client-class "IOAccessoryPortUserClient"))
(require-not (iokit-user-client-class "IOAccessoryEAInterfaceUserClient")))
		(require-not (iokit-user-client-class "AppleCredentialManagerUserClient"))
		(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
		(require-not (iokit-user-client-class "IOAccessoryManagerUserClient"))
		(require-not (iokit-user-client-class "AGXDevice"))
		(require-not (iokit-user-client-class "AppleUSBHostDeviceUserClient"))
		(require-not (iokit-user-client-class "AppleSMCSensorDispatcherUserClient"))
		(require-not (iokit-user-client-class "RootDomainUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
		(require-not (iokit-user-client-class "AppleKeyStoreUserClient"))
		(require-not (iokit-user-client-class "IOHIDResourceDeviceUserClient"))
		(require-all (require-not (iokit-user-client-class "AppleUSBSerialUserClient"))
(require-not (iokit-user-client-class "IOAccessoryConfigStreamUserClient"))
(require-not (iokit-user-client-class "IOAccessoryOOBPairingInterfaceUserClient")))
		(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
		(require-not (iokit-user-client-class "AppleUSBHostInterfaceUserClient"))
		(iokit-user-client-class "AGXCommandQueue")
		(extension com.apple.security.exception.iokit-user-client-class)
		(iokit-user-client-class "IOGPUDeviceUserClient")
		(require-any (iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelSharedUserClient2"))
		(require-any (iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelSubmitter2")
(iokit-user-client-class "IOAccelSharedUserClient"))
		(iokit-user-client-class "AGXSharedUserClient")
		(require-any (iokit-connection "IOGPU")
(iokit-connection "IOGraphicsAccelerator2"))))
(deny iokit-open-service
	(require-all
		(require-not (iokit-user-client-class "AppleKeyStore"))
		(require-not (iokit-user-client-class "AppleJPEGDriver"))
		(require-not (iokit-user-client-class "AGXAcceleratorG"))
		(require-not (iokit-user-client-class "IOSurfaceRoot"))
		(require-all (require-not (iokit-user-client-class "AppleCLCD"))
(require-not (iokit-user-client-class "AppleParavirtDisplay")))
		(require-not (iokit-user-client-class "AppleParavirtGPU"))
		(require-not (entitlement-is-present com.apple.security.exception.iokit-user-client-class))
		(iokit-user-client-class "IOPMrootDomain")))
(deny iokit-set-properties
	(require-all
		(iokit-user-client-class "IODPController")
		(require-all (require-not (iokit-property "PowerState"))
(require-not (iokit-property "VirtualMode"))))
	(require-all
		(iokit-user-client-class "IOUSBHostDevice")
		(require-any (iokit-property "Authenticated")
(iokit-property "InterfaceProperties"))))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-not (global-name "com.apple.CarPlayApp.service"))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.mediaserverd"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.mobileasset.autoasset"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.carkit.service"))
		(require-not (global-name "com.apple.mobileassetd"))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
		(require-not (global-name "com.apple.lsd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
		(require-not (global-name "com.apple.contactsd"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-all (require-not (global-name "com.apple.accessories."))
(require-not (global-name "com.apple.itunescloud.delegation-provider")))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.mediaremoted.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.dmd.policy"))
		(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
		(require-not (global-name "com.apple.mobileassetd.v2"))
		(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
		(require-not (global-name "com.apple.nfcacd.hwmanager"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.springboard.services"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.server.bluetooth"))
		(require-all (require-not (global-name "com.apple.cvmsServ"))
(require-not (global-name "com.apple.gpumemd.source")))
		(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
		(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.itunesstored.xpc"))
		(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
		(require-not (global-name "com.apple.backboard.hid.services"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callstatecontroller"))
		(require-not (global-name "com.apple.coremedia.videocompositor"))
		(require-not (global-name "com.apple.CallHistorySyncHelper"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
		(require-not (global-name "com.apple.spotlight.IndexAgent"))
		(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
		(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.Music.MPMusicPlayerControllerInternal"))
		(require-not (global-name "com.apple.iohideventsystem"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.pegasus"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
		(require-not (global-name "com.apple.privacyaccountingd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
		(require-not (global-name "com.apple.medialibraryd.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.coremedia.sandboxserver"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.timesync.ptp.manager"))
		(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.coremedia.player.xpc"))
		(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.ABDatabaseDoctor"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
		(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
		(require-not (global-name "com.apple.backboard.hid-services.xpc"))
		(require-not (global-name "com.apple.MediaPlayer.MPRadioControllerServer"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
		(require-not (global-name "com.apple.ProgressReporting"))
		(require-not (global-name "com.apple.usernotifications.listener"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
		(require-not (global-name "com.apple.voicemail.vmd"))
		(require-not (global-name "com.apple.coremedia.sts"))
		(require-not (global-name "com.apple.itunescloudd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
		(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
		(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
		(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(require-not (xpc-service-name "com.apple.AGXCompilerService"))
		(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
		(require-not (xpc-service-name "com.apple.MTLCompilerService"))
		(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
		(require-any (global-name "com.apple.iapd.xpc")
(global-name "com.apple.iap2d.xpc"))
		(extension com.apple.security.exception.mach-lookup.local-name)
		(global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server")
		(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server")
		(xpc-service-name "com.apple.externalaccessory.WACEAService")
		(extension com.apple.security.exception.mach-lookup.global-name)
		(global-name "com.apple.lsd.openurl")
		(global-name "com.apple.tccd")
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny mach-register
	(require-all
		(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))))
(deny network-inbound
	(require-not (local udp "*:*")))
(deny network-bind
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/euser[0-9]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/[-0-9A-F]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/Users/[^/]+/Library/ExternalAccessory/ea[.0-9]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
(deny network-outbound
	(require-all
		(require-not (control-name "com.apple.flow-divert"))
		(require-not (remote udp "*:*"))
		(require-not (control-name "com.apple.netsrc"))
		(require-not (control-name "com.apple.network.statistics"))
		(require-not (remote tcp "*:*"))
		(require-not (remote udp "*:443"))
		(literal "/private/var/run/lockdown.sock")
		(literal "/private/var/run/mDNSResponder")
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
(deny process-exec*
	(require-any (literal "/System/Library/PrivateFrameworks/IAP.framework/Support/iapd")
(literal "/System/Library/PrivateFrameworks/IAP.framework/Support/iap2d")))
(deny syscall-unix
	(c1 0b6c 857f 9ce0))
(deny system-kas-info)
(deny system-kext-load
	(require-any (kext-bundle-id "com.apple.driver.AppleUSBAudio")
(kext-bundle-id "com.apple.driver.AppleUSBDeviceAudioController")
(kext-bundle-id "com.apple.driver.usb.networking")
(kext-bundle-id "com.apple.driver.usb.IOUSBHostHIDDevice")
(kext-bundle-id "com.apple.driver.usb.cdc")
(kext-bundle-id "com.apple.driver.usb.cdc.ncm")
(kext-bundle-id "com.apple.driver.usb.cdc.ecm")))
(deny user-preference-read
	(require-all
		(require-all (require-not (preference-domain "com.apple.accessories"))
(require-not (preference-domain "com.apple.CoreAccessories")))
		(require-not (preference-domain "com.apple.assistant.logging"))
		(require-not (preference-domain "com.apple.CoreDuet"))
		(require-all (require-not (preference-domain "com.apple.iap2d"))
(require-not (preference-domain "com.apple.iaptransportd")))
		(require-not (preference-domain "com.apple.UIKit"))
		(require-not (preference-domain "com.apple.assistant.support"))
		(require-not (preference-domain "com.apple.AppSupport"))
		(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
		(require-not (preference-domain "com.apple.accessoryd"))
		(require-not (preference-domain "com.apple.EmojiPreferences"))
		(require-not (preference-domain "com.apple.itunescloud"))
		(require-not (preference-domain "com.apple.DataMigration"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.coremedia"))
		(require-not (preference-domain "com.apple.coreaudio"))
		(require-not (preference-domain "com.apple.GEO"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.assistant.backedup"))
		(require-not (preference-domain "com.apple.mobileipod"))
		(require-not (preference-domain "kCFPreferencesAnyApplication"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.postwipe"))
		(require-not (preference-domain "com.apple.mediaremote"))
		(require-not (preference-domain "com.apple.itunesstored"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.avfoundation"))
		(require-not (preference-domain "com.apple.Accessibility"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.suggestions"))
		(require-not (preference-domain "com.apple.AOSNotification.public.notbackedup"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.medialibrary"))
		(require-not (preference-domain "com.apple.PeoplePicker"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
		(require-not (preference-domain "com.apple.iapd"))
		(require-not (preference-domain "com.apple.MFAAuthentication"))
		(require-not (preference-domain "com.apple.keyboard.preferences"))
		(require-not (preference-domain "com.apple.assistant"))
		(require-not (preference-domain "com.apple.videos"))
		(require-not (preference-domain "com.apple.homesharing"))
		(require-not (preference-domain "com.apple.airplay"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.MobileAsset"))
		(require-not (preference-domain "com.apple.carplay"))
		(require-not (preference-domain "com.apple.TelephonyUtilities"))
		(require-not (preference-domain "com.apple.Preferences"))
		(require-not (preference-domain "com.apple.corevideo"))
		(preference-domain "com.apple.opengl")))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.accessoryd"))
		(require-all (require-not (preference-domain "com.apple.accessories"))
(require-not (preference-domain "com.apple.CoreAccessories")))
		(require-all (require-not (preference-domain "com.apple.iap2d"))
(require-not (preference-domain "com.apple.iaptransportd")))
		(require-not (preference-domain "com.apple.itunescloud"))
		(require-not (preference-domain "com.apple.mobileipod"))
		(require-not (preference-domain "com.apple.mediaremote"))
		(require-not (preference-domain "com.apple.itunesstored"))
		(require-not (preference-domain "com.apple.Accessibility"))
		(require-not (preference-domain "com.apple.iapd"))
		(require-not (preference-domain "com.apple.MFAAuthentication"))
		(preference-domain "com.apple.videos")))
(deny storage-class-map)
