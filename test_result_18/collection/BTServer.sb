(version 1)
(allow default)
(deny file-ioctl
	(require-all
		(require-not (literal "/dev/uart.log"))
		(literal "/dev/ptmx")))
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.bluetoothd"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.bluetoothd")))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(extension com.apple.security.exception.files.absolute-path.read-write))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(extension com.apple.security.exception.files.absolute-path.read-write))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.bluetoothd"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.bluetoothd")))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(extension com.apple.security.exception.files.absolute-path.read-write))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(extension com.apple.security.exception.files.absolute-path.read-write))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.bluetoothd"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.bluetoothd")))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(extension com.apple.security.exception.files.absolute-path.read-write))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(extension com.apple.security.exception.files.absolute-path.read-write))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.bluetoothd"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.bluetoothd")))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(extension com.apple.security.exception.files.absolute-path.read-write))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(extension com.apple.security.exception.files.absolute-path.read-write))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.bluetoothd"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.bluetoothd")))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(extension com.apple.security.exception.files.absolute-path.read-write))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(extension com.apple.security.exception.files.absolute-path.read-write))))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension com.apple.sandbox.executable))
	(require-all
		(extension-class "com.apple.sandbox.pty")
		(literal "/dev/ttys")
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))
(deny file-link
	(subpath-prefix "${HOME}/Library/AddressBook"))
(deny file-read*
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (subpath-prefix "${HOME}/Library/Fonts"))
		(require-not (subpath "/usr/sbin"))
		(require-all (require-not (literal "/private/var/wireless/Library/CallHistory/call_history.db-shm"))
(require-not (subpath-prefix "${HOME}/Library/Logs/ULLA"))
(require-not (subpath-prefix "${HOME}/Library/Logs/Bluetooth"))
(require-not (subpath-prefix "${HOME}/Library/MobileBluetooth"))
(require-not (subpath-prefix "${HOME}/Library/ExposureNotification")))
		(require-any
			(require-all
				(literal "/dev/ttys")
				(require-any
					(require-all
						(extension com.apple.sandbox.pty)
						(require-not (regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))
					(require-all
						(extension com.apple.app-sandbox.read-write)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/")))
					(require-all
						(require-all (require-not (literal "/dev/uart.log"))
(require-not (subpath "/Library/Application Support/BTServer")))
						(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
						(require-not (subpath "/private/var/tmp"))
						(require-all (require-not (literal "/private/var/wireless/Library/CallHistory"))
(require-not (literal "/private/var/wireless/Library/CallHistory/call_history.db"))
(require-not (literal "/private/var/wireless/Library/CallHistory/call_history.db-wal"))
(require-not (literal "/private/var/wireless/Library/CallHistory/call_history.db-journal")))
						(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
						(require-not (literal "/dev/ptmx"))
						(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
						(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
						(require-any
							(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
							(require-all
								(entitlement-is-present com.apple.private.networkextension.configuration)
								(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))
							(require-all
								(vnode-type REGULAR-FILE)
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.bluetoothd")))
							(require-all
								(vnode-type DIRECTORY)
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.bluetoothd")))
							(require-all
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter"))
								(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.bluetoothd"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.bluetoothd")))
								(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
								(require-all (require-not (subpath "/private/var/hardware/FactoryData"))
(require-not (literal "/usr/standalone/firmware/apticket.der")))
								(require-any
									(require-all
										(extension com.apple.assets.read)
										(require-not (subpath "/private/var/MobileAsset"))
										(require-not (subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(require-not (subpath "/private/preboot"))
										(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
										(require-any
											(require-all
												(entitlement-is-bool-true com.apple.Contacts.database-allow)
												(extension com.apple.tcc.kTCCServiceAddressBook)
												(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
												(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
												(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]bluetoothd-" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-"))
												(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
												(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
												(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
											(require-all
												(literal "/System/Library/Carrier Bundles/")
												(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
												(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))))))))))
			(require-all
				(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
				(require-not (subpath "/private/etc/bluetool"))
				(require-not (subpath "/private/var/wireless/Library/Logs/awd"))
				(require-not (literal "/private/var/preferences/com.apple.security.plist"))
				(extension com.apple.app-sandbox.read-write)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/"))))))
(deny file-read-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
	(require-all
		(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
		(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
		(require-not (literal "/usr/sbin"))
		(require-not (subpath "/private/var/containers/Bundle"))
		(require-not (subpath "/Developer/Applications"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
		(require-not (literal "/usr/sbin/BTServer"))
		(require-not (literal "/dev/btwake"))
		(require-not (subpath "/Applications"))
		(require-not (subpath "/System"))))
(deny file-read-metadata
	(require-all
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (literal "/usr/sbin"))
		(require-not (literal "/private/var"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.bluetoothd"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.bluetoothd")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-all (require-not (literal "/private/var/wireless"))
(require-not (literal "/private/var/wireless/Library")))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-not (literal "/usr/sbin/BTServer"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (literal "/Library/Preferences"))
		(require-any
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
				(literal "/private/var/")
				(require-any
					(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(literal "/private/var/preferences/com.apple.networkd.plist")
				(subpath-prefix "${HOME}/Library/Fonts")
				(subpath "/usr/sbin")
				(require-any (literal "/private/var/wireless/Library/CallHistory/call_history.db-shm")
(subpath-prefix "${HOME}/Library/Logs/ULLA")
(subpath-prefix "${HOME}/Library/Logs/Bluetooth")
(subpath-prefix "${HOME}/Library/MobileBluetooth")
(subpath-prefix "${HOME}/Library/ExposureNotification"))
				(require-any
					(require-all
						(literal "/dev/ttys")
						(require-any
							(require-all
								(extension com.apple.sandbox.pty)
								(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+"))
							(require-all
								(extension com.apple.app-sandbox.read-write)
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/"))
							(require-all
								(require-any (literal "/dev/uart.log")
(subpath "/Library/Application Support/BTServer"))
								(literal "/private/var/db/com.apple.networkextension.tracker-info")
								(subpath "/private/var/tmp")
								(require-any (literal "/private/var/wireless/Library/CallHistory")
(literal "/private/var/wireless/Library/CallHistory/call_history.db")
(literal "/private/var/wireless/Library/CallHistory/call_history.db-wal")
(literal "/private/var/wireless/Library/CallHistory/call_history.db-journal"))
								(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
								(literal "/dev/ptmx")
								(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
								(subpath-prefix "${PROCESS_TEMP_DIR}")
								(require-any
									(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
									(require-all
										(entitlement-is-present com.apple.private.networkextension.configuration)
										(literal "/private/var/preferences/com.apple.networkextension.plist"))
									(require-all
										(vnode-type REGULAR-FILE)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.bluetoothd"))
									(require-all
										(vnode-type DIRECTORY)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.bluetoothd"))
									(require-all
										(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
										(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")
										(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.bluetoothd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.bluetoothd"))
										(subpath "/private/var/containers/Data/System/com.apple.geod")
										(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
										(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
										(require-any
											(require-all
												(extension com.apple.assets.read)
												(subpath "/private/var/MobileAsset")
												(subpath-prefix "${HOME}/Library/Assets"))
											(require-all
												(subpath "/private/preboot")
												(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
												(require-any
													(require-all
														(entitlement-is-bool-true com.apple.Contacts.database-allow)
														(extension com.apple.tcc.kTCCServiceAddressBook)
														(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
														(subpath-prefix "${HOME}/Library/AddressBook")
														(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Library/Logs/CrashReporter/bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]bluetoothd-" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-")
														(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
														(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
													(require-all
														(literal "/System/Library/Carrier Bundles/")
														(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
														(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))))))))))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
						(subpath "/private/etc/bluetool")
						(subpath "/private/var/wireless/Library/Logs/awd")
						(literal "/private/var/preferences/com.apple.security.plist")
						(extension com.apple.app-sandbox.read-write)
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/")))))))
(deny file-read-xattr
	(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")))
(deny file-write*
	(require-all
		(require-not (subpath "/private/var/wireless/Library/Logs/awd"))
		(require-any
			(require-all
				(extension com.apple.app-sandbox.read-write)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/")
				(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(require-all (require-not (literal "/Library/Application Support/BTServer/pincode_defaults.db-shm"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/hci")))
				(require-all (require-not (literal "/private/var/wireless/Library/CallHistory/call_history.db-shm"))
(require-not (subpath-prefix "${HOME}/Library/Logs/ULLA"))
(require-not (subpath-prefix "${HOME}/Library/Logs/Bluetooth"))
(require-not (subpath-prefix "${HOME}/Library/MobileBluetooth"))
(require-not (subpath-prefix "${HOME}/Library/ExposureNotification")))
				(require-not (subpath "/private/var/tmp"))
				(require-all (require-not (literal "/private/var/wireless/Library/CallHistory"))
(require-not (literal "/private/var/wireless/Library/CallHistory/call_history.db"))
(require-not (literal "/private/var/wireless/Library/CallHistory/call_history.db-wal"))
(require-not (literal "/private/var/wireless/Library/CallHistory/call_history.db-journal")))
				(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
				(require-all (require-not (literal "/Library/Application Support/BTServer"))
(require-not (literal "/Library/Application Support/BTServer/pincode_defaults.db"))
(require-not (literal "/Library/Application Support/BTServer/pincode_defaults.db-wal"))
(require-not (literal "/Library/Application Support/BTServer/pincode_defaults.db-journal")))
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
					(require-all
						(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.bluetoothd"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.bluetoothd")))
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(extension com.apple.tcc.kTCCServiceAddressBook)
								(require-any
									(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
									(require-all
										(vnode-type REGULAR-FILE)
										(require-not (literal-prefix "${HOME}/Library/AddressBook/"))
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.bluetoothd")))))
							(require-all
								(vnode-type REGULAR-FILE)
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.bluetoothd")))
							(require-all
								(vnode-type DIRECTORY)
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.bluetoothd")))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/Logs/CrashReporter/bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]bluetoothd-" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-")
								(subpath-prefix "${FRONT_USER_HOME}")))))))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))))
(deny file-write-data
	(require-all
		(require-not (literal "/dev/uart.log"))
		(require-any
			(require-all
				(literal "/dev/ttys")
				(require-any
					(require-all
						(vnode-type SOCKET)
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
					(require-all
						(extension com.apple.sandbox.pty)
						(require-not (regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))))
			(require-all
				(require-not (literal "/dev/ptmx"))
				(vnode-type SOCKET)
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))))
(deny file-write-mode
	(require-all
		(literal "/dev/ttys")
		(require-any
			(require-all
				(extension com.apple.sandbox.pty)
				(require-not (regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))
			(require-all
				(extension com.apple.app-sandbox.read-write)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/")
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-any (literal "/Library/Application Support/BTServer/pincode_defaults.db-shm")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/hci"))
				(require-any (literal "/private/var/wireless/Library/CallHistory/call_history.db-shm")
(subpath-prefix "${HOME}/Library/Logs/ULLA")
(subpath-prefix "${HOME}/Library/Logs/Bluetooth")
(subpath-prefix "${HOME}/Library/MobileBluetooth")
(subpath-prefix "${HOME}/Library/ExposureNotification"))
				(subpath "/private/var/tmp")
				(require-any (literal "/private/var/wireless/Library/CallHistory")
(literal "/private/var/wireless/Library/CallHistory/call_history.db")
(literal "/private/var/wireless/Library/CallHistory/call_history.db-wal")
(literal "/private/var/wireless/Library/CallHistory/call_history.db-journal"))
				(subpath-prefix "${PROCESS_TEMP_DIR}")
				(require-any (literal "/Library/Application Support/BTServer")
(literal "/Library/Application Support/BTServer/pincode_defaults.db")
(literal "/Library/Application Support/BTServer/pincode_defaults.db-wal")
(literal "/Library/Application Support/BTServer/pincode_defaults.db-journal"))
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
					(require-all
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.bluetoothd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.bluetoothd"))
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(extension com.apple.tcc.kTCCServiceAddressBook)
								(require-any
									(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
									(require-all
										(vnode-type REGULAR-FILE)
										(literal-prefix "${HOME}/Library/AddressBook/")
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.bluetoothd"))))
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.bluetoothd"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.bluetoothd"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/Logs/CrashReporter/bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]bluetoothd-" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]bluetoothd-" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])bluetoothd-")
								(subpath-prefix "${FRONT_USER_HOME}")))))))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "AppleSPUHIDDeviceUserClient"))
		(require-not (iokit-user-client-class "IOUserUserClient"))
		(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
		(require-not (iokit-user-client-class "AppleSPUHIDDriverUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
		(require-all (require-not (iokit-user-client-class "BTDebugUserClient"))
(require-not (iokit-user-client-class "AppleSPUDurantDriverUserClient"))
(require-not (iokit-user-client-class "IOUserEthernetResourceUserClient")))
		(require-not (iokit-user-client-class "AGXDevice"))
		(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
		(require-not (iokit-user-client-class "AppleKeyStoreUserClient"))
		(require-all (require-not (iokit-user-client-class "IOTimeSyncUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncClockManagerUserClient")))
		(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
		(require-not (iokit-user-client-class "IOHIDResourceDeviceUserClient"))
		(require-not (iokit-user-client-class "AppleBasebandUserClient"))
		(require-not (iokit-user-client-class "RootDomainUserClient"))
		(require-not (iokit-user-client-class "AGXCommandQueue"))
		(require-not (extension com.apple.security.exception.iokit-user-client-class))
		(require-not (iokit-user-client-class "IOGPUDeviceUserClient"))
		(require-all (require-not (iokit-user-client-class "IOAccelDevice2"))
(require-not (iokit-user-client-class "IOAccelContext2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient2")))
		(require-all (require-not (iokit-user-client-class "IOAccelDevice"))
(require-not (iokit-user-client-class "IOAccelContext"))
(require-not (iokit-user-client-class "IOAccelSubmitter2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient")))
		(require-not (iokit-user-client-class "AGXSharedUserClient"))
		(require-any (iokit-connection "IOGPU")
(iokit-connection "IOGraphicsAccelerator2"))))
(deny iokit-open-service
	(require-all
		(require-not (iokit-user-client-class "AppleKeyStore"))
		(require-not (iokit-user-client-class "AppleJPEGDriver"))
		(require-not (iokit-user-client-class "AGXAcceleratorG"))
		(require-not (iokit-user-client-class "IOSurfaceRoot"))
		(require-all (require-not (iokit-user-client-class "AppleCLCD"))
(require-not (iokit-user-client-class "AppleParavirtDisplay")))
		(require-not (iokit-user-client-class "AppleParavirtGPU"))
		(require-not (entitlement-is-present com.apple.security.exception.iokit-user-client-class))
		(iokit-user-client-class "IOPMrootDomain")))
(deny iokit-set-properties
	(require-all
		(iokit-property "IOPMUBootLPMFWOK")
		(iokit-user-client-class "AppleDialogSPMIPMU")))
(deny ipc-posix-shm*
	(require-all
		(require-all (require-not (ipc-posix-name "shm_notif.tsco.W"))
(require-not (ipc-posix-name "shm_notif.tsco.R"))
(require-not (ipc-posix-name "shm_notif.tacl.W"))
(require-not (ipc-posix-name "shm_notif.tacl.R")))
		(require-not (ipc-posix-name "shm_pcm_audio_sco_read"))
		(require-all (require-not (ipc-posix-name "com.apple.bluetooth.magnet.shm"))
(require-not (ipc-posix-name-regex #"[UNSUPPORTED][UNSUPPORTED]:[UNSUPPORTED][UNSUPPORTED]:[UNSUPPORTED][UNSUPPORTED]:[UNSUPPORTED][UNSUPPORTED]:[UNSUPPORTED][UNSUPPORTED]:[UNSUPPORTED][UNSUPPORTED]-tacl")))
		(ipc-posix-name "shm_pcm_audio_sco_write")))
(deny ipc-posix-shm-read-data
	(require-all
		(require-not (ipc-posix-name "/com.apple.AppSSO.version"))
		(ipc-posix-name "apple.shm.notification_center")
		(entitlement-is-bool-true com.apple.security.on-demand-install-capable)
		(require-any (ipc-posix-name "com.apple.bluetooth.magnet.shm")
(ipc-posix-name-regex #"[UNSUPPORTED][UNSUPPORTED]:[UNSUPPORTED][UNSUPPORTED]:[UNSUPPORTED][UNSUPPORTED]:[UNSUPPORTED][UNSUPPORTED]:[UNSUPPORTED][UNSUPPORTED]:[UNSUPPORTED][UNSUPPORTED]-tacl"))
		(ipc-posix-name "shm_pcm_audio_sco_write")))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-all (require-not (global-name "com.apple.findmy.LocalBeaconing"))
(require-not (global-name "com.apple.BlueTool"))
(require-not (global-name "com.apple.BTServer.map"))
(require-not (global-name "com.apple.BTServer.pbap"))
(require-not (global-name "com.apple.BTServer.avrcp"))
(require-not (global-name "com.apple.powerui.audioAccessorySmartChargeManager")))
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.icloud.findmydeviced"))
		(require-not (global-name "com.apple.mediaserverd"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.WirelessCoexManager"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.BTServer.le"))
		(require-not (global-name "com.apple.icloud.searchpartyd.ownersession"))
		(require-not (global-name "com.apple.carkit.service"))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
		(require-not (global-name "com.apple.locationd.synchronous"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.lsd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
		(require-not (global-name "com.apple.networkserviceproxy"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.touchsetupd.wirelessproximity"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.mobile.keybagd.UserManager.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.MobileInternetSharing"))
		(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
		(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callprovidermanager"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-not (global-name "com.apple.BluetoothCloudServices"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-not (global-name "com.apple.marco"))
		(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.locationd.registration"))
		(require-not (global-name "com.apple.mobilerepaird"))
		(require-not (global-name "com.apple.springboard.services"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.mobileactivationd"))
		(require-not (global-name "com.apple.lsd.modifydb"))
		(require-all (require-not (global-name "com.apple.cvmsServ"))
(require-not (global-name "com.apple.gpumemd.source")))
		(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.itunesstored.xpc"))
		(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callstatecontroller"))
		(require-not (global-name "com.apple.coremedia.videocompositor"))
		(require-not (global-name "com.apple.awdd"))
		(require-not (global-name "com.apple.suggestd.contacts"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
		(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
		(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.iohideventsystem"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.pegasus"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
		(require-not (global-name "com.apple.identityservicesd.embedded.auth"))
		(require-not (global-name "com.apple.privacyaccountingd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.imagent.embedded.auth"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.coremedia.sandboxserver"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.timesync.ptp.manager"))
		(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.coremedia.player.xpc"))
		(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.locationd.spi"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
		(require-not (global-name "com.apple.ProgressReporting"))
		(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
		(require-not (global-name "com.apple.usernotifications.listener"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
		(require-not (global-name "com.apple.coremedia.sts"))
		(require-not (global-name "com.apple.itunescloudd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
		(require-not (global-name "com.apple.frontboard.systemappservices"))
		(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
		(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(require-not (xpc-service-name "com.apple.AGXCompilerService"))
		(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
		(require-not (xpc-service-name "com.apple.MTLCompilerService"))
		(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
		(require-not (global-name "com.apple.mobileasset.autoasset"))
		(require-not (global-name "com.apple.accessories.transport-server"))
		(require-not (global-name "com.apple.mobileassetd"))
		(require-not (global-name "com.apple.mobileassetd.v2"))
		(require-not (global-name "com.apple.accessories.externalaccessory-server"))
		(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
		(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
		(require-not (extension com.apple.security.exception.mach-lookup.global-name))
		(require-not (extension com.apple.security.exception.mach-lookup.local-name))
		(require-not (global-name "com.apple.contactsd"))
		(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
		(require-not (global-name "com.apple.spotlight.IndexAgent"))
		(require-not (global-name "com.apple.ABDatabaseDoctor"))
		(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
		(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
		(require-not (global-name "com.apple.lsd.openurl"))
		(require-not (global-name "com.apple.tccd"))
		(require-not (global-name "com.apple.lsd.advertisingidentifiers"))
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny syscall-unix
	(c1 0f0e 9995 9ce0))
(deny sysctl-read
	(require-all
		(require-not (sysctl-name "net.statistics"))
		(require-not (sysctl-name "kern.wakereason"))
		(require-any (sysctl-name "kern.nisdomainname")
(sysctl-name "kern.ipc.maxsockbuf"))
		(sysctl-name "net.routetable.")
		(sysctl-name "kern.bootsessionuuid")
		(signing-identifier "com.apple.")))
(deny system-fcntl
	(ce 04d2 9991 9ce0))
(deny system-fsctl
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 32))
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 3))))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.assistant.support"))
		(require-not (preference-domain "com.apple.CoreMotion"))
		(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.coremedia"))
		(require-not (preference-domain "com.apple.springboard"))
		(require-not (preference-domain "com.apple.coreaudio"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-all (require-not (preference-domain "com.apple.bluetooth"))
(require-not (preference-domain "com.apple.CoreBluetooth.cloud"))
(require-not (preference-domain "com.apple.BTServer"))
(require-not (preference-domain "com.apple.BTServer.airplane"))
(require-not (preference-domain "com.apple.MobileBluetooth.services"))
(require-not (preference-domain "com.apple.MobileBluetooth.ledevices"))
(require-not (preference-domain "com.apple.MobileBluetooth.debug"))
(require-not (preference-domain "com.apple.MobileBluetooth.devices")))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.conference"))
		(require-not (preference-domain "com.apple.ULLAConcierge"))
		(require-not (preference-domain "com.apple.voicetrigger"))
		(require-not (preference-domain "com.apple.purplebuddy"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.suggestions"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced"))
		(require-any
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true com.apple.itunesstored.private)
				(process-attribute is-apple-signed-executable))
			(require-all
				(require-not (preference-domain "com.apple.locationd"))
				(require-not (preference-domain "com.apple.Metal"))
				(require-not (preference-domain "com.apple.AppSupport"))
				(require-not (preference-domain "com.apple.GEO"))
				(require-not (preference-domain "com.apple.mobileipod"))
				(require-not (preference-domain "com.apple.avfoundation"))
				(require-not (preference-domain "com.apple.opengl"))
				(require-not (preference-domain "com.apple.CrashReporter"))
				(require-not (preference-domain "com.apple.ids"))
				(require-not (preference-domain "com.apple.MobileAsset"))
				(require-not (preference-domain "com.apple.TelephonyUtilities"))
				(require-not (preference-domain "com.apple.marco"))
				(require-not (preference-domain "com.apple.corevideo"))
				(require-not (preference-domain "com.apple.CoreDuet"))
				(require-not (preference-domain "com.apple.DataMigration"))
				(require-not (preference-domain "com.apple.icloud.findmydeviced.postwipe"))
				(require-not (preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
				(require-not (preference-domain "com.apple.AOSNotification.public.notbackedup"))
				(preference-domain "com.apple.PeoplePicker")))))
(deny user-preference-write
	(require-all
		(require-all (require-not (preference-domain "com.apple.bluetooth"))
(require-not (preference-domain "com.apple.CoreBluetooth.cloud"))
(require-not (preference-domain "com.apple.BTServer"))
(require-not (preference-domain "com.apple.BTServer.airplane"))
(require-not (preference-domain "com.apple.MobileBluetooth.services"))
(require-not (preference-domain "com.apple.MobileBluetooth.ledevices"))
(require-not (preference-domain "com.apple.MobileBluetooth.debug"))
(require-not (preference-domain "com.apple.MobileBluetooth.devices")))
		(preference-domain "com.apple.springboard")))
(deny storage-class-map)
