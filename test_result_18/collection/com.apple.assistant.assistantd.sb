(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd"))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd"))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd"))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd"))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd"))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-not (subpath-prefix "${HOME}/Library/Cookies")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Library/Cookies"))))))
(deny file-read*
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Assistant"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.siri.")))
		(require-all (require-not (subpath "/Library/Audio/Tunings"))
(require-not (subpath-prefix "${HOME}/siri_recordings")))
		(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-assistantd.log"))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
		(require-not (literal "/private/var/preferences/com.apple.security.plist"))
		(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/Assistant"))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-not (subpath "/usr/local/lib"))
		(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(literal "/private/var/containers/Bundle/")
				(require-not (regex #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+/Info.plist" #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+.+/Info.plist")))
			(require-all
				(entitlement-is-present com.apple.private.networkextension.configuration)
				(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))
			(require-all
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
				(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-assistantd.log"))
				(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")))
				(require-not (subpath-prefix "${HOME}/Library/Cookies"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
				(require-any
					(require-all
						(vnode-type REGULAR-FILE)
						(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices"))))
					(require-all
						(vnode-type DIRECTORY)
						(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices"))))
					(require-all
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(extension com.apple.tcc.kTCCServiceAddressBook)
						(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
						(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
						(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$"))
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
						(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
						(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
						(require-any
							(extension com.apple.app-sandbox.read)
							(extension com.apple.app-sandbox.read-write)
							(extension com.apple.security.exception.files.absolute-path.read-only)
							(extension com.apple.security.exception.files.absolute-path.read-write)
							(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
							(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches")))))))))
(deny file-read-metadata
	(require-all
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-not (literal-prefix "${HOME}"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-not (literal-prefix "${HOME}/Library/Logs/awd"))
		(require-any
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
				(literal "/private/var/")
				(require-any
					(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(literal "/private/var/preferences/com.apple.networkd.plist")
				(require-any (subpath-prefix "${HOME}/Library/Assistant")
(literal-prefix "${HOME}/Library/Caches/com.apple.siri."))
				(require-any (subpath "/Library/Audio/Tunings")
(subpath-prefix "${HOME}/siri_recordings"))
				(literal-prefix "${HOME}/Library/Logs/awd/awd-assistantd.log")
				(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
				(literal "/private/var/preferences/com.apple.security.plist")
				(subpath-prefix "${HOME}/Library/Logs/CrashReporter/Assistant")
				(literal "/private/var/db/com.apple.networkextension.tracker-info")
				(subpath "/private/var/tmp")
				(subpath-prefix "${PROCESS_TEMP_DIR}")
				(subpath "/usr/local/lib")
				(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
				(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd")
				(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
					(require-all
						(literal "/private/var/containers/Bundle/")
						(regex #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+/Info.plist" #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+.+/Info.plist"))
					(require-all
						(entitlement-is-present com.apple.private.networkextension.configuration)
						(literal "/private/var/preferences/com.apple.networkextension.plist"))
					(require-all
						(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
						(literal-prefix "${HOME}/Library/Logs/awd/awd-assistantd.log")
						(subpath "/private/var/containers/Data/System/com.apple.geod")
						(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices"))
						(subpath-prefix "${HOME}/Library/Cookies")
						(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
						(require-any
							(require-all
								(vnode-type REGULAR-FILE)
								(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices")))
							(require-all
								(vnode-type DIRECTORY)
								(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices")))
							(require-all
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(extension com.apple.tcc.kTCCServiceAddressBook)
								(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
								(subpath-prefix "${HOME}/Library/AddressBook")
								(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
								(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
								(require-any
									(extension com.apple.app-sandbox.read)
									(extension com.apple.app-sandbox.read-write)
									(extension com.apple.security.exception.files.absolute-path.read-only)
									(extension com.apple.security.exception.files.absolute-path.read-write)
									(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
									(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches")))))))))))
(deny file-write*
	(require-all
		(require-all (require-not (subpath-prefix "${HOME}/Library/Assistant"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.siri.")))
		(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-assistantd.log"))
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd"))
		(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/Assistant"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")))
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(extension com.apple.tcc.kTCCServiceAddressBook)
						(require-any
							(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
							(require-all
								(vnode-type REGULAR-FILE)
								(require-not (literal-prefix "${HOME}/Library/AddressBook/"))
								(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices")))))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices")))
					(require-all
						(vnode-type DIRECTORY)
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices"))))))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (literal-prefix "${HOME}/Library/Logs/awd"))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "RootDomainUserClient"))
		(require-not (iokit-user-client-class "AppleKeyStoreUserClient"))))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-not (global-name "com.apple.mediaserverd"))
		(require-not (global-name "com.apple.voiceservices.tts"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
		(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
		(require-not (global-name "com.apple.locationd.synchronous"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.audio.AudioQueueServer"))
		(require-not (global-name "com.apple.mediaremoted.xpc"))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-not (global-name "com.apple.coreduetd"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-all (require-not (global-name "com.apple.assistant_service"))
(require-not (global-name "com.apple.BTLEAudioController.xpc")))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.marco"))
		(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.locationd.registration"))
		(require-not (global-name "com.apple.springboard.services"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
		(require-not (global-name "com.apple.awdd"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.accountsd.oauthsigner"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (xpc-service-name "com.apple.audio.analytics.service"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.imagent.embedded.auth"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.locationd.spi"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.usernotifications.listener"))
		(require-not (local-name "com.apple.assistant.contextprovider."))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(extension com.apple.security.exception.mach-lookup.global-name)
		(extension com.apple.security.exception.mach-lookup.local-name)
		(global-name "com.apple.contactsd")
		(global-name "com.apple.spotlight.IndexDelegateAgent")
		(global-name "com.apple.spotlight.IndexAgent")
		(global-name "com.apple.ABDatabaseDoctor")
		(global-name "com.apple.identityservicesd.idquery.embedded.auth")
		(global-name "com.apple.cmfsyncagent.embedded.auth")
		(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
		(global-name "com.apple.lsd.openurl")
		(global-name "com.apple.tccd")
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny syscall-unix
	(c1 1523 66e6 9ce0))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.assistant.logging"))
		(require-not (preference-domain "com.apple.CoreDuet"))
		(require-all (require-not (preference-domain "com.apple.weather"))
(require-not (preference-domain "com.apple.assistant.token"))
(require-not (preference-domain "com.apple.AssistantServices"))
(require-not (preference-domain "com.apple.siri.backedup.encrypted")))
		(require-not (preference-domain "com.apple.assistant.support"))
		(require-not (preference-domain "com.apple.AppSupport"))
		(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
		(require-not (preference-domain "com.apple.DataMigration"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.coremedia"))
		(require-not (preference-domain "com.apple.springboard"))
		(require-not (preference-domain "com.apple.coreaudio"))
		(require-not (preference-domain "com.apple.GEO"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.assistant.backedup"))
		(require-not (preference-domain "com.apple.mobileipod"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.postwipe"))
		(require-not (preference-domain "com.apple.mediaremote"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.marco"))
		(require-not (preference-domain "com.apple.avfoundation"))
		(require-not (preference-domain "com.apple.voicetrigger"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.AOSNotification.public.notbackedup"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.PeoplePicker"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
		(require-not (preference-domain "com.apple.assistant"))
		(require-not (preference-domain "com.apple.avfoundation.avvc"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(preference-domain "com.apple.WebFoundation")))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.assistant.logging"))
		(require-all (require-not (preference-domain "com.apple.weather"))
(require-not (preference-domain "com.apple.assistant.token"))
(require-not (preference-domain "com.apple.AssistantServices"))
(require-not (preference-domain "com.apple.siri.backedup.encrypted")))
		(require-not (preference-domain "com.apple.assistant.support"))
		(require-not (preference-domain "com.apple.assistant.backedup"))
		(require-not (preference-domain "com.apple.assistant"))
		(preference-domain "com.apple.voicetrigger")))
(deny storage-class-map)
