(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (subpath-prefix "${HOME}/Library/Caches/nehelper"))
		(subpath-prefix "${HOME}/Library/Cookies"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (subpath-prefix "${HOME}/Library/Caches/nehelper"))
		(subpath-prefix "${HOME}/Library/Cookies"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (subpath-prefix "${HOME}/Library/Caches/nehelper"))
		(subpath-prefix "${HOME}/Library/Cookies"))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-not (subpath-prefix "${HOME}/Library/Caches/nehelper"))
		(subpath-prefix "${HOME}/Library/Cookies"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath-prefix "${HOME}/Library/Caches/nehelper"))
		(subpath-prefix "${HOME}/Library/Cookies")))
(deny file-read*
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/nehelper")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/nehelper")))
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
		(require-all (require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/MDMAppManagement.plist"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/MDMAppManagement.plist"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/MDMAppManagement.plist")))
		(require-not (subpath-prefix "${HOME}/Library/Caches/nehelper"))
		(require-not (subpath "/usr/sbin"))
		(require-all (require-not (subpath "/usr/bin"))
(require-not (subpath "/AppleInternal/CoreOS"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/com.apple.ManagedSettings/EffectiveSettings.plist")))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
		(require-not (literal "/private/var/preferences/com.apple.security.plist"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle/Application"))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-not (subpath "/private/var/tmp"))
		(require-all (require-not (literal "/private/var/preferences/Logging/Subsystems/com.apple.network.plist"))
(require-not (literal "/private/var/preferences/Logging/Subsystems/com.apple.networkextension.plist")))
		(require-any
			(require-all
				(extension com.apple.assets.read)
				(require-not (subpath "/private/var/MobileAsset"))
				(require-not (subpath-prefix "${HOME}/Library/Assets")))
			(require-all
				(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
				(require-not (subpath-prefix "${HOME}/Library/Cookies"))
				(require-not (literal "/private/var/preferences/SystemConfiguration/preferences.plist"))
				(require-any
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.networkextension")
						(require-not (regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.]networkextension[.]plist" #"^/private/var/Managed Preferences/mobile/com[.]apple[.]networkextension[.][-0-9A-Z_a-z]+[.]plist")))
					(require-all
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
						(require-not (subpath "/usr/local/bin"))
						(require-any
							(require-all
								(entitlement-is-present com.apple.private.networkextension.configuration)
								(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
								(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
								(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
								(literal "/private/var/")
								(require-any
									(require-all
										(literal "/private/var/Managed Preferences/mobile/com.apple.networkd")
										(require-not (regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.]networkd[.]plist" #"^/private/var/Managed Preferences/mobile/com[.]apple[.]networkd[.][-0-9A-Z_a-z]+[.]plist")))
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension")
										(require-not (regex #"^/private/var/preferences/com[.]apple[.]networkextension[.]plist" #"^/private/var/preferences/com[.]apple[.]networkextension[.][-0-9A-Z_a-z]+[.]plist")))
									(require-all
										(literal "/private/var/preferences/com.apple.networkd")
										(require-not (regex #"^/private/var/preferences/com[.]apple[.]networkd[.]plist" #"^/private/var/preferences/com[.]apple[.]networkd[.][-0-9A-Z_a-z]+[.]plist")))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
									(require-all
										(literal "/private/var/preferences/SystemConfiguration/VPN-")
										(require-not (regex #"^/private/var/preferences/SystemConfiguration/VPN-[^/]+[.]plist"))
										(require-any
											(extension com.apple.app-sandbox.read)
											(extension com.apple.app-sandbox.read-write)
											(extension com.apple.security.exception.files.absolute-path.read-only)
											(extension com.apple.security.exception.files.absolute-path.read-write)
											(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
											(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))))))
							(require-all
								(require-not (subpath "/Applications"))
								(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
								(require-not (subpath "/private/var/containers/Bundle/Application"))
								(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
								(literal "/private/var/")
								(require-any
									(require-all
										(literal "/private/var/Managed Preferences/mobile/com.apple.networkd")
										(require-not (regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.]networkd[.]plist" #"^/private/var/Managed Preferences/mobile/com[.]apple[.]networkd[.][-0-9A-Z_a-z]+[.]plist")))
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension")
										(require-not (regex #"^/private/var/preferences/com[.]apple[.]networkextension[.]plist" #"^/private/var/preferences/com[.]apple[.]networkextension[.][-0-9A-Z_a-z]+[.]plist")))
									(require-all
										(literal "/private/var/preferences/com.apple.networkd")
										(require-not (regex #"^/private/var/preferences/com[.]apple[.]networkd[.]plist" #"^/private/var/preferences/com[.]apple[.]networkd[.][-0-9A-Z_a-z]+[.]plist")))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
									(require-all
										(literal "/private/var/preferences/SystemConfiguration/VPN-")
										(require-not (regex #"^/private/var/preferences/SystemConfiguration/VPN-[^/]+[.]plist"))
										(require-any
											(extension com.apple.app-sandbox.read)
											(extension com.apple.app-sandbox.read-write)
											(extension com.apple.security.exception.files.absolute-path.read-only)
											(extension com.apple.security.exception.files.absolute-path.read-write)
											(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
											(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches")))))))))))))
(deny file-read-metadata
	(require-all
		(require-not (subpath-prefix "${HOME}/Library/Caches/nehelper"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (subpath-prefix "${HOME}/Library/Cookies"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))))
(deny file-write*
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/nehelper")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/nehelper")))
	(require-all
		(require-not (subpath-prefix "${HOME}/Library/Caches/nehelper"))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${HOME}/Library/Cookies"))
		(require-not (literal "/private/var/preferences/SystemConfiguration/preferences.plist"))
		(require-all (require-not (literal "/private/var/preferences/Logging/Subsystems/com.apple.network.plist"))
(require-not (literal "/private/var/preferences/Logging/Subsystems/com.apple.networkextension.plist")))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-any
			(require-all
				(literal "/private/var/preferences/com.apple.networkd")
				(require-not (regex #"^/private/var/preferences/com[.]apple[.]networkd[.]plist" #"^/private/var/preferences/com[.]apple[.]networkd[.][-0-9A-Z_a-z]+[.]plist")))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension")
				(require-not (regex #"^/private/var/preferences/com[.]apple[.]networkextension[.]plist" #"^/private/var/preferences/com[.]apple[.]networkextension[.][-0-9A-Z_a-z]+[.]plist")))
			(require-all
				(literal "/private/var/preferences/SystemConfiguration/VPN-")
				(regex #"^/private/var/preferences/SystemConfiguration/VPN-[^/]+[.]plist")))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/nehelper")
		(subpath-prefix "${HOME}/Library/Caches/nehelper")
		(literal "/private/var/db/com.apple.networkextension.tracker-info")
		(subpath "/private/var/tmp")
		(subpath-prefix "${HOME}/Library/Cookies")
		(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
		(require-any (literal "/private/var/preferences/Logging/Subsystems/com.apple.network.plist")
(literal "/private/var/preferences/Logging/Subsystems/com.apple.networkextension.plist"))
		(subpath-prefix "${PROCESS_TEMP_DIR}")
		(require-any
			(require-all
				(literal "/private/var/preferences/com.apple.networkd")
				(regex #"^/private/var/preferences/com[.]apple[.]networkd[.]plist" #"^/private/var/preferences/com[.]apple[.]networkd[.][-0-9A-Z_a-z]+[.]plist"))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension")
				(regex #"^/private/var/preferences/com[.]apple[.]networkextension[.]plist" #"^/private/var/preferences/com[.]apple[.]networkextension[.][-0-9A-Z_a-z]+[.]plist"))
			(require-all
				(literal "/private/var/preferences/SystemConfiguration/VPN-")
				(regex #"^/private/var/preferences/SystemConfiguration/VPN-[^/]+[.]plist")))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.mobileasset.autoasset"))
		(require-not (global-name "com.apple.networking.captivenetworksupport"))
		(require-not (global-name "com.apple.mobileassetd"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.locationd.synchronous"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (global-name "com.apple.private.corewifi-xpc"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.mobileassetd.v2"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.locationd.registration"))
		(require-not (global-name "com.apple.lsd.openurl"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.managedconfiguration.profiled"))
		(require-not (global-name "com.apple.mDNSResponder.control"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.networkd_privileged"))
		(require-not (global-name "com.apple.logd.admin"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-not (global-name "com.apple.locationd.spi"))
		(require-not (global-name "com.apple.tccd"))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (global-name "com.apple.lsd.advertisingidentifiers"))
		(require-not (global-name "com.apple.frontboard.systemappservices"))
		(require-not (global-name "com.apple.CoreServices.coreservicesd"))
		(require-not (extension com.apple.security.exception.mach-lookup.global-name))
		(require-not (extension com.apple.security.exception.mach-lookup.local-name))
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny mach-register
	(require-all
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.networkd_privileged"))))
(deny network*
	(require-all
		(require-not (local udp "*:4500"))
		(require-not (local udp "*:500"))
		(literal "/private/var/run/racoon.sock")))
(deny network-inbound
	(require-not (entitlement-is-bool-true com.apple.developer.networking.multicast)))
(deny network-outbound
	(require-all
		(require-not (control-name "com.apple.netsrc"))
		(require-all (require-not (control-name "com.apple.content-filter"))
(require-not (control-name "com.apple.network.advisory"))
(require-not (control-name "com.apple.net.utun_control"))
(require-not (control-name "com.apple.net.netagent"))
(require-not (control-name "com.apple.net.necp_control")))
		(require-not (control-name "com.apple.net.ipsec_control"))
		(require-not (literal "/private/var/run/mDNSResponder"))
		(require-not (remote udp "*:443"))
		(require-not (remote udp "*:*"))
		(require-not (remote tcp "*:*"))
		(require-not (control-name "com.apple.flow-divert"))
		(require-not (control-name "com.apple.network.statistics"))))
(deny syscall-unix
	(c1 1523 608b 9ce0))
(deny sysctl*
	(require-all
		(require-not (sysctl-name "kern.ipc.io_policy.throttled"))
		(sysctl-name "net.")))
(deny sysctl-read
	(require-all
		(require-not (sysctl-name "kern.ipc.io_policy.throttled"))
		(require-not (sysctl-name "net.statistics"))
		(require-not (sysctl-name "net.routetable."))
		(require-all (require-not (sysctl-name "kern.nisdomainname"))
(require-not (sysctl-name "kern.ipc.maxsockbuf")))
		(sysctl-name "net.")))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.AppSupport"))
		(require-not (preference-domain "com.apple.GEO"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.WebFoundation"))
		(require-not (preference-domain "com.apple.operator"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.MobileAsset"))
		(preference-domain "com.apple.locationd")))
(deny storage-class-map)
