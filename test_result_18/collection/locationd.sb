(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.locationd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd")))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
		(require-not (extension com.apple.sandbox.container))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.sandbox.container))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.sandbox.container))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.locationd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd")))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
		(require-not (extension com.apple.sandbox.container))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.sandbox.container))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.sandbox.container))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.locationd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd")))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
		(require-not (extension com.apple.sandbox.container))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.sandbox.container))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.sandbox.container))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.locationd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd")))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
		(require-not (extension com.apple.sandbox.container))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.sandbox.container))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.sandbox.container))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.locationd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd")))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
		(require-not (extension com.apple.sandbox.container))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.sandbox.container))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.sandbox.container))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(require-all (require-not (subpath "/private/var/tmp/com.apple.locationd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/locationd"))
		(extension com.apple.sandbox.executable))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-not (extension com.apple.sandbox.container))
		(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (extension com.apple.sandbox.container))
		(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (extension com.apple.sandbox.container))
		(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read"))))
(deny file-map-executable
	(require-not (literal "/AppleInternal/Library/Frameworks/CoreAutomation")))
(deny file-read*
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/vision"))
		(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
		(require-all (require-not (literal "/private/var/db/gpsd"))
(require-not (subpath "/private/var/root/Library/Caches/locationd"))
(require-not (literal "/private/var/root/Library/Caches/com.apple.locationd"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.locationd."))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/vision"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/raven")))
		(require-not (literal "/usr/sbin"))
		(require-not (subpath "/private/var/containers/Bundle"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/raven"))
		(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles"))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
		(require-not (subpath "/Developer/Applications"))
		(require-not (literal "/private/var/preferences/com.apple.security.plist"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
		(require-all (require-not (subpath "/AppleInternal/Library/LocationBundles"))
(require-not (literal "/AppleInternal/Library/Frameworks/CoreAutomation"))
(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.locationd.plist"))
(require-not (subpath "/private/var/MobileAsset/AssetsV2/com_apple_MobileAsset_MobileAccessoryUpdate_DurianFirmware")))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles"))
		(require-not (subpath "/Applications"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/locationd"))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(debug-mode)
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/locationd")))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
				(require-not (process-attribute is-apple-signed-executable)))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.plist")
				(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))
			(require-all
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs"))
				(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.locationd"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.locationd")))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter"))
				(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")))
				(require-not (literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
				(require-all (require-not (subpath "/private/var/tmp/com.apple.locationd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd")))
				(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal"))
				(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm")))
				(require-all (require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs"))
				(require-not (extension com.apple.sandbox.container))
				(require-any
					(require-all
						(vnode-type REGULAR-FILE)
						(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd"))))
					(require-all
						(vnode-type DIRECTORY)
						(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd"))))
					(require-all
						(literal "/private/var/")
						(require-any
							(extension com.apple.app-sandbox.read)
							(extension com.apple.app-sandbox.read-write)
							(extension com.apple.security.exception.files.absolute-path.read-only)
							(extension com.apple.security.exception.files.absolute-path.read-write)
							(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
							(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]VehicleConnection" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection"))
								(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$"))
								(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]com.apple.locationd" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd"))
								(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]"))
								(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]CMActivityLog" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog"))
								(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")))))))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager")))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}"))))))))
(deny file-read-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-read-metadata
	(require-all
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.locationd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd")))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Caches"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection"))
		(require-not (literal "/private/var/root/Library/Caches"))
		(require-not (extension com.apple.sandbox.container))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
						(require-not (process-attribute is-apple-signed-executable))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync"))
						(literal "/private/var/"))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
								(require-not (process-attribute is-apple-signed-executable))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync"))
								(literal "/private/var/"))
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
								(require-not (subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")))))
					(require-all
						(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
						(require-any (literal "/private/var/db/gpsd")
(subpath "/private/var/root/Library/Caches/locationd")
(literal "/private/var/root/Library/Caches/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.locationd.")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/vision")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/raven"))
						(literal "/usr/sbin")
						(subpath "/private/var/containers/Bundle")
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")
						(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/raven")
						(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles")
						(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
						(subpath "/Developer/Applications")
						(literal "/private/var/preferences/com.apple.security.plist")
						(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles")
						(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
						(require-any (subpath "/AppleInternal/Library/LocationBundles")
(literal "/AppleInternal/Library/Frameworks/CoreAutomation")
(literal "/private/var/Managed Preferences/mobile/com.apple.locationd.plist")
(subpath "/private/var/MobileAsset/AssetsV2/com_apple_MobileAsset_MobileAccessoryUpdate_DurianFirmware"))
						(literal "/private/var/db/com.apple.networkextension.tracker-info")
						(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
						(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles")
						(subpath "/Applications")
						(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
						(subpath-prefix "${FRONT_USER_HOME}/Library/locationd")
						(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
						(require-any
							(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(debug-mode)
								(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/locationd"))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
								(process-attribute is-apple-signed-executable))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.plist")
								(entitlement-is-present com.apple.private.networkextension.configuration))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager"))
									(require-all
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
										(subpath-prefix "${FRONT_USER_HOME}"))))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs")
								(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.locationd"))
								(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")
								(subpath "/private/var/containers/Data/System/com.apple.geod")
								(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
								(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
								(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
								(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd")
								(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal")
								(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm"))
								(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
								(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
								(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs")
								(extension com.apple.sandbox.container)
								(require-any
									(require-all
										(vnode-type REGULAR-FILE)
										(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")))
									(require-all
										(vnode-type DIRECTORY)
										(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")))
									(require-all
										(literal "/private/var/")
										(require-any
											(extension com.apple.app-sandbox.read)
											(extension com.apple.app-sandbox.read-write)
											(extension com.apple.security.exception.files.absolute-path.read-only)
											(extension com.apple.security.exception.files.absolute-path.read-write)
											(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
											(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Library/Logs/CrashReporter/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]VehicleConnection" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
												(regex #"^/private/var/mobile/Library/Logs/CrashReporter/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]com.apple.locationd" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]")
												(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]CMActivityLog" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))))))))))
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
				(require-not (process-attribute is-apple-signed-executable))
				(literal "/private/var/"))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(require-not (process-attribute is-apple-signed-executable))
						(literal "/private/var/"))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/vision")
				(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
				(require-any (literal "/private/var/db/gpsd")
(subpath "/private/var/root/Library/Caches/locationd")
(literal "/private/var/root/Library/Caches/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.locationd.")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/vision")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/raven"))
				(literal "/usr/sbin")
				(subpath "/private/var/containers/Bundle")
				(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")
				(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/raven")
				(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles")
				(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
				(subpath "/Developer/Applications")
				(literal "/private/var/preferences/com.apple.security.plist")
				(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles")
				(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
				(require-any (subpath "/AppleInternal/Library/LocationBundles")
(literal "/AppleInternal/Library/Frameworks/CoreAutomation")
(literal "/private/var/Managed Preferences/mobile/com.apple.locationd.plist")
(subpath "/private/var/MobileAsset/AssetsV2/com_apple_MobileAsset_MobileAccessoryUpdate_DurianFirmware"))
				(literal "/private/var/db/com.apple.networkextension.tracker-info")
				(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
				(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles")
				(subpath "/Applications")
				(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
				(subpath-prefix "${FRONT_USER_HOME}/Library/locationd")
				(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(debug-mode)
						(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/locationd"))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.plist")
						(entitlement-is-present com.apple.private.networkextension.configuration))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager"))
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs")
						(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.locationd"))
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")
						(subpath "/private/var/containers/Data/System/com.apple.geod")
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
						(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
						(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
						(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
						(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd")
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal")
						(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm"))
						(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
						(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs")
						(extension com.apple.sandbox.container)
						(require-any
							(require-all
								(vnode-type REGULAR-FILE)
								(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")))
							(require-all
								(vnode-type DIRECTORY)
								(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")))
							(require-all
								(literal "/private/var/")
								(require-any
									(extension com.apple.app-sandbox.read)
									(extension com.apple.app-sandbox.read-write)
									(extension com.apple.security.exception.files.absolute-path.read-only)
									(extension com.apple.security.exception.files.absolute-path.read-write)
									(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
									(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Library/Logs/CrashReporter/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]VehicleConnection" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
										(regex #"^/private/var/mobile/Library/Logs/CrashReporter/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]com.apple.locationd" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]")
										(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]CMActivityLog" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")))))))))))
(deny file-read-xattr
	(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")))
(deny file-write*
	(require-all
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/vision"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/raven"))
		(require-all (require-not (literal "/private/var/db/gpsd"))
(require-not (subpath "/private/var/root/Library/Caches/locationd"))
(require-not (literal "/private/var/root/Library/Caches/com.apple.locationd"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.locationd."))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/vision"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/raven")))
		(require-all (require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PayloadManifest.plist"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PayloadManifest.plist")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/locationd"))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PayloadManifest.plist"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/"))
				(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager")))
			(require-all
				(debug-mode)
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/locationd")))
			(require-all
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs"))
				(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.locationd"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.locationd")))
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")))
				(require-not (literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
				(require-all (require-not (subpath "/private/var/tmp/com.apple.locationd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd")))
				(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal"))
				(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm")))
				(require-all (require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs"))
				(require-any
					(require-all
						(vnode-type REGULAR-FILE)
						(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd"))))
					(require-all
						(vnode-type DIRECTORY)
						(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd"))))
					(require-all
						(require-not (extension com.apple.sandbox.container))
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]VehicleConnection" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection"))
						(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]com.apple.locationd" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd"))
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]"))
						(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]CMActivityLog" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog")))))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
				(require-not (process-attribute is-apple-signed-executable)))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-not (literal "/private/var/root/Library/Caches"))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (process-attribute is-apple-signed-executable)))))))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Caches"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}"))
		(require-any (literal "/private/var/db/gpsd")
(subpath "/private/var/root/Library/Caches/locationd")
(literal "/private/var/root/Library/Caches/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.locationd.")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/vision")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/raven"))
		(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PayloadManifest.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PayloadManifest.plist"))
		(subpath-prefix "${FRONT_USER_HOME}/Library/locationd")
		(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
		(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PayloadManifest.plist")
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager"))
			(require-all
				(debug-mode)
				(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/locationd"))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs")
				(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.locationd"))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
				(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
				(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd")
				(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal")
				(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm"))
				(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
				(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
				(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs")
				(require-any
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")))
					(require-all
						(vnode-type DIRECTORY)
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")))
					(require-all
						(extension com.apple.sandbox.container)
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/Logs/CrashReporter/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]VehicleConnection" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection")
						(regex #"^/private/var/mobile/Library/Logs/CrashReporter/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]com.apple.locationd" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]")
						(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]CMActivityLog" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog")))))))
(deny file-write-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-write-mode
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
		(subpath-prefix "${FRONT_USER_HOME}")
		(require-any (literal "/private/var/db/gpsd")
(subpath "/private/var/root/Library/Caches/locationd")
(literal "/private/var/root/Library/Caches/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.locationd.")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/vision")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/raven"))
		(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PayloadManifest.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PayloadManifest.plist"))
		(subpath-prefix "${FRONT_USER_HOME}/Library/locationd")
		(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
		(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PayloadManifest.plist")
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager"))
			(require-all
				(debug-mode)
				(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/locationd"))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs")
				(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.locationd"))
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
				(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
				(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
				(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd")
				(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal")
				(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm"))
				(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
				(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
				(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs")
				(require-any
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")))
					(require-all
						(vnode-type DIRECTORY)
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")))
					(require-all
						(extension com.apple.sandbox.container)
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/Logs/CrashReporter/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]VehicleConnection" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection")
						(regex #"^/private/var/mobile/Library/Logs/CrashReporter/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]com.apple.locationd" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]")
						(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]CMActivityLog" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog")))))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny file-write-xattr
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(literal "/private/var/")
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")))
			(require-all
				(require-any (literal "/private/var/db/gpsd")
(subpath "/private/var/root/Library/Caches/locationd")
(literal "/private/var/root/Library/Caches/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.locationd.")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/vision")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/raven"))
				(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PayloadManifest.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PayloadManifest.plist"))
				(subpath-prefix "${FRONT_USER_HOME}/Library/locationd")
				(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
				(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PayloadManifest.plist")
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager"))
					(require-all
						(debug-mode)
						(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/locationd"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs")
						(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.locationd"))
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd"))
						(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
						(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
						(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd")
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal")
						(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm"))
						(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
						(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs")
						(require-any
							(require-all
								(vnode-type REGULAR-FILE)
								(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")))
							(require-all
								(vnode-type DIRECTORY)
								(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")))
							(require-all
								(extension com.apple.sandbox.container)
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/Logs/CrashReporter/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]VehicleConnection" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection")
								(regex #"^/private/var/mobile/Library/Logs/CrashReporter/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]com.apple.locationd" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]")
								(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]CMActivityLog" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog")))))))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "AppleSPUHIDDeviceUserClient"))
		(require-not (iokit-user-client-class "AppleOscarCMAUserClient"))
		(require-not (iokit-user-client-class "AppleBasebandPCIUserClient"))
		(require-not (iokit-user-client-class "AppleSPUHIDDriverUserClient"))
		(require-not (iokit-user-client-class "AppleSMCClient"))
		(require-not (iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
		(require-not (iokit-user-client-class "RootDomainUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
		(require-not (iokit-user-client-class "IOHIDLibUserClient"))
		(require-all (require-not (iokit-user-client-class "IOTimeSyncUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncClockManagerUserClient")))
		(require-not (iokit-user-client-class "AppleBasebandUserClient"))
		(require-not (iokit-user-client-class "IOTimeSyncUserFilteredServiceUserClient"))
		(require-not (extension com.apple.security.exception.iokit-user-client-class))
		(iokit-user-client-class "AppleKeyStoreUserClient")
		(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient"))
		(iokit-user-client-class "ANEClientHintsUserClient")
		(entitlement-is-bool-true com.apple.private.ane.allow-set-client-hints)))
(deny iokit-open-service
	(iokit-user-client-class "IOPMrootDomain"))
(deny iokit-set-properties
	(require-all
		(iokit-property "interval")
		(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-not (global-name "com.apple.fairplayd.versioned"))
		(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.mediaserverd"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.server.bluetooth.le.att.xpc"))
		(require-not (global-name "com.apple.WirelessCoexManager"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.accessories.transport-server"))
		(require-not (global-name "com.apple.icloud.searchpartyd.ownersession"))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
		(require-not (global-name "com.apple.locationd.synchronous"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
		(require-not (global-name "com.apple.lsd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
		(require-not (global-name "com.apple.contactsd"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.nanoprefsync"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
		(require-not (global-name "com.apple.routined.registration"))
		(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
		(require-not (global-name "com.apple.FileCoordination"))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (global-name "com.apple.icloud.searchpartyd.beaconmanager"))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
		(require-not (global-name "com.apple.cloudasset.cloudd"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
		(require-not (global-name "com.apple.icloud.searchpartyd.pairingmanager"))
		(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.apsd"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-not (global-name "com.apple.accessoryupdater.uarp"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.wirelessproxd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.backlightd"))
		(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-not (global-name "com.apple.marco"))
		(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.ckdiscretionaryd"))
		(require-not (global-name "com.apple.locationd.registration"))
		(require-not (global-name "com.apple.appconduitd.device-connection"))
		(require-not (global-name "com.apple.accessories.externalaccessory-server"))
		(require-not (global-name "com.apple.springboard.services"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.server.bluetooth"))
		(require-not (global-name "com.apple.mobileactivationd"))
		(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
		(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.itunesstored.xpc"))
		(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
		(require-not (global-name "com.apple.backboard.hid.services"))
		(require-not (global-name "com.apple.cache_delete"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callstatecontroller"))
		(require-not (global-name "com.apple.coremedia.videocompositor"))
		(require-not (global-name "com.apple.awdd"))
		(require-not (global-name "com.apple.carkit.dnd.service"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.healthd.server"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
		(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
		(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.cloudd"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.corefollowup.agent"))
		(require-not (global-name "com.apple.iohideventsystem"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.pegasus"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.passd.usage"))
		(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
		(require-not (global-name "com.apple.identityservicesd.embedded.auth"))
		(require-not (global-name "com.apple.privacyaccountingd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
		(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.coremedia.sandboxserver"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.timesync.ptp.manager"))
		(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
		(require-all (require-not (global-name "com.apple.countryd.update"))
(require-not (global-name "com.apple.network.IPConfiguration")))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.coremedia.player.xpc"))
		(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
		(require-all (require-not (global-name "com.apple.gpsd"))
(require-not (global-name "com.apple.StatusKit.local"))
(require-not (global-name "com.apple.icloud.searchpartyd.scheduler"))
(require-not (global-name "com.apple.icloud.searchpartyd.finderstatemanager"))
(require-not (global-name "com.apple.icloud.searchpartyd.advertisementcache"))
(require-not (global-name "com.apple.pipelined"))
(require-not (global-name "com.apple.pipelined.maintenance"))
(require-not (global-name "com.apple.proactive.hero.AppPrediction.predictions")))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.aonsensed.xpc"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-not (global-name "com.apple.accessories.connection-info-server"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
		(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
		(require-all (require-not (global-name "com.apple.commcenter.atcs.xpc"))
(require-not (global-name "com.apple.commcenter.ari.rt.xpc")))
		(require-not (global-name "com.apple.backboard.hid-services.xpc"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
		(require-not (global-name "com.apple.usernotifications.listener"))
		(require-not (global-name "com.apple.navigationListener"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
		(require-not (global-name "com.apple.coremedia.sts"))
		(require-not (global-name "com.apple.itunescloudd.xpc"))
		(require-not (global-name "com.apple.callkit.callcontrollerhost"))
		(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
		(require-not (global-name "com.apple.timed.xpc"))
		(require-not (global-name "com.apple.appleneuralengine"))
		(require-not (global-name "com.apple.frontboard.systemappservices"))
		(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
		(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
		(extension com.apple.security.exception.mach-lookup.global-name)
		(extension com.apple.security.exception.mach-lookup.local-name)
		(global-name "com.apple.lsd.openurl")
		(global-name "com.apple.tccd")
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(global-name "com.apple.ckdiscretionaryd.debug")
			(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
			(global-name "com.apple.cloudkit.partlycloudd")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny syscall-unix
	(c1 0f0e 3d5f 9ce0))
(deny sysctl-read
	(require-all
		(require-not (sysctl-name "hw.targettype"))
		(require-not (sysctl-name "kern.wake_abs_time"))
		(require-not (sysctl-name "kern.wakereason"))))
(deny system-fcntl
	(ce 04d2 3d5a 9ce0))
(deny system-fsctl
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 14)))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.assistant.support"))
		(require-not (preference-domain "com.apple.locationd.notbackedup"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.coremedia"))
		(require-not (preference-domain "com.apple.springboard"))
		(require-not (preference-domain "com.apple.assistant.backedup"))
		(require-not (preference-domain "com.apple.operator"))
		(require-not (preference-domain "com.apple.SOS"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.spotlightui"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.imessage.bag"))
		(require-all (require-not (preference-domain "com.apple.pipelined.framework"))
(require-not (preference-domain "com.apple.locationd.legacy-logging-dummy-settings")))
		(require-not (preference-domain "com.apple.nanolifestyle"))
		(require-not (preference-domain "com.apple.healthd"))
		(require-not (preference-domain "com.apple.pairedsyncd"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-any
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true com.apple.itunesstored.private)
				(process-attribute is-apple-signed-executable))
			(require-all
				(require-not (preference-domain "com.apple.nanoprefsyncd"))
				(require-not (preference-domain "com.apple.apsd"))
				(require-not (preference-domain "com.apple.CloudKit"))
				(require-not (preference-domain "com.apple.coreaudio"))
				(require-not (preference-domain "com.apple.GEO"))
				(require-not (preference-domain "com.apple.CFNetwork"))
				(require-not (preference-domain "com.apple.mobileipod"))
				(require-not (preference-domain "com.apple.avfoundation"))
				(require-not (preference-domain "com.apple.CrashReporter"))
				(require-not (preference-domain "com.apple.persistentconnection"))
				(require-not (preference-domain "com.apple.ids"))
				(require-not (preference-domain "com.apple.conference"))
				(require-not (preference-domain "com.apple.companionsync"))
				(require-not (preference-domain "com.apple.marco"))
				(require-not (preference-domain "com.apple.corevideo"))
				(preference-domain "com.apple.locationd")))))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.locationd.notbackedup"))
		(require-not (preference-domain "com.apple.SOS"))
		(require-not (preference-domain "com.apple.imessage.bag"))
		(preference-domain "com.apple.locationd")))
(deny storage-class-map)
