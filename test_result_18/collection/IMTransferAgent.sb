(version 1)
(allow default)
(deny file-issue-extension
	(extension com.apple.app-sandbox.read)
	(extension com.apple.app-sandbox.read-write)
	(extension com.apple.security.exception.files.absolute-path.read-only)
	(extension com.apple.security.exception.files.absolute-path.read-write)
	(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
	(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (subpath "/private/var/tmp/com.apple.messages"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages"))
		(subpath-prefix "${HOME}/Library/Caches/com.apple.imtransferservices.IMTransferAgent")
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (subpath "/private/var/tmp/com.apple.messages"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages"))
		(subpath-prefix "${HOME}/Library/Caches/com.apple.imtransferservices.IMTransferAgent")
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.identityservices.send")
		(require-not (subpath "/private/var/tmp/com.apple.messages"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages"))
		(subpath-prefix "${HOME}/Library/Caches/com.apple.imtransferservices.IMTransferAgent")
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(require-not (extension com.apple.sandbox.executable)))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any (subpath "/private/preboot/Cryptexes")
(subpath "/System/Cryptexes")))
	(require-all
		(subpath-prefix "${HOME}/Library/Caches/com.apple.imtransferservices.IMTransferAgent")
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read"))
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read")))
(deny file-read*
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.imtransferservices.IMTransferAgent")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.imtransferservices.IMTransferAgent")))
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (subpath-prefix "${HOME}/Library/Fonts"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.identityservicesd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.identityservicesd")))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-not (subpath "/private/var/tmp/com.apple.messages"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.imtransferservices.IMTransferAgent"))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
		(require-not (literal "/private/var/preferences/com.apple.security.plist"))
		(require-not (literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
		(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.imtransferagent"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.imtransferagent")))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages"))
		(require-all (require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
		(require-not (subpath-prefix "${HOME}/Library/SMS"))
		(require-not (subpath "/private/var/tmp/com.apple.imtransferagent"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.imtransferagent"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.app-sandbox.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-only)
			(extension com.apple.security.exception.files.absolute-path.read-write)
			(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
			(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
			(entitlement-is-present com.apple.private.oop-jit.loader)
			(require-all
				(entitlement-is-present com.apple.private.networkextension.configuration)
				(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))
			(require-all
				(literal "/System/Library/Carrier Bundles/")
				(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
				(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))))
			(require-all
				(debug-mode)
				(subpath "/AppleInternal")
				(subpath "/usr/local/lib"))
			(require-all
				(extension com.apple.sandbox.oopjit)
				(subpath "/private/var/OOPJit"))
			(require-all
				(require-any (literal "/private/preboot/cryptex1/current/SystemVersion.plist")
(literal "/private/preboot/cryptex1/current/RestoreVersion.plist"))
				(literal "/private")
				(require-any (literal "/System")
(literal "/private/preboot"))
				(literal "/")
				(require-any (subpath "/private/preboot/Cryptexes")
(subpath "/System/Cryptexes"))))))
(deny file-read-metadata
	(require-all
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.imtransferservices.IMTransferAgent"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))))
(deny file-write*
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.imtransferservices.IMTransferAgent")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.imtransferservices.IMTransferAgent")))
	(require-all
		(require-all (require-not (subpath "/private/var/tmp/com.apple.identityservicesd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.identityservicesd")))
		(require-not (subpath "/private/var/tmp/com.apple.messages"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.imtransferservices.IMTransferAgent"))
		(require-not (literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
		(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.imtransferagent"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.imtransferagent")))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages"))
		(require-all (require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")))
		(require-not (subpath-prefix "${HOME}/Library/SMS"))
		(require-not (subpath "/private/var/tmp/com.apple.imtransferagent"))
		(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.imtransferagent")))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection"))
		(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.imtransferservices.IMTransferAgent")
		(require-any (subpath "/private/var/tmp/com.apple.identityservicesd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.identityservicesd"))
		(subpath "/private/var/tmp/com.apple.messages")
		(subpath-prefix "${HOME}/Library/Caches/com.apple.imtransferservices.IMTransferAgent")
		(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
		(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.imtransferagent")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.imtransferagent"))
		(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages")
		(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
		(subpath-prefix "${HOME}/Library/SMS")
		(subpath "/private/var/tmp/com.apple.imtransferagent")
		(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.imtransferagent")))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "AGXDeviceUserClient"))
		(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
		(require-not (iokit-user-client-class "AGXDevice"))
		(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
		(require-not (extension com.apple.security.exception.iokit-user-client-class))
		(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
		(iokit-user-client-class "RootDomainUserClient")
		(iokit-user-client-class "AppleKeyStoreUserClient")))
(deny job-creation)
(deny mach-lookup
	(xpc-service-name "com.apple.WebKit.")
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-not (global-name "com.apple.coremedia.compressionsession"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.mobile.keybagd.UserManager.xpc"))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-not (global-name "com.apple.familycircle.agent"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.fontservicesd"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.marco"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.awdd"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.identityservicesd.embedded.auth"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.AssetCacheLocatorService"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-not (global-name "com.apple.idsremoteurlconnectionagent.embedded.auth"))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
		(require-not (xpc-service-name "com.apple.coremedia.decompressionsession.xpc"))
		(require-not (xpc-service-name "com.apple.coremedia.compressionsession.xpc"))
		(require-not (global-name "com.apple.cloudasset.cloudd"))
		(require-not (global-name "com.apple.ckdiscretionaryd"))
		(require-not (global-name "com.apple.cloudd"))
		(global-name "com.apple.apsd")
		(extension com.apple.security.exception.mach-lookup.global-name)
		(extension com.apple.security.exception.mach-lookup.local-name)
		(global-name "com.apple.lsd.openurl")
		(global-name "com.apple.tccd")
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(global-name "com.apple.ckdiscretionaryd.debug")
			(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
			(global-name "com.apple.cloudkit.partlycloudd")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny syscall-unix
	(require-all
		(require-not (c1 1c99 8ff9 8ffa))
		(syscall-number SYS_iopolicysys)))
(deny sysctl-read
	(require-all
		(require-not (sysctl-name "net.statistics"))
		(require-not (sysctl-name "net.routetable."))
		(require-all (require-not (sysctl-name "kern.nisdomainname"))
(require-not (sysctl-name "kern.ipc.maxsockbuf")))
		(sysctl-name "kern.proc.all")))
(deny system-fsctl
	(require-all
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 111)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 14)))))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
		(require-not (preference-domain "com.apple.imessage"))
		(require-not (preference-domain "com.apple.apsd"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.mmcs"))
		(require-not (preference-domain "com.apple.CloudKit"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.c2"))
		(require-not (preference-domain "com.apple.imessage.bag"))
		(require-not (preference-domain "com.apple.Messages"))
		(require-not (preference-domain "com.apple.persistentconnection"))
		(require-not (preference-domain "com.apple.ids"))
		(require-not (preference-domain "com.apple.facetime.bag"))
		(require-not (preference-domain "com.apple.conference"))
		(require-not (preference-domain "com.apple.imtransferservices.IMTransferAgent"))
		(require-not (preference-domain "com.apple.marco"))
		(preference-domain "com.apple.carrier")))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.imessage"))
		(require-not (preference-domain "com.apple.mmcs"))
		(require-not (preference-domain "com.apple.imessage.bag"))
		(require-not (preference-domain "com.apple.Messages"))
		(require-not (preference-domain "com.apple.facetime.bag"))
		(preference-domain "com.apple.imtransferservices.IMTransferAgent")))
(deny storage-class-map)
