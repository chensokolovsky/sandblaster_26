(version 1)
(allow default)
(deny file-ioctl
	(require-all
		(literal "/dev/dtracehelper")
		(debug-mode)))
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (extension com.apple.quicklook.readonly))))
(deny file-map-executable
	(require-all
		(require-not (subpath "/usr/lib"))
		(require-not (subpath "/System/Library"))))
(deny file-read*
	(require-all
		(require-not (literal "/dev/null"))
		(require-not (literal "/dev/zero"))
		(require-not (literal "/dev/random"))
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/private/etc/passwd"))
		(require-not (subpath "/private/var/db/timezone"))
		(require-not (literal "/private/etc/services"))
		(require-all (require-not (literal "/private/etc/group"))
(require-not (literal "/private/etc/protocols")))
		(require-not (literal "/private/etc/fstab"))
		(require-not (literal "/private/etc/hosts"))
		(require-not (literal "/"))
		(require-not (subpath-prefix "${HOME}/Library/Fonts"))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist"))
		(require-not (extension com.apple.app-sandbox.read))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist"))
		(require-any
			(require-all
				(extension com.apple.sandbox.container)
				(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork")))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?"))
				(require-not (literal))
				(literal "/private/var/")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))))
			(require-all
				(debug-mode)
				(require-not (literal "/dev/dtracehelper"))
				(require-not (subpath "/AppleInternal/Library/Bundles/ARKitInternalExtras.bundle")))
			(require-all
				(file-mode #o0004)
				(require-not (subpath "/usr/lib"))
				(require-not (subpath "/usr/share"))
				(require-not (subpath "/System"))))))
(deny file-read-data
	(require-all
		(debug-mode)
		(require-not (literal "/AppleInternal/Library/Assistant/InternalConfig.plist")))
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (literal "/private/var/preferences/Logging/com.apple.diagnosticd.filter.plist"))
		(require-not (literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist"))
		(require-all (require-not (literal "/private/var/mobile/Library/Preferences/com.apple.UIKit.plist"))
(require-not (literal "/private/var/mobile/Library/Preferences/com.apple.AssetViewer.plist"))
(require-not (literal "/private/var/mobile/Library/Preferences/com.apple.Accessibility.plist")))
		(require-all (require-not (literal "/private/var/mobile/Containers/Data"))
(require-not (literal "/private/var/mobile/Media/PhotoData/Photos.sqlite"))
(require-not (literal "/private/var/mobile/Media/PhotoData/Photos.sqlite-shm"))
(require-not (literal "/private/var/mobile/Media/PhotoData/Photos.sqlite-wal"))
(require-not (literal "/private/var/mobile/Media/PhotoData/Photos.sqlite-journal"))
(require-not (literal "/private/var/mobile/Library"))
(require-not (literal "/private/var/mobile/Library/Preferences/.GlobalPreferences_m.plist"))
(require-not (literal "/private/var/mobile/Library/UserConfigurationProfiles/PublicInfo/MCMeta.plist"))
(require-not (literal "/private/var/mobile/Library/UserConfigurationProfiles/PublicInfo/PublicEffectiveUserSettings.plist"))
(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo/MCMeta.plist")))
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$"))
					(require-all
						(subpath "/private/var/db/timezone")
						(literal "/private/etc/services")
						(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
						(literal "/private/etc/fstab")
						(literal "/private/etc/hosts")
						(literal "/")
						(subpath-prefix "${HOME}/Library/Fonts")
						(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
						(extension com.apple.app-sandbox.read)
						(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
						(require-any
							(require-all
								(extension com.apple.sandbox.container)
								(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
								(literal)
								(literal "/private/var/")
								(require-any
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+$")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
							(require-all
								(debug-mode)
								(literal "/dev/dtracehelper")
								(subpath "/AppleInternal/Library/Bundles/ARKitInternalExtras.bundle"))
							(require-all
								(file-mode #o0004)
								(subpath "/usr/lib")
								(subpath "/usr/share")
								(subpath "/System")))))))))
(deny file-read-metadata
	(require-all
		(debug-mode)
		(require-all (require-not (literal "/AppleInternal"))
(require-not (literal "/AppleInternal/Library"))
(require-not (literal "/AppleInternal/Library/Bundles"))))
	(require-all
		(require-not (literal "/private/var"))
		(require-not (literal "/Library/Managed Preferences/mobile"))
		(require-not (literal "/private/var/Managed Preferences/mobile"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist"))
		(require-all (require-not (literal "/private/var/mobile/Library/Preferences/com.apple.UIKit.plist"))
(require-not (literal "/private/var/mobile/Library/Preferences/com.apple.AssetViewer.plist"))
(require-not (literal "/private/var/mobile/Library/Preferences/com.apple.Accessibility.plist")))
		(require-all (require-not (literal "/Library/RegionFeatures"))
(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles")))
		(require-not (literal "/tmp"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-not (literal "/Library/Preferences"))
		(require-not (literal "/private/etc/localtime"))
		(require-all (require-not (literal "/etc"))
(require-not (literal "/var")))
		(require-any
			(literal "/private/var/run/syslog")
			(require-all
				(extension com.apple.sandbox.container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesMetadata.plist"))
				(literal "/private/var/")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesMetadata[.]plist$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
						(subpath-prefix "${HOME}/Library/Fonts")
						(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
						(extension com.apple.app-sandbox.read)
						(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
						(require-any
							(require-all
								(extension com.apple.sandbox.container)
								(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
								(literal)
								(literal "/private/var/")
								(require-any
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+$")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
							(require-all
								(debug-mode)
								(literal "/dev/dtracehelper")
								(subpath "/AppleInternal/Library/Bundles/ARKitInternalExtras.bundle"))
							(require-all
								(file-mode #o0004)
								(subpath "/usr/lib")
								(subpath "/usr/share")
								(subpath "/System")))))))))
(deny file-test-existence
	(require-all
		(require-not (literal "/private/etc/passwd"))
		(require-not (literal "/private/etc/services"))
		(require-all (require-not (literal "/private/etc/group"))
(require-not (literal "/private/etc/protocols")))
		(require-all (require-not (literal "/sbin/mount"))
(require-not (literal "/sbin/launchd")))
		(require-not (literal "/private/etc/hosts"))
		(require-not (literal "/private/etc/fstab"))
		(require-not (process-attribute is-apple-signed-executable))
		(require-not (extension-path-ancestor 0))
		(require-any
			(require-any (literal "/bin/")
(literal "/sbin/")
(literal "/usr/bin/")
(literal "/usr/share/terminfo")
(literal "/private/etc/"))
			(require-all
				(require-not (literal "/dev/urandom"))
				(require-not (literal "/dev/random"))
				(require-not (literal "/"))
				(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
				(require-not (subpath "/usr/lib"))
				(require-not (literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist"))
				(require-not (subpath "/System"))
				(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist"))
				(require-any
					(require-any (literal "/private/var/Managed Preferences/mobile/")
(literal-prefix "${HOME}/Media/Recordings/")
(literal-prefix "${HOME}/Library/Recordings/")
(literal-prefix "${HOME}/Library/SMS/")
(literal-prefix "${HOME}/Library/SpringBoard/PushStore/")
(literal-prefix "${HOME}/Library/SpringBoard/ApplicationShortcuts/")
(literal-prefix "${HOME}/Library/OnDemandResources/Manifests/")
(literal-prefix "${HOME}/Library/CallServices/Ringtones/")
(literal-prefix "${HOME}/Library/Caches/BridgeIconCache/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.bird/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.CloudDocsUI.CloudSharing/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/containers/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/unprotected/containers/"))
					(literal-prefix "${HOME}/Library/Mobile Documents/"))))))
(deny file-write*
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/SyncedPreferences/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-any
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$")
							(require-all
								(extension com.apple.sandbox.container)
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))))))))
(deny file-write-create
	(vnode-type DIRECTORY)
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/SyncedPreferences/?")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-any
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$")))))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-any
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$")
							(require-all
								(extension com.apple.sandbox.container)
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))))))))
(deny file-write-data
	(require-all
		(literal "/dev/dtracehelper")
		(require-not (debug-mode))
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/SyncedPreferences/?")
			(require-all
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$"))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-any
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$")
							(require-all
								(extension com.apple.sandbox.container)
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))))))))))
	(require-all
		(require-not (literal "/dev/null"))
		(require-not (literal "/dev/zero"))
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/SyncedPreferences/?")
			(require-all
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$"))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-any
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$")
							(require-all
								(extension com.apple.sandbox.container)
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))))))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(require-all
				(literal "/private/var/")
				(require-any
					(extension com.apple.sandbox.container)
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-any
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$")))))
			(require-all
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?"))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))))
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-get-properties
	(require-all
		(require-all (require-not (iokit-property "moment-capture"))
(require-not (iokit-property "aggregate-camera"))
(require-not (iokit-property "deferred-processing"))
(require-not (iokit-property "rear-stage-light-portrait"))
(require-not (iokit-property "gyro-interrupt-calibration"))
(require-not (iokit-property "IORegistryEntryPropertyKeys"))
(require-not (iokit-property "photo-capture-on-touch-down"))
(require-not (iokit-property "ui-pinned-app"))
(require-not (iokit-property "ui-overlay-app"))
(require-not (iokit-property "front-slowmo"))
(require-not (iokit-property "front-stage-light-portrait"))
(require-not (iokit-property "front-max-slomo-video-fps-720p"))
(require-not (iokit-property "front-max-slomo-video-fps-1080p"))
(require-not (iokit-property "spatial-over-capture"))
(require-not (iokit-property "stage-light-portrait-preview")))
		(require-all (require-not (iokit-property "thin-bezel"))
(require-not (iokit-property "large-format-phone")))
		(require-all (require-not (iokit-property "ptp-large-files"))
(require-not (iokit-property "home-button-type")))
		(require-any
			(require-all
				(iokit-user-client-class "IOPlatformDevice")
				(require-all (require-not (iokit-property "product-description"))
(require-not (iokit-property "device-perf-memory-class"))
(require-not (iokit-property "compatible-device-fallback"))
(require-not (iokit-property "graphics-featureset-class"))
(require-not (iokit-property "graphics-featureset-fallbacks"))
(require-not (iokit-property "artwork-display-gamut"))
(require-not (iokit-property "artwork-dynamic-displaymode"))
(require-not (iokit-property "artwork-device-idiom"))
(require-not (iokit-property "artwork-device-subtype")))
				(require-not (iokit-property "product-id"))
				(require-all (require-not (iokit-property "volume-up-button-location"))
(require-not (iokit-property "volume-down-button-location")))
				(require-not (iokit-property "soc-generation"))
				(require-not (iokit-property "artwork-scale-factor"))
				(require-not (iokit-property "front-cam-offset-from-center"))
				(require-not (iokit-property "is-muse")))
			(require-all
				(require-all (require-not (iokit-property "OSKernelCPUType"))
(require-not (iokit-property "OSKernelCPUSubtype")))
				(require-all (require-not (iokit-property "closed-loop"))
(require-not (iokit-property "jasper-camera"))
(require-not (iokit-property "auto-low-light-video"))
(require-not (iokit-property "stereo-sound-recording")))
				(require-not (iokit-property "dictation"))
				(require-not (iokit-property "display-corner-radius"))
				(require-all (require-not (iokit-property "camera-rear"))
(require-not (iokit-property "camera-front")))
				(require-not (iokit-property "chip-id"))
				(require-not (iokit-property "iommu-present"))
				(require-not (iokit-property "region-info"))
				(require-not (iokit-property "IOCFPlugInTypes"))
				(require-not (iokit-property "software-behavior"))
				(require-not (iokit-property "AppleJPEGSupportsAppleInterchangeFormats"))
				(require-not (iokit-property "QueueSize"))
				(require-all (require-not (iokit-property "MetalPluginName"))
(require-not (iokit-property "MetalPluginClassName"))
(require-not (iokit-property "BaseAddressAlignmentRequirement")))
				(require-any
					(require-all
						(iokit-user-client-class "IOService")
						(require-all (require-not (iokit-property "live-photo-capture"))
(require-not (iokit-property "camera-hdr-version"))
(require-not (iokit-property "aggregate-cam-video-zoom"))
(require-not (iokit-property "aggregate-cam-photo-zoom"))
(require-not (iokit-property "flash"))
(require-not (iokit-property "front-auto-hdr"))
(require-not (iokit-property "front-max-video-"))
(require-not (iokit-property "front-max-burst-length"))
(require-not (iokit-property "front-hdr"))
(require-not (iokit-property "front-hdr-on"))
(require-not (iokit-property "front-flash-capability"))
(require-not (iokit-property "front-burst"))
(require-not (iokit-property "front-burst-image-duration"))
(require-not (iokit-property "panorama"))
(require-not (iokit-property "pearl-camera"))
(require-not (iokit-property "portrait-lighting-strength"))
(require-not (iokit-property "pipelined-stillimage-capability"))
(require-not (iokit-property "rear-max-video-"))
(require-not (iokit-property "rear-max-slomo-video-fps-"))
(require-not (iokit-property "rear-auto-hdr"))
(require-not (iokit-property "rear-low-light-photo"))
(require-not (iokit-property "rear-hdr"))
(require-not (iokit-property "rear-hdr-on"))
(require-not (iokit-property "rear-burst"))
(require-not (iokit-property "rear-burst-image-duration"))
(require-not (iokit-property "rear-cam-telephoto-capability"))
(require-not (iokit-property "rear-cam-superwide-capability"))))
					(require-all
						(iokit-property "platform-name")
						(iokit-user-client-class "IOPlatformExpertDevice"))
					(require-all
						(iokit-user-client-class "AppleJPEGDriver")
						(require-not (iokit-property "AppleJPEGSupportsRSTLogging"))
						(require-not (iokit-property "AppleJPEGNumCores")))
					(require-all
						(iokit-property "IOSurfaceAcceleratorCapabilitiesDict")
						(iokit-user-client-class "IOService"))
					(require-all
						(iokit-user-client-class "AppleAVD")
						(require-not (iokit-property "AVCSupported"))
						(require-not (iokit-property "HEVCCanDecodeTileToCanvas")))
					(require-all
						(iokit-user-client-class "AppleJPEGDriver")
						(require-not (iokit-property "AppleJPEGNumCores"))
						(require-not (iokit-property "AppleJPEGSupportsAppleInterchangeFormats")))
					(require-all
						(iokit-property "DeviceProperties")
						(iokit-user-client-class "H11ANEIn"))
					(require-all
						(iokit-property "ane-type")
						(require-not (iokit-user-client-class "AppleARMIODevice"))
						(iokit-user-client-class "IOPlatformExpertDevice")))))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "AppleSPUHIDDeviceUserClient"))
		(require-all (require-not (iokit-user-client-class "IOAccelDevice2"))
(require-not (iokit-user-client-class "IOAccelContext2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient2")))
		(require-not (iokit-user-client-class "IOGPUDeviceUserClient"))
		(require-all (require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient")))
		(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
		(require-not (iokit-user-client-class "AGXCommandQueue"))
		(require-all (require-not (iokit-user-client-class "IOAccelDevice"))
(require-not (iokit-user-client-class "IOAccelContext"))
(require-not (iokit-user-client-class "IOAccelSubmitter2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient")))
		(require-not (iokit-user-client-class "AGXSharedUserClient"))
		(require-not (iokit-user-client-class "AGXDevice"))
		(require-not (iokit-user-client-class "AppleKeyStoreUserClient"))
		(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
		(require-not (iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
		(require-any
			(require-all
				(iokit-user-client-class "ANEClientHintsUserClient")
				(require-not (entitlement-is-bool-true com.apple.private.ane.allow-set-client-hints)))
			(require-all
				(require-all (require-not (iokit-connection "IOGPU"))
(require-not (iokit-connection "IOGraphicsAccelerator2")))
				(extension com.apple.security.exception.iokit-user-client-class)
				(iokit-user-client-class "RootDomainUserClient")))))
(deny iokit-open-service
	(require-all
		(require-not (iokit-user-client-class "AppleKeyStore"))
		(require-not (iokit-user-client-class "AppleJPEGDriver"))
		(require-not (iokit-user-client-class "AGXAcceleratorG"))
		(require-not (iokit-user-client-class "IOSurfaceRoot"))
		(require-all (require-not (iokit-user-client-class "AppleCLCD"))
(require-not (iokit-user-client-class "AppleParavirtDisplay")))
		(require-not (iokit-user-client-class "AppleM2ScalerCSCDriver"))
		(require-all (require-not (iokit-user-client-class "AppleSPUHIDDevice"))
(require-not (iokit-user-client-class "AppleSPUHIDDriver")))
		(require-all (require-not (iokit-user-client-class "H11ANEIn"))
(require-not (iokit-user-client-class "AppleVirtIONeuralEngineDevice")))
		(iokit-user-client-class "AppleParavirtGPU")))
(deny ipc-posix-sem-open
	(ipc-posix-name "containermanagerd.fb_check"))
(deny ipc-posix-shm-read-data
	(require-all
		(require-not (ipc-posix-name "apple.shm.notification_center"))
		(ipc-posix-name "apple.cfprefs.")))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.replayd"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
		(require-all (require-not (global-name "com.apple.record.writer"))
(require-not (global-name "com.apple.managedconfiguration.profiled.public")))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.cvhwa.xpc"))
		(require-not (global-name "com.apple.logd.events"))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.coremedia.decompressionsession"))
		(require-not (global-name "com.apple.system.notification_center"))
		(require-not (global-name "com.apple.pluginkit.pkd"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.assistant.dictation"))
		(require-not (global-name "com.apple.MTLCompilerService"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.mediaremoted.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
		(require-not (global-name "com.apple.backboard.display.services"))
		(require-not (global-name "com.apple.CARenderServer"))
		(require-all (require-not (global-name "com.apple.cvmsServ"))
(require-not (global-name "com.apple.gpumemd.source")))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
		(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
		(require-not (global-name "com.apple.fontservicesd"))
		(require-not (global-name "com.apple.backlightd"))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-not (xpc-service-name "com.apple.MTLCompilerService"))
		(require-not (global-name "com.apple.locationd.registration"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.springboard.services"))
		(require-not (global-name "com.apple.analyticsd"))
		(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
		(require-not (global-name "com.apple.photos.service"))
		(require-not (global-name "com.apple.PointerUI.pointeruid.service"))
		(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
		(require-not (global-name "com.apple.backboard.hid.services"))
		(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
		(require-not (global-name "com.apple.coremedia.videocompositor"))
		(require-not (global-name "com.apple.audio.AudioUnitServer"))
		(require-not (global-name "com.apple.awdd"))
		(require-not (global-name "com.apple.ak.authorizationservices.xpc"))
		(require-not (global-name "com.apple.Safari.SafeBrowsing.Service"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.pegasus"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.backboard.hid-services.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
		(require-not (global-name "com.apple.logd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(require-not (global-name "com.apple.aggregated"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.tccd"))
		(require-not (global-name "com.apple.TextInput"))
		(require-not (global-name "com.apple.lsd.mapdb"))
		(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
		(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
		(require-not (global-name "com.apple.iohideventsystem"))
		(require-not (global-name "com.apple.iphone.axserver-systemwide"))
		(require-not (global-name "com.apple.lsd.open"))
		(require-not (global-name "com.apple.audio.AURemoteIOServer"))
		(require-not (global-name "com.apple.coremedia.player.xpc"))
		(require-not (global-name "com.apple.mobilegestalt.xpc"))
		(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
		(require-not (global-name "com.apple.audio.hapticd"))
		(require-not (xpc-service-name "com.apple.AGXCompilerService"))
		(require-any
			(require-all
				(global-name "com.apple.diagnosticd")
				(require-not (extension com.apple.security.exception.mach-lookup.global-name))
				(require-not (extension com.apple.security.exception.mach-lookup.local-name))
				(require-not (global-name "com.apple.lsd.advertisingidentifiers"))
				(require-not (global-name "com.apple.containermanagerd"))
				(require-not (global-name "com.apple.usernotifications.listener"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
				(require-not (global-name "com.apple.containermanagerd.system"))
				(require-not (global-name "com.apple.coremedia.sts"))
				(require-not (global-name "com.apple.appleneuralengine"))
				(require-not (global-name "com.apple.frontboard.systemappservices"))
				(require-any
					(xpc-service-name-regex #".+")
					(xpc-service-name "com.apple.WebKit.")
					(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
					(require-all
						(xpc-service-name "com.apple.WebKit")
						(require-not (signing-identifier "com.apple.AssetViewer.ASVAssetViewer")))))
			(require-all
				(require-not (global-name "com.apple.lsd.openurl"))
				(require-not (extension com.apple.security.exception.mach-lookup.global-name))
				(require-not (extension com.apple.security.exception.mach-lookup.local-name))
				(require-not (global-name "com.apple.lsd.advertisingidentifiers"))
				(require-not (global-name "com.apple.containermanagerd"))
				(require-not (global-name "com.apple.usernotifications.listener"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
				(require-not (global-name "com.apple.containermanagerd.system"))
				(require-not (global-name "com.apple.coremedia.sts"))
				(require-not (global-name "com.apple.appleneuralengine"))
				(require-not (global-name "com.apple.frontboard.systemappservices"))
				(require-any
					(xpc-service-name-regex #".+")
					(xpc-service-name "com.apple.WebKit.")
					(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
					(require-all
						(xpc-service-name "com.apple.WebKit")
						(require-not (signing-identifier "com.apple.AssetViewer.ASVAssetViewer"))))))))
(deny mach-register
	(require-not (local-name "com.apple.iphone.axserver")))
(deny network-outbound
	(require-all
		(require-not (control-name "com.apple.flow-divert"))
		(literal "/private/var/run/syslog")))
(deny syscall-unix
	(c1 344e 7b67 9ce0))
(deny syscall-mach
	(cb 3458 7b65 9ce0))
(deny syscall-mig
	(cc 345b 7b63 9ce0))
(deny sysctl-read
	(require-all
		(require-all (require-not (sysctl-name "kern.version"))
(require-not (sysctl-name "kern.hostname"))
(require-not (sysctl-name "kern.ostype"))
(require-not (sysctl-name "kern.osrelease")))
		(require-not (sysctl-name "hw.targettype"))
		(require-not (sysctl-name "hw.physicalcpu"))
		(require-not (sysctl-name "hw.product"))
		(require-all (require-not (sysctl-name "hw.model"))
(require-not (sysctl-name "hw.logicalcpu_max"))
(require-not (sysctl-name "hw.physicalcpu_max")))
		(require-not (sysctl-name "hw.ncpu"))
		(require-all (require-not (sysctl-name "hw.activecpu"))
(require-not (sysctl-name "hw.pagesize_compat"))
(require-not (sysctl-name "kern.secure_kernel")))
		(require-all (require-not (sysctl-name "hw.machine"))
(require-not (sysctl-name "kern.osproductversion"))
(require-not (sysctl-name "kern.osvariant_status")))
		(require-not (sysctl-name "hw.memsize"))
		(sysctl-name "kern.bootsessionuuid")))
(deny system-fcntl
	(ce 3461 7b57 9ce0))
(deny system-kas-info)
(deny system-mac-syscall
	(require-all
		(mac-syscall-number 4)
		(mac-policy-name "Sandbox")))
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.Metal"))
		(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
		(require-not (preference-domain "com.apple.opengl"))
		(require-all (require-not (preference-domain "com.apple.AssetViewer"))
(require-not (preference-domain "com.apple.AssetViewer.ASVAssetViewer")))
		(preference-domain "kCFPreferencesAnyApplication")))
(deny user-preference-write
	(preference-domain "com.apple.AssetViewer"))
(deny storage-class-map)
