(version 1)
(deny default)
(allow file-issue-extension
	(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches"))))
(allow file-lock)
(allow file-map-executable
	(subpath "/System/Library/PrivateFrameworks")
	(subpath "/usr/lib")
	(subpath "/System/Library/Frameworks")
	(subpath "/System/Library")
	(subpath "/System/Cryptexes")
	(subpath "/private/preboot/Cryptexes"))
(allow file-read*
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.UIKit.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.UIKit.plist"))
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.AppSupport.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.Accessibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.AppSupport.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.Accessibility.plist"))
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-any
			(literal "/private/etc/hosts")
			(subpath "/private/preboot/Cryptexes")
			(subpath "/System/Cryptexes")
			(literal "/dev/null")
			(literal "/dev/zero")
			(literal "/dev/random")
			(literal "/dev/urandom")
			(literal "/private")
			(require-any (literal "/private/preboot/cryptex1/current/SystemVersion.plist")
(literal "/private/preboot/cryptex1/current/RestoreVersion.plist"))
			(literal "/private/etc/passwd")
			(literal "/private/etc/services")
			(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
			(literal "/private/etc/fstab")
			(require-any (literal "/System")
(literal "/private/preboot"))
			(literal "/")
			(require-all
				(literal "/private/var/")
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))))
			(require-all
				(file-mode #o0004)
				(require-any
					(subpath "/usr/lib")
					(subpath "/private/var/db/timezone")
					(subpath "/usr/share")
					(subpath "/System"))))))
(allow file-read-data
	(subpath "/private/var/preferences/Logging")
	(literal "/private/etc/passwd")
	(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache")
(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles")
(subpath-prefix "${HOME}/Library/UserConfigurationProfiles"))
	(subpath "/System")
	(literal "/")
	(subpath "/usr/share")
	(subpath "/Library"))
(allow file-read-metadata
	(literal "/private/var")
	(literal "/private/etc/passwd")
	(subpath "/usr/lib")
	(subpath "/private/var/db/timezone")
	(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences"))
	(subpath "/usr/standalone")
	(literal-prefix "${HOME}")
	(literal "/dev")
	(literal "/private/xarts")
	(literal "/")
	(subpath "/Library")
	(subpath "/usr/share")
	(subpath "/System")
	(require-any (literal "/etc")
(literal "/var"))
	(literal "/tmp")
	(literal "/private/etc/localtime")
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(literal)
			(require-all
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+$")))))
(allow file-test-existence
	(require-all
		(require-not (subpath "/usr/local"))
		(require-not (subpath "/AppleInternal"))
		(require-any
			(require-any (subpath "/private")
(literal "/etc/passwd")
(subpath "/var/db")
(subpath "/var/mobile/Library")
(subpath "/var/mobile/Containers/Data/PluginKitPlugin"))
			(subpath "/usr/lib")
			(subpath "/usr/standalone")
			(literal "/dev")
			(subpath "/usr/share")
			(subpath "/Library")
			(literal "/")
			(subpath "/System"))))
(allow file-write*
	(require-all
		(literal "/private/var/")
		(extension com.apple.sandbox.container)
		(require-any
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
			(require-all
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
(allow file-write-data
	(literal "/dev/null")
	(literal "/dev/zero"))
(allow iokit-get-properties
	(require-all
		(iokit-user-client-class "AGXAcceleratorG")
		(require-any (iokit-property "MetalPluginName")
(iokit-property "MetalPluginClassName")
(iokit-property "BaseAddressAlignmentRequirement")))
	(require-all
		(iokit-property "IOSurfaceAcceleratorCapabilitiesDict")
		(iokit-user-client-class "AppleM2ScalerCSCDriver"))
	(require-all
		(iokit-user-client-class "AppleJPEGDriver")
		(require-any
			(iokit-property "AppleJPEGSupportsRSTLogging")
			(iokit-property "AppleJPEGNumCores")
			(iokit-property "AppleJPEGSupportsAppleInterchangeFormats")))
	(require-all
		(require-any (iokit-property "product-description")
(iokit-property "device-perf-memory-class")
(iokit-property "compatible-device-fallback")
(iokit-property "graphics-featureset-class")
(iokit-property "graphics-featureset-fallbacks")
(iokit-property "artwork-display-gamut")
(iokit-property "artwork-dynamic-displaymode")
(iokit-property "artwork-device-idiom")
(iokit-property "artwork-device-subtype"))
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(iokit-property "product-id")
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(require-any (iokit-property "external-hdr")
(iokit-property "compatible-app-variant"))
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(require-any (iokit-property "thin-bezel")
(iokit-property "large-format-phone"))
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(iokit-property "device-colors")
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(iokit-property "display-corner-radius")
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(iokit-property "artwork-scale-factor")
		(iokit-user-client-class "IOPlatformDevice")))
(allow iokit-open-user-client
	(iokit-user-client-class "AppleJPEGDriverUserClient")
	(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "AGXDeviceUserClient"))
(allow iokit-open-service
	(iokit-user-client-class "AppleKeyStore")
	(iokit-user-client-class "AppleJPEGDriver")
	(iokit-user-client-class "AGXAcceleratorG")
	(iokit-user-client-class "IOSurfaceRoot")
	(iokit-user-client-class "AppleM2ScalerCSCDriver"))
(allow iokit-set-properties)
(allow ipc-posix-shm-read-data
	(ipc-posix-name "apple.cfprefs."))
(allow mach-derive-port)
(allow mach-kernel-endpoint)
(allow mach-lookup
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.logd.events")
	(global-name "com.apple.runningboard")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.MTLCompilerService")
	(global-name "com.apple.backboard.display.services")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.mediaanalysisd.service.public")
	(global-name "com.apple.fontservicesd")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.analyticsd")
	(global-name "com.apple.PointerUI.pointeruid.service")
	(global-name "com.apple.backboard.hid.services")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.TextInput")
	(global-name "com.apple.logd")
	(global-name "com.apple.UIKit.KeyboardManagement.hosted")
	(global-name "com.apple.backboard.hid-services.xpc")
	(global-name "com.apple.containermanagerd.system")
	(global-name "com.apple.frontboard.systemappservices"))
(allow mach-task-exception-port-set)
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow mach-task-special-port-set)
(allow network-outbound
	(control-name "com.apple.flow-divert")
	(literal "/private/var/run/syslog"))
(allow nvram-get
	(nvram-variable "emu"))
(allow process-codesigning)
(allow process-info-pidinfo
	(target others))
(allow sandbox-check)
(allow syscall-unix
	(c1 4987 5f0d 715e))
(allow syscall-mach
	(cb 4991 5f0b 715e))
(allow syscall-mig
	(cc 4994 5f09 715e))
(allow sysctl*)
(allow sysctl-read
	(sysctl-name "vm.footprint_suspend")
	(sysctl-name "vm.task_no_footprint_for_debug")
	(sysctl-name "kern.bootargs"))
(allow sysctl-write)
(allow system-fcntl
	(ce 499a 5f04 715e))
(allow system-mac-syscall
	(require-not (d2 499d 715e 5f01))
	(mac-policy-name "Sandbox")
	(require-all
		(mac-syscall-number 90)
		(mac-policy-name "AMFI")))
(allow system-memorystatus-control)
(allow system-privilege)
(allow process-exec-update-label)
