(version 1)
(allow default)
(deny file-ioctl
	(require-all
		(uid 0)
		(vnode-type CHARACTER-DEVICE)
		(entitlement-is-bool-true com.apple.security.ts.bpf)
		(literal "/dev/bpf")))
(deny file-issue-extension
	(require-all
		(entitlement-is-bool-true com.apple.security.ts.ubiquity)
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-not (extension-class "com.apple.quicklook.readonly"))
						(require-not (extension-class "com.apple.app-sandbox.read-write"))
						(require-not (extension-class "com.apple.app-sandbox.read"))
						(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
						(require-not (extension-class "com.apple.mediaserverd.read-write"))
						(require-not (extension-class "com.apple.aned.read-only"))
						(require-not (extension-class "com.apple.mediaserverd.read")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-not (extension-class "com.apple.quicklook.readonly"))
						(require-not (extension-class "com.apple.app-sandbox.read-write"))
						(require-not (extension-class "com.apple.app-sandbox.read"))
						(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
						(require-not (extension-class "com.apple.mediaserverd.read-write"))
						(require-not (extension-class "com.apple.aned.read-only"))
						(require-not (extension-class "com.apple.mediaserverd.read")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-not (extension-class "com.apple.quicklook.readonly"))
						(require-not (extension-class "com.apple.app-sandbox.read-write"))
						(require-not (extension-class "com.apple.app-sandbox.read"))
						(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
						(require-not (extension-class "com.apple.mediaserverd.read-write"))
						(require-not (extension-class "com.apple.aned.read-only"))
						(require-not (extension-class "com.apple.mediaserverd.read")))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (extension-class "com.apple.quicklook.readonly"))
						(require-not (extension-class "com.apple.app-sandbox.read-write"))
						(require-not (extension-class "com.apple.app-sandbox.read"))
						(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
						(require-not (extension-class "com.apple.mediaserverd.read-write"))
						(require-not (extension-class "com.apple.aned.read-only"))
						(require-not (extension-class "com.apple.mediaserverd.read")))))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-not (extension-class "com.apple.quicklook.readonly"))
						(require-not (extension-class "com.apple.app-sandbox.read-write"))
						(require-not (extension-class "com.apple.app-sandbox.read"))
						(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
						(require-not (extension-class "com.apple.mediaserverd.read-write"))
						(require-not (extension-class "com.apple.aned.read-only"))
						(require-not (extension-class "com.apple.mediaserverd.read")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-not (extension-class "com.apple.quicklook.readonly"))
						(require-not (extension-class "com.apple.app-sandbox.read-write"))
						(require-not (extension-class "com.apple.app-sandbox.read"))
						(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
						(require-not (extension-class "com.apple.mediaserverd.read-write"))
						(require-not (extension-class "com.apple.aned.read-only"))
						(require-not (extension-class "com.apple.mediaserverd.read")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-not (extension-class "com.apple.quicklook.readonly"))
						(require-not (extension-class "com.apple.app-sandbox.read-write"))
						(require-not (extension-class "com.apple.app-sandbox.read"))
						(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
						(require-not (extension-class "com.apple.mediaserverd.read-write"))
						(require-not (extension-class "com.apple.aned.read-only"))
						(require-not (extension-class "com.apple.mediaserverd.read")))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (extension-class "com.apple.quicklook.readonly"))
						(require-not (extension-class "com.apple.app-sandbox.read-write"))
						(require-not (extension-class "com.apple.app-sandbox.read"))
						(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
						(require-not (extension-class "com.apple.mediaserverd.read-write"))
						(require-not (extension-class "com.apple.aned.read-only"))
						(require-not (extension-class "com.apple.mediaserverd.read")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.app-sandbox.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(require-not (extension com.apple.app-sandbox.read-write)))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-not (extension com.apple.app-sandbox.read-write)))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-not (extension com.apple.app-sandbox.read-write)))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-not (extension com.apple.app-sandbox.read-write)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (extension com.apple.app-sandbox.read-write)))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-not (extension com.apple.app-sandbox.read-write)))))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(entitlement-is-bool-true com.apple.security.network.client)
		(extension com.apple.sandbox.executable))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(require-all
				(entitlement-is-present com.apple.security.ts.system-tmpdir)
				(require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.system-tmpdir}")))
			(require-all
				(entitlement-is-present com.apple.security.ts.tmpdir)
				(require-all (require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.daemon-container)
						(require-not (extension com.apple.sandbox.container)))
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(extension com.apple.assets.read)
						(require-any
							(require-all
								(subpath "/private/var/MobileAsset")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
							(require-all
								(subpath-prefix "${HOME}/Library/Assets")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(entitlement-is-present com.apple.security.ts.system-tmpdir)
				(require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.system-tmpdir}")))
			(require-all
				(entitlement-is-present com.apple.security.ts.tmpdir)
				(require-all (require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.daemon-container)
						(require-not (extension com.apple.sandbox.container)))
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(extension com.apple.assets.read)
						(require-any
							(require-all
								(subpath "/private/var/MobileAsset")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
							(require-all
								(subpath-prefix "${HOME}/Library/Assets")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(entitlement-is-present com.apple.security.ts.system-tmpdir)
				(require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.system-tmpdir}")))
			(require-all
				(entitlement-is-present com.apple.security.ts.tmpdir)
				(require-all (require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.daemon-container)
						(require-not (extension com.apple.sandbox.container)))
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(extension com.apple.assets.read)
						(require-any
							(require-all
								(subpath "/private/var/MobileAsset")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
							(require-all
								(subpath-prefix "${HOME}/Library/Assets")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(require-all
				(entitlement-is-present com.apple.security.ts.system-tmpdir)
				(require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.system-tmpdir}")))
			(require-all
				(entitlement-is-present com.apple.security.ts.tmpdir)
				(require-all (require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.daemon-container)
						(require-not (extension com.apple.sandbox.container)))
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(extension com.apple.assets.read)
						(require-any
							(require-all
								(subpath "/private/var/MobileAsset")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
							(require-all
								(subpath-prefix "${HOME}/Library/Assets")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(entitlement-is-present com.apple.security.ts.system-tmpdir)
				(require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.system-tmpdir}")))
			(require-all
				(entitlement-is-present com.apple.security.ts.tmpdir)
				(require-all (require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
						(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
						(require-not (subpath "/private/var/containers/Bundle"))
						(require-not (subpath "/Developer/Applications"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
						(require-not (subpath "/Applications")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.security.ts.daemon-container)
								(require-not (extension com.apple.sandbox.container)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.home-relative-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-write)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
							(require-all
								(extension com.apple.security.exception.files.absolute-path.read-only)
								(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.daemon-container)
						(require-not (extension com.apple.sandbox.container)))
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.play-media)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(extension com.apple.assets.read)
						(require-any
							(require-all
								(subpath "/private/var/MobileAsset")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
							(require-all
								(subpath-prefix "${HOME}/Library/Assets")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(entitlement-is-bool-true com.apple.security.ts.daemon-container)
		(require-not (extension com.apple.sandbox.container)))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(extension com.apple.assets.read)
						(require-any
							(require-all
								(subpath "/private/var/MobileAsset")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
							(require-all
								(subpath-prefix "${HOME}/Library/Assets")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(extension com.apple.assets.read)
						(require-any
							(require-all
								(subpath "/private/var/MobileAsset")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
							(require-all
								(subpath-prefix "${HOME}/Library/Assets")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(extension com.apple.assets.read)
						(require-any
							(require-all
								(subpath "/private/var/MobileAsset")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
							(require-all
								(subpath-prefix "${HOME}/Library/Assets")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(extension com.apple.assets.read)
						(require-any
							(require-all
								(subpath "/private/var/MobileAsset")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
							(require-all
								(subpath-prefix "${HOME}/Library/Assets")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.security.exception.files.home-relative-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
					(require-all
						(extension com.apple.security.exception.files.absolute-path.read-write)
						(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(extension com.apple.assets.read)
						(require-any
							(require-all
								(subpath "/private/var/MobileAsset")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))
							(require-all
								(subpath-prefix "${HOME}/Library/Assets")
								(require-not (entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback))))))))))
(deny file-link
	(require-all
		(entitlement-is-bool-true com.apple.security.ts.addressbook)
		(subpath-prefix "${HOME}/Library/AddressBook")))
(deny file-map-executable
	(require-not (signing-identifier "com.apple."))
	(signing-identifier "com.apple.protobox-descriptors-test"))
(deny file-read*
	(require-all
		(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/"))
(require-not (subpath-prefix "${ENTITLEMENT:com.apple.security.ts.nano-paired-storage.subpath.read-only}"))
(require-not (literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.ts.nano-preference.read-only}")))
		(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/"))
(require-not (subpath-prefix "${ENTITLEMENT:com.apple.security.ts.nano-paired-storage.subpath.read-write}"))
(require-not (literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.ts.nano-preference.read-write}")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.network.client)
				(require-any
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
					(require-all
						(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
						(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
						(require-not (literal "/private/var/preferences/com.apple.security.plist"))
						(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
						(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
						(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
						(literal "/private/var/preferences/com.apple.networkextension.plist")
						(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
				(process-attribute is-apple-signed-executable)
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.front-user-home-literal.read-only)
				(require-not (literal-prefix "${FRONT_USER_HOME}")))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?"))
						(require-not (extension com.apple.librarian.ubiquity-revision)))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.plist")
				(entitlement-is-present com.apple.private.networkextension.configuration)
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(literal "/private/var/preferences/com.apple.networkd.plist")
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(literal "/private/var/preferences/com.apple.security.plist")
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE)
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.location-services)
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")))
			(require-all
				(literal "/private/var/db/com.apple.networkextension.tracker-info")
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE)
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.render-images)
				(require-not (subpath-prefix "${HOME}/Library/Fonts")))
			(require-all
				(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.lockdown-service)
				(require-not (literal "/private/var/preferences/com.apple.security.plist")))
			(require-all
				(entitlement-is-present com.apple.security.ts.system-tmpdir)
				(require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.system-tmpdir}")))
			(require-all
				(entitlement-is-present com.apple.security.ts.tmpdir)
				(require-all (require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.read-factory-files)
				(require-all (require-not (subpath "/private/var/hardware/FactoryData"))
(require-not (literal "/usr/standalone/firmware/apticket.der")))
				(require-not (subpath "/private/preboot")))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.read-any-bundle)
				(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
				(require-not (subpath "/private/var/containers/Bundle"))
				(require-not (subpath "/Developer/Applications"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
				(require-not (subpath "/Applications")))
			(require-all
				(literal "/System/Library/Carrier Bundles/")
				(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
				(require-not (entitlement-is-bool-true com.apple.security.ts.location-services)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (entitlement-is-bool-true com.apple.security.ts.location-services)))
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
				(require-not (entitlement-is-bool-true com.apple.security.ts.location-services)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.identity-services-receive-file)
				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
				(require-not (extension com.apple.identityservices.deliver)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.location-services)
				(require-any
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.geoservices)
				(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.addressbook)
				(require-not (subpath-prefix "${HOME}/Library/Fonts"))
				(entitlement-is-bool-true com.apple.Contacts.database-allow)
				(extension com.apple.tcc.kTCCServiceAddressBook)
				(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
				(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
				(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (entitlement-is-bool-true com.apple.security.ts.geoservices)))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
				(require-not (entitlement-is-bool-true com.apple.security.ts.geoservices)))
			(require-all
				(uid 0)
				(vnode-type CHARACTER-DEVICE)
				(entitlement-is-bool-true com.apple.security.ts.bpf)
				(require-not (literal "/dev/bpf")))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(extension com.apple.assets.read)
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
						(subpath "/private/var/MobileAsset")
						(subpath-prefix "${HOME}/Library/Assets"))
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.asset-access)
						(subpath "/private/var/MobileAsset")
						(subpath-prefix "${HOME}/Library/Assets"))))
			(require-all
				(subpath "/private/var/containers/Data/System/com.apple.geod")
				(require-not (entitlement-is-bool-true com.apple.security.ts.geoservices))))))
(deny file-read-data
	(require-not (signing-identifier "com.apple."))
	(signing-identifier "com.apple.protobox-descriptors-test")
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.revisiond-client)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.revisiond-client)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.revisiond-client)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision))))))))
(deny file-read-metadata
	(require-all
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-any
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library"))
				(require-not (literal-prefix "${HOME}/Library")))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(literal-prefix "${HOME}/Library/Mobile Documents")
						(require-not (entitlement-is-bool-true com.apple.security.ts.ubiquity)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(extension com.apple.revisiond.revision)
						(require-not (entitlement-is-bool-true com.apple.security.ts.ubiquity)))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")
						(require-not (entitlement-is-bool-true com.apple.security.ts.ubiquity)))
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.ubiquity)
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
								(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
								(require-not (subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(extension com.apple.librarian.ubiquity-container)
								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
								(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
								(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.ubiquity)
						(extension com.apple.revisiond.staging)
						(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(extension com.apple.revisiond.revision)
						(require-not (entitlement-is-bool-true com.apple.security.ts.ubiquity)))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.location-services)
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.ubiquity)
						(extension com.apple.revisiond.staging)
						(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(extension com.apple.revisiond.revision)
						(require-not (entitlement-is-bool-true com.apple.security.ts.ubiquity)))))
			(require-all
				(vnode-type SYMLINK)
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.security.ts.ubiquity)
						(extension com.apple.revisiond.staging)
						(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(extension com.apple.revisiond.revision)
						(require-not (entitlement-is-bool-true com.apple.security.ts.ubiquity)))))
			(require-all
				(entitlement-is-present com.apple.security.ts.system-tmpdir)
				(require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.system-tmpdir}")))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)
				(require-not (extension com.apple.sandbox.container)))
			(require-all
				(entitlement-is-present com.apple.security.ts.tmpdir)
				(require-all (require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))))
			(require-all
				(literal-prefix "${HOME}/Library/PPTDevice")
				(require-not (entitlement-is-bool-true com.apple.security.ts.identity-services-client))
				(require-not (entitlement-is-bool-true com.apple.security.ts.identity-services-receive-file)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.revisiond-client)
				(require-any
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
								(extension com.apple.revisiond.staging))
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
								(extension com.apple.revisiond.revision))))
					(require-all
						(vnode-type DIRECTORY)
						(require-any
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
								(extension com.apple.revisiond.staging))
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
								(extension com.apple.revisiond.revision))))
					(require-all
						(vnode-type SYMLINK)
						(require-any
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
								(extension com.apple.revisiond.staging))
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
								(extension com.apple.revisiond.revision)))))))))
(deny file-read-xattr
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(extension com.apple.revisiond.staging))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(extension com.apple.revisiond.revision))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.revisiond-client)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(extension com.apple.revisiond.staging))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(extension com.apple.revisiond.revision))))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(extension com.apple.revisiond.staging))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(extension com.apple.revisiond.revision))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.revisiond-client)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(extension com.apple.revisiond.staging))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(extension com.apple.revisiond.revision))))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(extension com.apple.revisiond.staging))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(extension com.apple.revisiond.revision))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.revisiond-client)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(extension com.apple.revisiond.staging))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(extension com.apple.revisiond.revision)))))))
(deny file-write*
	(require-all
		(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/"))
(require-not (subpath-prefix "${ENTITLEMENT:com.apple.security.ts.nano-paired-storage.subpath.read-write}"))
(require-not (literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.ts.nano-preference.read-write}")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-any
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(vnode-type DIRECTORY)
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(vnode-type SYMLINK)
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.revisiond-client)
				(require-any
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(vnode-type DIRECTORY)
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(vnode-type SYMLINK)
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))))
			(require-all
				(entitlement-is-present com.apple.security.ts.system-tmpdir)
				(require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.system-tmpdir}")))
			(require-all
				(entitlement-is-present com.apple.security.ts.tmpdir)
				(require-all (require-not (subpath-prefix "/private/var/tmp/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/${ENTITLEMENT:com.apple.security.ts.tmpdir}"))))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.geoservices)
				(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
			(require-all
				(entitlement-is-bool-true com.apple.Contacts.database-allow)
				(entitlement-is-bool-true com.apple.security.ts.addressbook)
				(extension com.apple.tcc.kTCCServiceAddressBook)
				(require-any
					(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-not (literal-prefix "${HOME}/Library/AddressBook/")))))
			(require-all
				(extension com.apple.sandbox.container)
				(entitlement-is-bool-true com.apple.security.ts.daemon-container)))))
(deny file-write-create
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(entitlement-is-bool-true com.apple.security.network.client)
		(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
	(require-all
		(vnode-type DIRECTORY)
		(entitlement-is-bool-true com.apple.security.ts.ubiquity)
		(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(entitlement-is-bool-true com.apple.security.ts.identity-services-receive-file)
		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
		(require-not (extension com.apple.identityservices.deliver)))
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-service
	(require-all
		(require-not (entitlement-is-present com.apple.security.exception.iokit-user-client-class))
		(require-any
			(require-all
				(iokit-user-client-class "AppleKeyStore")
				(require-not (entitlement-is-bool-true com.apple.security.network.client))
				(require-not (entitlement-is-bool-true com.apple.security.ts.mobile-keybag-access)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.render-images)
				(require-not (iokit-user-client-class "AppleJPEGDriver"))
				(require-not (iokit-user-client-class "IOSurfaceRoot")))
			(require-all
				(require-any (iokit-user-client-class "H11ANEIn")
(iokit-user-client-class "AppleVirtIONeuralEngineDevice"))
				(require-not (entitlement-is-bool-true com.apple.security.ts.ane-client)))
			(require-all
				(iokit-user-client-class "IOPMrootDomain")
				(require-not (entitlement-is-bool-true com.apple.security.ts.power-assertions))
				(require-not (entitlement-is-bool-true com.apple.security.ts.identity-services-client))
				(require-not (entitlement-is-bool-true com.apple.security.ts.identity-services-receive-file)))
			(require-all
				(iokit-user-client-class "AGXAcceleratorG")
				(require-not (entitlement-is-bool-true com.apple.security.ts.render-images))
				(require-not (entitlement-is-bool-true com.apple.security.ts.framebuffer-access))
				(require-not (entitlement-is-bool-true com.apple.security.ts.addressbook)))
			(require-all
				(require-any (iokit-user-client-class "AppleCLCD")
(iokit-user-client-class "AppleParavirtDisplay"))
				(require-not (entitlement-is-bool-true com.apple.security.ts.render-images))
				(require-not (entitlement-is-bool-true com.apple.security.ts.framebuffer-access))
				(require-not (entitlement-is-bool-true com.apple.security.ts.addressbook)))
			(require-all
				(iokit-user-client-class "AppleParavirtGPU")
				(require-not (entitlement-is-bool-true com.apple.security.ts.render-images))
				(require-not (entitlement-is-bool-true com.apple.security.ts.framebuffer-access))
				(require-not (entitlement-is-bool-true com.apple.security.ts.addressbook)))
			(require-all
				(iokit-user-client-class "AppleJPEGDriver")
				(require-not (entitlement-is-bool-true com.apple.security.ts.addressbook)))
			(require-all
				(iokit-user-client-class "IOSurfaceRoot")
				(require-not (entitlement-is-bool-true com.apple.security.ts.addressbook)))
			(require-all
				(iokit-user-client-class "AppleKeyStore")
				(entitlement-is-bool-true com.apple.security.ts.addressbook)))))
(deny ipc-posix-sem*
	(ipc-posix-name ""))
(deny ipc-posix-shm*
	(ipc-posix-name-prefix "${ENTITLEMENT:com.apple.security.ts.ipc-posix-shm}"))
(deny ipc-posix-shm-read-data
	(require-all
		(require-not (ipc-posix-name ""))
		(require-any
			(require-all
				(ipc-posix-name "/com.apple.AppSSO.version")
				(require-not (entitlement-is-bool-true com.apple.security.network.client))
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(ipc-posix-name "apple.shm.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny job-creation)
(deny mach-lookup
	(require-not (signing-identifier "com.apple."))
	(signing-identifier "com.apple.protobox-descriptors-test")
	(require-all
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (extension com.apple.security.exception.mach-lookup.global-name))
		(require-not (extension com.apple.security.exception.mach-lookup.local-name))
		(require-any
			(global-name "com.apple.ckdiscretionaryd.debug")
			(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
			(require-all
				(entitlement-is-bool-true com.apple.security.network.client)
				(require-not (global-name "com.apple.securityd"))
				(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
				(require-not (global-name "com.apple.networkscored"))
				(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
				(require-not (global-name "com.apple.SystemConfiguration.helper"))
				(require-not (global-name "com.apple.commcenter.xpc"))
				(require-not (global-name "com.apple.SystemConfiguration.configd"))
				(require-not (global-name "com.apple.accountsd.accountmanager"))
				(require-not (global-name "com.apple.GSSCred"))
				(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
				(require-not (global-name "com.apple.nehelper"))
				(require-not (global-name "com.apple.nesessionmanager"))
				(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
				(require-not (global-name "com.apple.dnssd.service"))
				(require-not (global-name "com.apple.usymptomsd"))
				(require-not (global-name "com.apple.trustd"))
				(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
				(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
				(require-not (global-name "com.apple.nsurlsessiond"))
				(require-not (global-name "com.apple.symptomsd"))
				(require-not (global-name "com.apple.AppSSO.service-xpc"))
				(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
				(require-not (global-name "com.apple.networkd"))
				(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
				(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
				(require-any
					(require-all
						(global-name "com.apple.ak.auth.xpc")
						(require-not (process-attribute is-apple-signed-executable))
						(require-not (entitlement-is-bool-true com.apple.authkit.client))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.private))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.internal)))
					(require-all
						(global-name "com.apple.ak.anisette.xpc")
						(require-not (process-attribute is-apple-signed-executable))
						(require-not (entitlement-is-bool-true com.apple.authkit.client))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.private))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.internal)))
					(require-all
						(global-name "com.apple.networkd_privileged")
						(require-not (entitlement-is-bool-true com.apple.networkd.modify_settings))
						(require-not (entitlement-is-bool-true com.apple.networkd.disable_opportunistic))
						(require-not (entitlement-is-bool-true com.apple.networkd.advisory_socket))
						(require-not (entitlement-is-bool-true com.apple.networkd_privileged))
						(require-not (entitlement-is-bool-true com.apple.networkd.persistent_interface)))))
			(require-all
				(entitlement-is-present com.apple.security.ts.webkit-client)
				(require-not (xpc-service-name "com.apple.WebKit.WebAuthn"))
				(require-not (xpc-service-name "com.apple.WebKit.GPU"))
				(require-all (require-not (xpc-service-name "com.apple.WebKit.Networking"))
(require-not (xpc-service-name "com.apple.WebKit.WebContent")))
				(require-not (xpc-service-name "com.apple.WebKit.WebContent.CaptivePortal")))
			(require-all
				(global-name "com.apple.networkscored")
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(global-name "com.apple.AppSSO.service-xpc")
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.play-media)
				(require-not (global-name "com.apple.mediaserverd"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
				(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
				(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
				(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
				(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
				(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
				(require-not (global-name "com.apple.audio.AudioSession"))
				(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
				(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
				(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
				(require-not (global-name "com.apple.springboard.backgroundappservices"))
				(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
				(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
				(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
				(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
				(require-not (global-name "com.apple.itunesstored.xpc"))
				(require-not (global-name "com.apple.coremedia.videocompositor"))
				(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
				(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
				(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
				(require-not (global-name "com.apple.coremedia.admin"))
				(require-not (global-name "com.apple.coremedia.asset.xpc"))
				(require-not (global-name "com.apple.pegasus"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
				(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
				(require-not (global-name "com.apple.privacyaccountingd"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
				(require-not (global-name "com.apple.coremedia.sandboxserver"))
				(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
				(require-not (global-name "com.apple.timesync.ptp.manager"))
				(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
				(require-not (global-name "com.apple.coremedia.player.xpc"))
				(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
				(require-not (global-name "com.apple.audioanalyticsd"))
				(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
				(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
				(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
				(require-not (global-name "com.apple.coremedia.sts"))
				(require-not (global-name "com.apple.itunescloudd.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
				(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
				(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc")))
			(require-all
				(entitlement-is-bool-true com.apple.security.network.server)
				(require-not (global-name "com.apple.securityd"))
				(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
				(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
				(require-not (global-name "com.apple.SystemConfiguration.helper"))
				(require-not (global-name "com.apple.commcenter.xpc"))
				(require-not (global-name "com.apple.SystemConfiguration.configd"))
				(require-not (global-name "com.apple.usymptomsd"))
				(require-not (global-name "com.apple.trustd"))
				(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
				(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
				(require-not (global-name "com.apple.symptomsd"))
				(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
				(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability")))
			(require-all
				(process-attribute is-apple-signed-executable)
				(global-name "com.apple.audioanalyticsd")
				(require-not (entitlement-is-bool-true com.apple.security.ts.play-audio)))
			(require-all
				(global-name "com.apple.nesessionmanager")
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(xpc-service-name "com.apple.ImageIOXPCService")
				(require-not (entitlement-is-bool-true com.apple.security.ts.render-images)))
			(require-all
				(global-name "com.apple.dnssd.service")
				(require-not (entitlement-is-bool-true com.apple.security.network.server)))
			(require-all
				(global-name "com.apple.quicklook.ThumbnailsAgent")
				(require-not (entitlement-is-bool-true com.apple.security.ts.ubiquity)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.power-assertions)
				(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
				(require-not (global-name "com.apple.iokit.powerdxpc"))
				(require-not (global-name "com.apple.PowerManagement.control")))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-not (global-name "com.apple.mediaserverd"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
				(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
				(require-not (global-name "com.apple.librariand"))
				(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
				(require-not (global-name "com.apple.bird"))
				(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
				(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
				(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
				(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
				(require-not (global-name "com.apple.FileCoordination"))
				(require-not (global-name "com.apple.audio.AudioSession"))
				(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
				(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
				(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
				(require-not (global-name "com.apple.bird.token"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
				(require-not (global-name "com.apple.springboard.backgroundappservices"))
				(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
				(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
				(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
				(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
				(require-not (global-name "com.apple.itunesstored.xpc"))
				(require-not (global-name "com.apple.coremedia.videocompositor"))
				(require-not (global-name "com.apple.FileProvider"))
				(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
				(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
				(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
				(require-not (global-name "com.apple.coremedia.admin"))
				(require-not (global-name "com.apple.coremedia.asset.xpc"))
				(require-not (global-name "com.apple.pegasus"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
				(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
				(require-not (global-name "com.apple.privacyaccountingd"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
				(require-not (global-name "com.apple.coremedia.sandboxserver"))
				(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
				(require-not (global-name "com.apple.timesync.ptp.manager"))
				(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
				(require-not (global-name "com.apple.coremedia.player.xpc"))
				(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
				(require-not (global-name "com.apple.audioanalyticsd"))
				(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
				(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
				(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
				(require-not (global-name "com.apple.coremedia.sts"))
				(require-not (global-name "com.apple.itunescloudd.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
				(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
				(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc")))
			(require-all
				(global-name "com.apple.revisiond")
				(require-not (entitlement-is-bool-true com.apple.security.ts.ubiquity))
				(require-not (entitlement-is-bool-true com.apple.security.ts.revisiond-client)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.play-audio)
				(require-not (global-name "com.apple.audio.AudioConverterService"))
				(require-not (global-name "com.apple.audio.AURemoteIOServer"))
				(require-not (xpc-service-name "com.apple.audio.analytics.service")))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.springboard-services)
				(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
				(require-not (global-name "com.apple.springboard.backgroundappservices"))
				(require-not (global-name "com.apple.springboard.services"))
				(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
				(require-not (global-name "com.apple.usernotifications.listener")))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.opengl-or-metal)
				(require-all (require-not (global-name "com.apple.cvmsServ"))
(require-not (global-name "com.apple.gpumemd.source")))
				(require-not (xpc-service-name "com.apple.MTLCompilerService"))
				(require-not (xpc-service-name "com.apple.AGXCompilerService")))
			(require-all
				(global-name "com.apple.mobile.heartbeat")
				(require-not (entitlement-is-bool-true com.apple.security.ts.lockdown-service)))
			(require-all
				(xpc-service-name "com.apple.ImageIOXPCService")
				(require-not (entitlement-is-bool-true com.apple.security.ts.addressbook)))
			(require-all
				(global-name "com.apple.contactsd")
				(entitlement-is-bool-true com.apple.security.ts.addressbook))
			(require-all
				(global-name "com.apple.spotlight.IndexDelegateAgent")
				(require-not (entitlement-is-bool-true com.apple.security.ts.addressbook)))
			(require-all
				(global-name "com.apple.securityd")
				(require-not (entitlement-is-bool-true com.apple.security.ts.lockdown-service)))
			(require-all
				(global-name "com.apple.spotlight.IndexAgent")
				(require-not (entitlement-is-bool-true com.apple.security.ts.addressbook)))
			(require-all
				(global-name "com.apple.identityservicesd.idquery.embedded.auth")
				(entitlement-is-bool-true com.apple.security.ts.addressbook))
			(require-all
				(global-name "com.apple.trustd")
				(require-not (entitlement-is-bool-true com.apple.security.ts.lockdown-service)))
			(require-all
				(global-name "com.apple.locationd.spi")
				(require-not (entitlement-is-bool-true com.apple.security.ts.location-services)))
			(require-all
				(global-name "com.apple.accountsd.accountmanager")
				(entitlement-is-bool-true com.apple.security.ts.addressbook))
			(require-all
				(global-name "com.apple.locationd.synchronous")
				(require-not (entitlement-is-bool-true com.apple.security.ts.location-services)))
			(require-all
				(global-name "com.apple.ABDatabaseDoctor")
				(entitlement-is-bool-true com.apple.security.ts.addressbook))
			(require-all
				(global-name "com.apple.locationd.registration")
				(require-not (entitlement-is-bool-true com.apple.security.ts.location-services)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.identity-services-receive-file)
				(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
				(require-not (global-name "com.apple.iokit.powerdxpc"))
				(require-not (global-name "com.apple.PowerManagement.control")))
			(require-all
				(global-name "com.apple.marco")
				(require-not (entitlement-is-bool-true com.apple.security.ts.identity-services-receive-file))
				(require-not (entitlement-is-bool-true com.apple.security.ts.identity-services-client)))
			(require-all
				(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
				(entitlement-is-bool-true com.apple.security.ts.addressbook))
			(require-all
				(global-name "com.apple.identityservicesd.embedded.auth")
				(require-not (entitlement-is-bool-true com.apple.security.ts.identity-services-receive-file))
				(require-not (entitlement-is-bool-true com.apple.security.ts.identity-services-client)))
			(require-all
				(global-name "com.apple.cmfsyncagent.embedded.auth")
				(entitlement-is-bool-true com.apple.security.ts.addressbook))
			(require-all
				(global-name "com.apple.powerlog.plxpclogger.xpc")
				(require-not (entitlement-is-bool-true com.apple.security.ts.identity-services-client)))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
			(require-all
				(global-name "com.apple.iokit.powerdxpc")
				(require-not (entitlement-is-bool-true com.apple.security.ts.identity-services-client)))
			(require-all
				(global-name "com.apple.PowerManagement.control")
				(require-not (entitlement-is-bool-true com.apple.security.ts.identity-services-client)))
			(require-all
				(require-any (global-name "com.apple.geod")
(global-name "com.apple.nanomaps.xpc.GeoServices"))
				(require-not (entitlement-is-bool-true com.apple.security.ts.geoservices)))
			(require-all
				(global-name "com.apple.geoanalyticsd")
				(require-not (entitlement-is-bool-true com.apple.security.ts.geoservices)))
			(require-all
				(global-name "com.apple.appleneuralengine")
				(require-not (entitlement-is-bool-true com.apple.security.ts.ane-client)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.asset-access)
				(require-not (global-name "com.apple.mobileasset.autoasset"))
				(require-not (global-name "com.apple.mobileassetd"))
				(require-not (global-name "com.apple.mobileassetd.v2")))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.cloudkit-client)
				(require-not (global-name "com.apple.cloudasset.cloudd"))
				(require-not (global-name "com.apple.ckdiscretionaryd"))
				(require-not (global-name "com.apple.cloudd")))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
				(require-not (global-name "com.apple.mediaserverd"))
				(require-not (global-name "com.apple.mobileasset.autoasset"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
				(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
				(require-not (global-name "com.apple.mobileassetd"))
				(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
				(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
				(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
				(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
				(require-not (global-name "com.apple.audio.AudioSession"))
				(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
				(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
				(require-not (global-name "com.apple.mobileassetd.v2"))
				(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
				(require-not (global-name "com.apple.springboard.backgroundappservices"))
				(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
				(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
				(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
				(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
				(require-not (global-name "com.apple.itunesstored.xpc"))
				(require-not (global-name "com.apple.coremedia.videocompositor"))
				(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
				(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
				(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
				(require-not (global-name "com.apple.coremedia.admin"))
				(require-not (global-name "com.apple.coremedia.asset.xpc"))
				(require-not (global-name "com.apple.pegasus"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
				(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
				(require-not (global-name "com.apple.privacyaccountingd"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
				(require-not (global-name "com.apple.coremedia.sandboxserver"))
				(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
				(require-not (global-name "com.apple.timesync.ptp.manager"))
				(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
				(require-not (global-name "com.apple.coremedia.player.xpc"))
				(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
				(require-not (global-name "com.apple.audioanalyticsd"))
				(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
				(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
				(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
				(require-not (global-name "com.apple.coremedia.sts"))
				(require-not (global-name "com.apple.itunescloudd.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
				(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
				(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))))))
(deny network-inbound
	(require-all
		(require-not (entitlement-is-bool-true com.apple.security.network.server))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-any
					(require-all
						(extension com.apple.app-sandbox.read-write)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents")))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(entitlement-is-bool-true com.apple.security.network.client)
				(require-not (entitlement-is-bool-true com.apple.developer.networking.multicast))))))
(deny network-outbound
	(require-all
		(require-not (control-name "com.apple.flow-divert"))
		(require-not (entitlement-is-bool-true com.apple.security.network.client))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.network.server)
				(require-not (control-name "com.apple.netsrc"))
				(require-not (control-name "com.apple.network.statistics"))
				(require-not (literal "/private/var/run/mDNSResponder")))
			(require-all
				(literal "/private/var/run/lockdown.sock")
				(require-not (signing-identifier "com.apple.lockdownmoded"))
				(require-not (signing-identifier "com.apple.ImageIOXPCService"))
				(require-not (signing-identifier "com.apple.CoreGraphics.CGPDFService"))
				(require-not (signing-identifier "com.apple.audio.AudioConverterService")))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(require-any
					(require-all
						(extension com.apple.app-sandbox.read-write)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents")))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))
			(require-all
				(literal "/private/var/run/lockdown/checkin")
				(require-not (entitlement-is-bool-true com.apple.security.ts.lockdown-service)))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.lockdown-client)
				(require-not (literal "/private/var/run/lockdown.sock"))))))
(deny syscall-unix
	(require-all
		(syscall-number SYS___channel_get_info)
		(require-not (entitlement-is-bool-true com.apple.security.network.client)))
	(require-all
		(syscall-number SYS___channel_get_opt)
		(require-not (entitlement-is-bool-true com.apple.security.network.client)))
	(require-all
		(syscall-number SYS_flock)
		(entitlement-is-bool-true com.apple.security.ts.opengl-or-metal))
	(require-all
		(syscall-number SYS___channel_open)
		(require-not (entitlement-is-bool-true com.apple.security.network.client)))
	(require-all
		(syscall-number SYS___channel_set_opt)
		(require-not (entitlement-is-bool-true com.apple.security.network.client)))
	(require-all
		(syscall-number SYS___channel_sync)
		(require-not (entitlement-is-bool-true com.apple.security.network.client))))
(deny sysctl-read
	(require-all
		(sysctl-name "net.statistics")
		(entitlement-is-bool-true com.apple.security.network.server)
		(entitlement-is-bool-true com.apple.security.network.client))
	(require-all
		(sysctl-name "net.routetable.")
		(entitlement-is-bool-true com.apple.security.network.server)
		(entitlement-is-bool-true com.apple.security.network.client))
	(require-all
		(require-any (sysctl-name "kern.nisdomainname")
(sysctl-name "kern.ipc.maxsockbuf"))
		(entitlement-is-bool-true com.apple.security.network.server)
		(entitlement-is-bool-true com.apple.security.network.client))
	(require-all
		(sysctl-name "kern.bootsessionuuid")
		(signing-identifier "com.apple.")
		(entitlement-is-bool-true com.apple.security.ts.opengl-or-metal)))
(deny system-fsctl
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 32))
		(entitlement-is-bool-true com.apple.security.network.server)
		(entitlement-is-bool-true com.apple.security.network.client))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 3))
		(entitlement-is-bool-true com.apple.security.network.server)
		(entitlement-is-bool-true com.apple.security.network.client))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 32))
		(entitlement-is-bool-true com.apple.security.ts.ubiquity))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 31))
		(entitlement-is-bool-true com.apple.security.ts.ubiquity))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 93))
		(entitlement-is-bool-true com.apple.security.ts.ubiquity)
		(entitlement-is-bool-true com.apple.security.ts.revisiond-client)))
(deny system-kas-info)
(deny system-mac-syscall
	(require-all
		(mac-syscall-number 5)
		(mac-policy-name "Sandbox")
		(require-not (entitlement-is-bool-true com.apple.security.ts.ubiquity))
		(require-not (entitlement-is-present com.apple.security.ts.tmpdir))
		(require-not (entitlement-is-present com.apple.security.ts.system-tmpdir))
		(require-not (entitlement-is-bool-true com.apple.security.ts.read-any-bundle))
		(entitlement-is-bool-true com.apple.security.ts.daemon-container)))
(deny user-preference-read
	(require-not (signing-identifier "com.apple."))
	(signing-identifier "com.apple.protobox-descriptors-test")
	(require-all
		(preference-domain "com.apple.logging")
		(preference-domain "com.apple.demo-settings")
		(preference-domain "com.apple.NanoRegistry")
		(preference-domain "com.apple.pairedsync")
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.addressbook)
				(preference-domain "com.apple.CoreDuet")
				(preference-domain "com.apple.AppSupport")
				(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
				(preference-domain "com.apple.DataMigration")
				(preference-domain "com.apple.icloud.findmydeviced.postwipe")
				(preference-domain "com.apple.AOSNotification.public.notbackedup")
				(preference-domain "com.apple.PeoplePicker")
				(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
			(require-all
				(preference-domain "com.apple.CFNetwork")
				(entitlement-is-bool-true com.apple.security.network.client))
			(require-all
				(preference-domain "com.apple.itunesstored")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.itunesstored.private)
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(entitlement-is-bool-true com.apple.security.ts.play-media)
				(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback))
			(require-all
				(preference-domain "com.apple.mobileipod")
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(entitlement-is-bool-true com.apple.security.ts.play-media)
				(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.ubiquity)
				(preference-domain "com.apple.coremedia")
				(preference-domain "com.apple.coreaudio")
				(preference-domain "com.apple.avfoundation")
				(preference-domain "com.apple.corevideo"))
			(require-all
				(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
				(entitlement-is-bool-true com.apple.security.ts.render-images)
				(entitlement-is-bool-true com.apple.security.ts.framebuffer-access))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.play-media)
				(preference-domain "com.apple.coremedia")
				(preference-domain "com.apple.coreaudio")
				(preference-domain "com.apple.avfoundation")
				(preference-domain "com.apple.corevideo"))
			(require-all
				(preference-domain "com.apple.Metal")
				(entitlement-is-bool-true com.apple.security.ts.opengl-or-metal))
			(require-all
				(preference-domain "com.apple.opengl")
				(entitlement-is-bool-true com.apple.security.ts.opengl-or-metal))
			(require-all
				(entitlement-is-bool-true com.apple.security.ts.location-services)
				(preference-domain "com.apple.locationd")
				(preference-domain "com.apple.AppSupport")
				(preference-domain "com.apple.GEO"))
			(require-all
				(preference-domain "com.apple.carrier")
				(entitlement-is-bool-true com.apple.security.ts.location-services))
			(require-all
				(preference-domain "com.apple.logging")
				(entitlement-is-bool-true com.apple.security.ts.identity-services-client)
				(entitlement-is-bool-true com.apple.security.ts.identity-services-receive-file))
			(require-all
				(preference-domain "com.apple.ids")
				(entitlement-is-bool-true com.apple.security.ts.identity-services-client)
				(entitlement-is-bool-true com.apple.security.ts.identity-services-receive-file))
			(require-all
				(preference-domain "com.apple.conference")
				(entitlement-is-bool-true com.apple.security.ts.identity-services-client)
				(entitlement-is-bool-true com.apple.security.ts.identity-services-receive-file))
			(require-all
				(preference-domain "com.apple.marco")
				(entitlement-is-bool-true com.apple.security.ts.identity-services-client)
				(entitlement-is-bool-true com.apple.security.ts.identity-services-receive-file))
			(require-all
				(preference-domain "com.apple.GEO")
				(entitlement-is-bool-true com.apple.security.ts.geoservices))
			(require-all
				(preference-domain "com.apple.CloudKit")
				(entitlement-is-bool-true com.apple.security.ts.cloudkit-client))
			(require-all
				(preference-domain "com.apple.MobileAsset")
				(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)
				(entitlement-is-bool-true com.apple.security.ts.asset-access))
			(require-all
				(preference-domain "com.apple.coremedia")
				(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback))
			(require-all
				(preference-domain "com.apple.coreaudio")
				(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback))
			(require-all
				(preference-domain "com.apple.avfoundation")
				(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback))
			(require-all
				(preference-domain "com.apple.corevideo")
				(entitlement-is-bool-true com.apple.security.ts.asset-access.with-media-playback)))))
(deny user-preference-write
	(require-not (signing-identifier "com.apple."))
	(signing-identifier "com.apple.protobox-descriptors-test"))
(deny storage-class-map)
