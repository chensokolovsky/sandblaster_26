(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-all (require-not (subpath "/private/var/tmp/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.NanoPhotos"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-all (require-not (subpath "/private/var/tmp/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.NanoPhotos"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-all (require-not (subpath "/private/var/tmp/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.NanoPhotos"))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-all (require-not (subpath "/private/var/tmp/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.NanoPhotos"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-all (require-not (subpath "/private/var/tmp/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.NanoPhotos"))))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension com.apple.sandbox.executable))
	(require-all
		(extension-class "com.apple.identityservices.send")
		(subpath "/private/var/tmp")
		(subpath-prefix "${PROCESS_TEMP_DIR}")))
(deny file-read*
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (subpath-prefix "${HOME}/Library/NanoPhotos"))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
		(require-not (literal "/private/var/preferences/com.apple.security.plist"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.NanoPhotos")))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
		(require-not (subpath-prefix "${HOME}/Media"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
		(require-any
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/"))
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos"))
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
						(require-not (process-attribute is-apple-signed-executable)))
					(require-all
						(entitlement-is-present com.apple.private.networkextension.configuration)
						(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.NanoPhotos")))
			(require-all
				(vnode-type DIRECTORY)
				(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.NanoPhotos")))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
				(extension com.apple.identityservices.deliver)))))
(deny file-read-metadata
	(require-all
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.NanoPhotos")))
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(process-attribute is-apple-signed-executable)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(require-any
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(subpath-prefix "${HOME}/Library/NanoPhotos")
				(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
				(literal "/private/var/preferences/com.apple.security.plist")
				(require-any (subpath "/private/var/tmp/com.apple.nptocompaniond")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nptocompaniond")
(subpath-prefix "${HOME}/Library/Caches/com.apple.NanoPhotos"))
				(literal "/private/var/db/com.apple.networkextension.tracker-info")
				(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
				(subpath-prefix "${HOME}/Media")
				(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
				(require-any
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
								(process-attribute is-apple-signed-executable))
							(require-all
								(entitlement-is-present com.apple.private.networkextension.configuration)
								(literal "/private/var/preferences/com.apple.networkextension.plist"))))
					(require-all
						(vnode-type REGULAR-FILE)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.NanoPhotos"))
					(require-all
						(vnode-type DIRECTORY)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.NanoPhotos"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
						(extension com.apple.identityservices.deliver)))))))
(deny file-write*
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.NanoPhotos")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.NanoPhotos")))
	(require-all
		(require-not (subpath-prefix "${HOME}/Library/NanoPhotos"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nptocompaniond"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.NanoPhotos")))
		(require-any
			(subpath-prefix "${HOME}/Media")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/"))
				(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos"))))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.NanoPhotos"))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.NanoPhotos"))
	(require-all
		(subpath-prefix "${HOME}/Library/NanoPhotos")
		(require-any (subpath "/private/var/tmp/com.apple.nptocompaniond")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nptocompaniond")
(subpath-prefix "${HOME}/Library/Caches/com.apple.NanoPhotos"))
		(require-any
			(subpath-prefix "${HOME}/Media")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPhotos/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]nanophotos")))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}")))
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
		(require-not (extension com.apple.identityservices.deliver)))
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
		(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
		(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.coremedia.compressionsession"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.coremedia.decompressionsession"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.nanoprefsync"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.FileCoordination"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (xpc-service-name "com.apple.coremedia.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.photoanalysisd"))
		(require-not (global-name "com.apple.photos.service"))
		(require-not (global-name "com.apple.cache_delete"))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.privacyaccountingd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(global-name "com.apple.securityd")
		(global-name "com.apple.SystemConfiguration.DNSConfiguration")
		(global-name "com.apple.networkscored")
		(global-name "com.apple.SystemConfiguration.NetworkInformation")
		(global-name "com.apple.powerlog.plxpclogger.xpc")
		(global-name "com.apple.SystemConfiguration.helper")
		(global-name "com.apple.commcenter.xpc")
		(global-name "com.apple.SystemConfiguration.configd")
		(global-name "com.apple.cfnetwork.cfnetworkagent")
		(global-name "com.apple.nesessionmanager")
		(global-name "com.apple.networkserviceproxy.fetch-token")
		(global-name "com.apple.dnssd.service")
		(global-name "com.apple.usymptomsd")
		(global-name "com.apple.trustd")
		(global-name "com.apple.SystemConfiguration.PPPController")
		(global-name "com.apple.commcenter.cupolicy.xpc")
		(global-name "com.apple.nsurlsessiond")
		(global-name "com.apple.symptomsd")
		(global-name "com.apple.AppSSO.service-xpc")
		(global-name "com.apple.symptoms.symptomsd.managed_events")
		(global-name "com.apple.iokit.powerdxpc")
		(global-name "com.apple.PowerManagement.control")
		(global-name "com.apple.networkd")
		(global-name "com.apple.cfnetwork.AuthBrokerAgent")
		(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
		(extension com.apple.security.exception.mach-lookup.global-name)
		(extension com.apple.security.exception.mach-lookup.local-name)
		(global-name "com.apple.marco")
		(global-name "com.apple.identityservicesd.embedded.auth")
		(global-name "com.apple.lsd.openurl")
		(global-name "com.apple.tccd")
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny syscall-unix
	(c1 1523 2c8c 9ce0))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.nanoprefsyncd"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.coremedia"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.mobileslideshow"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.ids"))
		(require-not (preference-domain "com.apple.conference"))
		(require-not (preference-domain "com.apple.pairedsyncd"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.marco"))
		(preference-domain "com.apple.nptocompaniond")))
(deny user-preference-write
	(preference-domain "com.apple.nptocompaniond"))
(deny storage-class-map)
