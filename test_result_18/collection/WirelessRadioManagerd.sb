(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(require-not (extension com.apple.sandbox.executable)))
	(require-all
		(require-any (subpath "/private/var/tmp/com.apple.WirelessRadioManager")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.WirelessRadioManager"))
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read")))
(deny file-read*
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
		(require-not (subpath "/usr/sbin"))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
		(require-not (literal "/private/var/preferences/com.apple.security.plist"))
		(require-not (literal "/private/var/preferences/SystemConfiguration/preferences.plist"))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist"))
		(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
		(require-all (require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.wifi-networks.plist"))
(require-not (subpath-prefix "${HOME}/Library/Logs/WirelessRadioManager")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
		(require-not (literal "/private/var/preferences/SystemConfiguration/NetworkInterfaces.plist"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.plist")
				(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
				(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
			(require-all
				(literal "/System/Library/Carrier Bundles/")
				(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
				(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
			(require-all
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
				(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
				(require-all (require-not (subpath "/private/var/tmp/com.apple.WirelessRadioManager"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.WirelessRadioManager")))
				(require-any
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
						(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
						(require-any
							(extension com.apple.app-sandbox.read)
							(extension com.apple.app-sandbox.read-write)
							(extension com.apple.security.exception.files.absolute-path.read-only)
							(extension com.apple.security.exception.files.absolute-path.read-write)
							(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
							(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches")))))))))
(deny file-read-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-read-metadata
	(require-all
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.WirelessRadioManager"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.WirelessRadioManager")))
		(require-any
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
				(require-any
					(require-all
						(literal "/private/var/")
						(require-any
							(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
								(require-not (subpath-prefix "${FRONT_USER_HOME}"))
								(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
								(literal "/private/var/db/com.apple.networkextension.tracker-info")
								(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
								(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
								(require-any (literal "/private/var/preferences/SystemConfiguration/com.apple.wifi-networks.plist")
(subpath-prefix "${HOME}/Library/Logs/WirelessRadioManager"))
								(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
								(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
								(literal "/private/var/preferences/SystemConfiguration/NetworkInterfaces.plist")
								(require-any
									(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension.plist")
										(entitlement-is-present com.apple.private.networkextension.configuration))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
										(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
									(require-all
										(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
										(subpath "/private/var/containers/Data/System/com.apple.geod")
										(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
										(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
										(require-any (subpath "/private/var/tmp/com.apple.WirelessRadioManager")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.WirelessRadioManager"))
										(require-any
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
											(require-all
												(literal "/System/Library/Carrier Bundles/")
												(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
												(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
												(require-any
													(extension com.apple.app-sandbox.read)
													(extension com.apple.app-sandbox.read-write)
													(extension com.apple.security.exception.files.absolute-path.read-only)
													(extension com.apple.security.exception.files.absolute-path.read-write)
													(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
													(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))))))
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
										(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))))))
					(require-all
						(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
						(subpath "/usr/sbin")
						(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
						(literal "/private/var/preferences/com.apple.security.plist"))))
			(require-all
				(literal "/private/var/preferences/com.apple.networkd.plist")
				(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
				(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
				(subpath "/usr/sbin")
				(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
				(literal "/private/var/preferences/com.apple.security.plist")))))
(deny file-write*
	(require-all
		(require-not (subpath-prefix "${HOME}/Library/Logs/WirelessRadioManager"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-any (subpath "/private/var/tmp/com.apple.WirelessRadioManager")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.WirelessRadioManager")))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
(deny file-write-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "AppleSMCWirelessChargerUserClient"))
		(require-not (iokit-user-client-class "AppleBasebandUserClient"))))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-all (require-not (global-name "com.apple.private.corewifi.internal-xpc"))
(require-not (global-name "com.apple.SystemConfiguration.IPMonitorControl")))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.WirelessCoexManager"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.coreduetd.context"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.carousel.sessionservice"))
		(require-not (global-name "com.apple.locationd.synchronous"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.frontboard.systemappservices"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.private.corewifi-xpc"))
		(require-not (global-name "com.apple.coreduetd"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.wifivelocityd"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.marco"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.locationd.registration"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-all (require-not (global-name "com.apple.commcenter.atcs.xpc"))
(require-not (global-name "com.apple.commcenter.ari.rt.xpc")))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.callkit.callcontrollerhost"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callstatecontroller"))
		(require-not (global-name "com.apple.awdd"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.identityservicesd.embedded.auth"))
		(require-not (global-name "com.apple.coreduetd.knowledge"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-not (global-name "com.apple.locationd.spi"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.accessories.transport-server"))
		(require-not (global-name "com.apple.accessories.externalaccessory-server"))
		(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
		(require-not (extension com.apple.security.exception.mach-lookup.local-name))
		(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
		(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
		(require-not (extension com.apple.security.exception.mach-lookup.global-name))
		(global-name "com.apple.lsd.openurl")
		(global-name "com.apple.tccd")
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny syscall-unix
	(c1 1523 86aa 9ce0))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.locationd"))
		(require-not (preference-domain "com.apple.AppSupport"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.GEO"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.WirelessRadioManager.debug"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.da"))
		(require-not (preference-domain "com.apple.ids.debug"))
		(require-not (preference-domain "com.apple.facetime.bag"))
		(require-not (preference-domain "com.apple.conference"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.ids"))
		(preference-domain "com.apple.marco")))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.WirelessRadioManager.debug"))
		(preference-domain "com.apple.facetime.bag")))
(deny storage-class-map)
