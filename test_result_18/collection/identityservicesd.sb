(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.identityservices.deliver")
		(require-not (subpath-prefix "${HOME}/Library/IdentityServices")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(require-not (extension com.apple.sandbox.executable)))
	(require-all
		(require-any (subpath "/private/var/tmp/com.apple.identityservicesd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.identityservicesd"))
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read")))
(deny file-read*
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (subpath-prefix "${HOME}/Library/IdentityServices"))
		(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.identityservicesd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.identityservicesd")))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/CoreDuet/Knowledge"))
(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-identityservicesd.log"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.identityservicesd"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.identityservicesd")))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
		(require-not (literal "/private/var/preferences/com.apple.security.plist"))
		(require-not (literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.setmme"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-all (require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
		(require-not (subpath "/private/var/tmp/com.apple.imtransferagent"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.imtransferagent"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-not (extension com.apple.identityservices.send))
		(require-any
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.plist")
				(entitlement-is-present com.apple.private.networkextension.configuration)
				(require-any
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.absolute-path.read-write)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(literal "/System/Library/Carrier Bundles/")
				(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(literal "/System/Library/Carrier Bundles/")
				(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
			(require-all
				(literal "/private/var/")
				(require-any
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
					(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
					(require-all
						(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
						(subpath-prefix "${FRONT_USER_HOME}")))))))
(deny file-read-metadata
	(require-all
		(require-all (require-not (subpath "/private/var/tmp/com.apple.identityservicesd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.identityservicesd")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-not (literal-prefix "${HOME}/Library/Logs/awd"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))))
(deny file-write*
	(require-all
		(require-not (subpath-prefix "${HOME}/Library/IdentityServices"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/CoreDuet/Knowledge"))
(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-identityservicesd.log"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.identityservicesd"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.identityservicesd")))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.identityservicesd"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.identityservicesd")))
		(require-not (literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.imtransferagent"))
		(require-not (extension com.apple.identityservices.send))
		(require-all (require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")))
		(subpath "/private/var/tmp/com.apple.imtransferagent")))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection"))
		(require-not (literal-prefix "${HOME}/Library/Logs/awd"))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-not (global-name "com.apple.fairplayd.versioned"))
		(require-not (global-name "com.apple.passd.payment"))
		(require-not (global-name "com.apple.server.bluetooth.le.pipe.xpc"))
		(require-not (global-name "com.apple.passd.library"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.ind.cloudfeatures"))
		(require-not (global-name "com.apple.server.bluetooth.le.att.xpc"))
		(require-not (global-name "com.apple.WirelessCoexManager"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.nearbyd.xpc.nearbyinteraction"))
		(require-all (require-not (global-name "com.apple.networkrelay"))
(require-not (global-name "com.apple.transparencyd"))
(require-not (global-name "com.apple.transparencyd.ids"))
(require-not (global-name "com.apple.aa.usernotifications.xpc"))
(require-not (global-name "com.apple.idscredentialsagent.embedded.auth")))
		(require-not (global-name "com.apple.fairplayd"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.contactsd"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.mobile.keybagd.UserManager.xpc"))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (global-name "com.apple.seserviced.passkit-extensions"))
		(require-not (global-name "com.apple.cloudasset.cloudd"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.mobile.keybagd.xpc"))
		(require-not (global-name "com.apple.passd.in-app-payment"))
		(require-not (global-name "com.apple.asd.scoring"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.familycircle.agent"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.sysdiagnose.service.xpc"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.wirelessproxd"))
		(require-not (global-name "com.apple.StatusKit.presence"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.mobile.usermanagerd.xpc"))
		(require-not (global-name "com.apple.marco"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.ckdiscretionaryd"))
		(require-not (global-name "com.apple.appconduitd.device-connection"))
		(require-not (global-name "com.apple.kvsd"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.server.bluetooth"))
		(require-not (global-name "com.apple.mobileactivationd"))
		(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.callkit.callcontrollerhost"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.sharingd.nsxpc"))
		(require-not (global-name "com.apple.cloudd"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.corefollowup.agent"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.NPKCompanionAgent.library"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.terminusd"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-not (global-name "com.apple.datamigrator"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.imtransferservices.IMTransferAgent"))
		(require-not (global-name "com.apple.idsremoteurlconnectionagent.embedded.auth"))
		(require-not (global-name "com.apple.ProgressReporting"))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (global-name "com.apple.usernotifications.listener"))
		(global-name "com.apple.awdd")
		(global-name "com.apple.apsd")
		(extension com.apple.security.exception.mach-lookup.global-name)
		(extension com.apple.security.exception.mach-lookup.local-name)
		(global-name "com.apple.lsd.openurl")
		(global-name "com.apple.tccd")
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(global-name "com.apple.ckdiscretionaryd.debug")
			(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
			(global-name "com.apple.cloudkit.partlycloudd")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny syscall-unix
	(c1 5fec 44f6 9ce0))
(deny syscall-mach
	(cb 5ff6 44f4 9ce0))
(deny syscall-mig
	(require-not (cc 5ff9 91b8 44f2)))
(deny sysctl-read
	(require-not (sysctl-name "net.link.generic.system.flow_key_trace")))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.migration"))
		(require-not (preference-domain "com.apple.AppSupport"))
		(require-not (preference-domain "com.apple.imessage"))
		(require-not (preference-domain "com.apple.DataMigration"))
		(require-not (preference-domain "com.apple.apsd"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.CloudKit"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-all (require-not (preference-domain "com.apple.identityservices.idstatuscache"))
(require-not (preference-domain "com.apple.identityservices.serviceDisablement"))
(require-not (preference-domain "com.apple.ids.deviceproperties"))
(require-not (preference-domain "com.apple.ids.subservices"))
(require-not (preference-domain "com.apple.ids.service.com.apple.private.alloy.location.stream")))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.purplebuddy.notbackedup"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-all (require-not (preference-domain "com.apple.jett.switch-icloud"))
(require-not (preference-domain "com.apple.ids.service.com.apple.private.alloy.otaupdate")))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.imessage.bag"))
		(require-not (preference-domain "com.apple.Messages"))
		(require-not (preference-domain "com.apple.registration"))
		(require-not (preference-domain "com.apple.persistentconnection"))
		(require-not (preference-domain "com.apple.ids"))
		(require-not (preference-domain "com.apple.ids.debug"))
		(require-not (preference-domain "com.apple.purplebuddy"))
		(require-not (preference-domain "com.apple.facetime.bag"))
		(require-not (preference-domain "com.apple.conference"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.marco"))
		(preference-domain "com.apple.identityservicesd")))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.DataMigration"))
		(require-all (require-not (preference-domain "com.apple.identityservices.idstatuscache"))
(require-not (preference-domain "com.apple.identityservices.serviceDisablement"))
(require-not (preference-domain "com.apple.ids.deviceproperties"))
(require-not (preference-domain "com.apple.ids.subservices"))
(require-not (preference-domain "com.apple.ids.service.com.apple.private.alloy.location.stream")))
		(require-not (preference-domain "com.apple.imessage.bag"))
		(require-not (preference-domain "com.apple.ids"))
		(require-not (preference-domain "com.apple.ids.debug"))
		(require-not (preference-domain "com.apple.facetime.bag"))
		(require-not (preference-domain "com.apple.conference"))
		(preference-domain "com.apple.identityservicesd")))
(deny storage-class-map)
