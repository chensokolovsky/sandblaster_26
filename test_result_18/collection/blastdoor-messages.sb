(version 1)
(deny default)
(deny (with no-report) dynamic-code-generation)
(allow file-clone
	(require-all
		(require-any (subpath "/private/var/tmp/com.apple.messages/PassPreview")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages/PassPreview"))
		(require-any
			(extension com.apple.blastdoor.read-write)
			(extension com.apple.app-sandbox.read-write)))
	(require-all
		(require-any (subpath "/private/var/tmp/com.apple.messages/Wallpapers")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages/Wallpapers"))
		(require-any
			(extension com.apple.blastdoor.read-write)
			(extension com.apple.app-sandbox.read-write))))
(allow file-lock)
(allow file-read*
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.UIKit.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.UIKit.plist"))
	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(require-any (literal "/private/var/Managed Preferences/mobile/kCFPreferencesAnyApplication.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.avfoundation.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.corevideo.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.coremedia.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.coreaudio.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/kCFPreferencesAnyApplication.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.avfoundation.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.coreaudio.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.corevideo.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.coremedia.plist"))
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences_m.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences_m.plist")
	(require-all
		(require-any (subpath "/private/var/tmp/com.apple.messages/PassPreview")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages/PassPreview"))
		(require-any
			(extension com.apple.blastdoor.read-write)
			(extension com.apple.app-sandbox.read-write)
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(require-any (subpath "/private/var/tmp/com.apple.messages/Wallpapers")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages/Wallpapers"))
		(require-any
			(extension com.apple.blastdoor.read-write)
			(extension com.apple.app-sandbox.read-write)
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(subpath "/private/var/tmp/com.apple.TelephonyUtilities/SharePlayActivityImages")
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(require-any (subpath "/private/var/tmp/com.apple.CallKit.CallDirectory/LiveCallerID")
(subpath "/private/var/tmp/com.apple.facetimemessagestored/IncomingVideoVoiceMail")
(subpath-prefix "${HOME}/Library/Caches/com.apple.businessservicesd/temp")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.CallKit.CallDirectory/LiveCallerID")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.facetimemessagestored/IncomingVideoVoiceMail"))
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(subpath "/private/var/tmp/com.apple.messages")
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(require-any (subpath "/private/var/tmp/com.apple.identityservicesd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.identityservicesd"))
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(subpath "/private/var/tmp/com.apple.imtransferagent")
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]MobileSMS/?")
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages")
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(require-any (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities/SharePlayActivityImages")
(subpath-prefix "${HOME}/Media/PhotoData/UBF/scopes/syndication/originals")
(subpath-prefix "${HOME}/Library/Photos/Libraries/Syndication.photoslibrary/scopes/syndication/originals"))
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(subpath-prefix "${HOME}/Library/SMS")
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.imtransferagent")
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read)))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$")
		(require-any
			(require-all
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-any
					(extension com.apple.app-sandbox.read)
					(extension com.apple.blastdoor.read)))
			(require-all
				(require-any (subpath "/AppleInternal/Library/VideoCodecs")
(subpath "/usr/standalone/firmware")
(subpath "/private/xarts")
(subpath "/private/var/wireless/baseband_data"))
				(subpath "/private/var/hardware")
				(subpath "/private/var/MobileSoftwareUpdate")
				(literal "/dev")
				(require-any
					(literal "/dev/null")
					(literal "/private")
					(require-any (literal "/private/preboot/cryptex1/current/SystemVersion.plist")
(literal "/private/preboot/cryptex1/current/RestoreVersion.plist"))
					(literal "/dev/urandom")
					(literal "/private/etc/passwd")
					(literal "/private/etc/services")
					(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
					(literal "/private/etc/fstab")
					(require-any (subpath "/private/preboot/Cryptexes")
(subpath "/System/Cryptexes"))
					(literal "/dev/zero")
					(require-any (literal "/System")
(literal "/private/preboot"))
					(literal "/dev/random")
					(literal "/private/etc/hosts")
					(literal "/")
					(require-all
						(file-mode #o0004)
						(require-any
							(subpath "/private/var/db/timezone")
							(subpath "/usr/share")
							(subpath "/System")
							(subpath "/usr/lib")))))))
	(require-all
		(debug-mode)
		(subpath "/AppleInternal/Library/Messages/BlastDoorTestData")
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.blastdoor.read))))
(allow file-read-metadata
	(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences"))
	(subpath "/Library/Preferences")
	(require-not (literal "/private/var/run/syslog")))
(allow file-test-existence)
(allow file-write-data
	(literal "/dev/dtracehelper")
	(literal "/dev/null")
	(literal "/dev/zero"))
(allow file-write-flags
	(require-all
		(require-any (subpath "/private/var/tmp/com.apple.messages/PassPreview")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages/PassPreview"))
		(require-not (extension com.apple.blastdoor.read-write))
		(extension com.apple.app-sandbox.read-write)))
(deny (with no-report) iokit-open-user-client)
(deny (with no-report) iokit-open-service)
(allow(global-name "com.apple.iphone.axserver-systemwide") mach-bootstrap)
(allow mach-derive-port)
(allow mach-kernel-endpoint)
(allow mach-lookup
	(global-name "com.apple.logd")
	(global-name "com.apple.system.notification_center")
	(require-all
		(xpc-service-name-regex #".+")
		(global-name "com.apple.powerlog.plxpclogger.xpc")
		(global-name "com.apple.CARenderServer")
		(global-name "com.apple.audio.AudioComponentRegistrar")
		(global-name "com.apple.mobileassetd.v2")
		(global-name "com.apple.coremedia.mediaparserd.utilities")
		(global-name "com.apple.system.logger")
		(global-name "com.apple.analyticsd")
		(global-name "com.apple.mobilegestalt.xpc")))
(allow mach-task-exception-port-set)
(allow process-codesigning)
(deny (with no-report) process-info-codesignature)
(allow process-legacy-codesigning-entitlements-blob-get)
(allow process-legacy-codesigning-entitlements-der-blob-get)
(allow process-legacy-codesigning-status-get)
(allow sandbox-check)
(allow syscall-unix
	(c1 39f0 6f76 6f6e)
	(require-all
		(require-not (syscall-number SYS_necp_open))
		(require-not (syscall-number SYS_necp_client_action))
		(require-any
			(require-all
				(syscall-number SYS_dup2)
				(state-flag))
			(require-all
				(state-flag)
				(c1 39fa 9cdf 6f73))
			(require-all
				(c1 3a03 6fb3 6f74)
				(require-any
					(syscall-number SYS___mac_syscall)
					(state-flag)
					(syscall-number SYS_dup)
					(syscall-number SYS_getfsstat64)
					(syscall-number SYS_map_with_linking_np)
					(syscall-number SYS_openat)
					(syscall-number SYS_fstatat)
					(syscall-number SYS_getfsstat)
					(syscall-number SYS_open)
					(syscall-number 38)
					(syscall-number SYS_memorystatus_control)
					(syscall-number SYS_fstatat64)))
			(require-all
				(require-not (syscall-number SYS_iopolicysys))
				(require-any
					(syscall-number SYS___mac_syscall)
					(syscall-number SYS_openat)
					(syscall-number SYS_fstatat)
					(syscall-number SYS_dup)
					(syscall-number SYS_getfsstat64)
					(syscall-number SYS_map_with_linking_np)
					(syscall-number SYS_getfsstat)
					(syscall-number SYS_open)
					(syscall-number 38)
					(syscall-number SYS_memorystatus_control)
					(syscall-number SYS_fstatat64))))))
(allow syscall-mach
	(cb 3a0c 6f6c 6fe8))
(allow syscall-mig
	(cc 3a0e 6f6a 6f67)
	(require-all
		(require-not (kernel-mig-routine 135))
		(require-not (kernel-mig-routine 134))
		(require-not (kernel-mig-routine 329))
		(kernel-mig-routine 156)
		(kernel-mig-routine 317)
		(kernel-mig-routine 249)
		(kernel-mig-routine 248)
		(kernel-mig-routine 243)
		(kernel-mig-routine 326)
		(state-flag)))
(allow sysctl-read
	(require-all
		(require-not (sysctl-name "kern.bootargs"))
		(require-not (sysctl-name "vm.footprint_suspend"))
		(require-not (sysctl-name "vm.task_no_footprint_for_debug"))
		(require-any
			(sysctl-name "hw.memsize")
			(sysctl-name "vm.malloc_ranges")
			(require-any (sysctl-name "hw.perflevel")
(sysctl-name "hw.cachelinesize")
(sysctl-name "kern.hv_vmm_present"))
			(require-any (sysctl-name "hw.machine")
(sysctl-name "kern.osproductversion")
(sysctl-name "kern.osvariant_status"))
			(sysctl-name "security.mac.lockdown_mode_state")
			(sysctl-name "kern.maxfilesperproc")
			(sysctl-name "hw.target")
			(sysctl-name "hw.physicalcpu")
			(sysctl-name "hw.cpufamily")
			(sysctl-name "sysctl.name2oid")
			(sysctl-name "hw.product")
			(sysctl-name "hw.osenvironment")
			(sysctl-name "hw.optional.neon_fp16")
			(require-any (sysctl-name "hw.logicalcpu")
(sysctl-name "hw.nperflevels"))
			(require-any (sysctl-name "hw.model")
(sysctl-name "hw.logicalcpu_max")
(sysctl-name "hw.physicalcpu_max"))
			(sysctl-name "hw.l2cachesize")
			(sysctl-name "kern.osversion")
			(sysctl-name "hw.ncpu")
			(require-any (sysctl-name "hw.activecpu")
(sysctl-name "hw.pagesize_compat")
(sysctl-name "kern.secure_kernel"))
			(sysctl-name "machdep.ptrauth_enabled"))))
(allow system-fcntl
	(ce 3a1c 6f53 9cde))
(allow system-mac-syscall)
(allow process-exec-update-label)
