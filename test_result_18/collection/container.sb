(version 1)
(allow default)
(deny file-issue-extension
	(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
	(require-all
		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension com.apple.librarian.ubiquity-container)
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
		(require-not (extension com.apple.app-sandbox.read-write)))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
		(require-not (extension com.apple.app-sandbox.read-write)))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.app-sandbox.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.app-sandbox.read-write)))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (extension com.apple.app-sandbox.read-write)))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (extension com.apple.app-sandbox.read-write)))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-not (extension com.apple.app-sandbox.read-write)))
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(extension-class "com.apple.quicklook.readonly")
			(extension-class "com.apple.app-sandbox.read")
			(extension-class "com.apple.sharing.airdrop.readonly")
			(extension-class "com.apple.mediaserverd.read")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")
						(extension-class "com.apple.app-sandbox.read-write"))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$")
						(extension-class "com.apple.app-sandbox.read-write"))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$"))
							(require-all
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$"))))))
			(require-all
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(extension-class "com.apple.quicklook.readonly")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.app-sandbox.read-write")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.nsurlsessiond.readonly")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.wcd.readonly")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.spotlight-indexable")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))))
					(require-all
						(extension-class "com.apple.corespotlightservice.read-write")
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
						(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork")))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?"))
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$")))
					(require-all
						(extension-class "com.apple.foundation.upload-prep.read-write")
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp$")
						(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork")))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?"))
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork")))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?"))
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$")))
					(require-all
						(extension-class "com.apple.swift-playgrounds.executable")
						(require-not (entitlement-is-bool-true com.apple.private.swift-playgrounds.executable-provider)))
					(require-all
						(extension-class "com.apple.clouddocs.version")
						(require-any
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
								(require-not (signing-identifier "com.apple.icloud.drive.fileprovider")))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-not (signing-identifier "com.apple.icloud.drive.fileprovider")))))
					(require-all
						(extension-class "com.apple.StreamingUnzipService")
						(require-any
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/com.apple.HomeKit/com.apple.Home.HomeControlService/com.apple.HomeKit.SoftwareUpdate/SoftwareUpdateDocumentation/?")
								(require-not (signing-identifier "com.apple.Home.HomeControlService"))
								(extension-class "com.apple.StreamingUnzipService"))
							(require-all
								(signing-identifier "com.apple.Home")
								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/com.apple.HomeKit/com.apple.Home/com.apple.HomeKit.SoftwareUpdate/SoftwareUpdateDocumentation/?"))
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$")))
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$")
								(require-not (signing-identifier "com.apple.Home.HomeControlService"))
								(extension-class "com.apple.StreamingUnzipService"))))))
			(require-all
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$"))))
	(require-all
		(process-attribute is-apple-signed-executable)
		(extension-class "com.apple.webkit.map-executable")
		(require-not (extension com.apple.sandbox.executable)))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-not (extension com.apple.sandbox.executable))
		(require-any
			(require-all
				(signing-identifier "com.apple.mobilemail")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(entitlement-is-bool-true com.apple.media.ringtones.read-only)
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))))))
	(require-all
		(extension com.apple.sandbox.executable)
		(require-not (extension-class "com.apple.quicklook.readonly"))
		(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
		(require-not (extension-class "com.apple.nsurlsessiond.readonly"))
		(require-not (extension-class "com.apple.wcd.readonly"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension-class "com.apple.sandbox.oopjit")
		(entitlement-is-present com.apple.private.oop-jit.loader)
		(require-not (subpath "/private/var/OOPJit")))
	(require-all
		(subpath-prefix "${HOME}/Media/Books")
		(require-any
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))))
	(require-all
		(extension-class "com.apple.spotlight-indexable")
		(process-attribute is-apple-signed-executable)
		(require-not (extension com.apple.app-sandbox.read))
		(require-not (extension com.apple.app-sandbox.read-write)))
	(require-all
		(subpath-prefix "${HOME}/Media/Podcasts")
		(require-any
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(signing-identifier "com.apple.mobilemail")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(entitlement-is-bool-true com.apple.media.ringtones.read-only)
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))))))
	(require-all
		(extension com.apple.tcc.kTCCServiceMediaLibrary)
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (entitlement-is-bool-true com.apple.container2)))
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (entitlement-is-bool-true com.apple.container2)))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (entitlement-is-bool-true com.apple.container2)))
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (entitlement-is-bool-true com.apple.container2)))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (entitlement-is-bool-true com.apple.container2)))
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (entitlement-is-bool-true com.apple.container2)))))))
	(require-all
		(extension-class "com.apple.identityservices.send")
		(require-any
			(require-all
				(subpath "/private/var/tmp")
				(require-not (signing-identifier "com.apple.shortcuts"))
				(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
				(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
			(require-all
				(subpath-prefix "${PROCESS_TEMP_DIR}")
				(require-not (signing-identifier "com.apple.shortcuts"))
				(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
				(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
			(require-all
				(literal "/private/var/")
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(require-all
				(signing-identifier "com.apple.mobilemail")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(entitlement-is-bool-true com.apple.media.ringtones.read-only)
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(require-all
				(subpath-prefix "${HOME}/Media/Purchases")
				(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
				(require-not (signing-identifier "com.apple.SafariViewService"))
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.SafariViewService"))
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(signing-identifier "com.apple.Music")
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(signing-identifier "com.apple.mobilemail")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(entitlement-is-bool-true com.apple.media.ringtones.read-only)
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(subpath-prefix "${HOME}/Media/Purchases")
				(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
				(require-not (signing-identifier "com.apple.SafariViewService"))
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.SafariViewService"))
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(signing-identifier "com.apple.Music")
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
	(require-all
		(signing-identifier "com.apple.mobilemail")
		(subpath-prefix "${HOME}/Library/Mail")
		(require-not (extension-class "com.apple.quicklook.readonly"))
		(require-not (extension-class "com.apple.spotlight-indexable")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
				(require-not (signing-identifier "com.apple.SafariViewService"))
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.SafariViewService"))
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(signing-identifier "com.apple.Music")
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
	(require-all
		(extension com.apple.sandbox.application-group)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.nsurlsessiond.readonly"))
				(require-not (extension-class "com.apple.wcd.readonly"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.spotlight-indexable"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (extension-class "com.apple.quicklook.readonly"))
				(require-not (extension-class "com.apple.app-sandbox.read-write"))
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
				(require-not (extension-class "com.apple.mediaserverd.read-write"))
				(require-not (extension-class "com.apple.nsurlsessiond.readonly"))
				(require-not (extension-class "com.apple.wcd.readonly"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.spotlight-indexable"))
				(require-not (extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
						(require-not (extension com.apple.odr-assets)))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(subpath-prefix "${HOME}/Media/Purchases")
				(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
				(require-not (signing-identifier "com.apple.InCallService"))
				(signing-identifier "com.apple.FileProvider.LocalStorage")
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(subpath-prefix "${HOME}/Media/Purchases")
				(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
		(require-not (extension com.apple.odr-assets)))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
				(require-not (signing-identifier "com.apple.InCallService"))
				(signing-identifier "com.apple.FileProvider.LocalStorage")
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
				(require-not (signing-identifier "com.apple.SafariViewService"))
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.SafariViewService"))
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(signing-identifier "com.apple.Music")
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
				(require-not (signing-identifier "com.apple.SafariViewService"))
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.SafariViewService"))
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(signing-identifier "com.apple.Music")
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.safarifetcherd"))
						(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
		(require-not (extension com.apple.odr-assets)))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
				(require-not (signing-identifier "com.apple.InCallService"))
				(signing-identifier "com.apple.FileProvider.LocalStorage")
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-not (signing-identifier "com.apple.mobilemail"))
				(signing-identifier "com.apple.SharingUI.ShareSheet")
				(require-not (extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(signing-identifier "com.apple.MobileSMS")
				(require-not (subpath-prefix "${HOME}/Library/SMS/Attachments")))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilecal")
						(require-not (subpath-prefix "${HOME}/Library/Calendar")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.SharingUI.ShareSheet")
								(require-not (extension com.apple.sharing.airdrop.readonly)))
							(require-all
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(require-not (subpath-prefix "${HOME}/Library/ReplayKit")))))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilecal")
						(require-not (subpath-prefix "${HOME}/Library/Calendar")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.SharingUI.ShareSheet")
								(require-not (extension com.apple.sharing.airdrop.readonly)))
							(require-all
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(require-not (subpath-prefix "${HOME}/Library/ReplayKit")))))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(extension com.apple.assets.read)
				(require-not (subpath "/private/var/MobileAsset"))
				(require-not (subpath-prefix "${HOME}/Library/Assets")))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
				(require-not (signing-identifier "com.apple.InCallService"))
				(signing-identifier "com.apple.FileProvider.LocalStorage")
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))
			(require-all
				(extension com.apple.security.exception.files.home-relative-path.read-write)
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(extension com.apple.security.exception.files.absolute-path.read-write)
				(require-not (signing-identifier "com.apple.mobilemail")))))
	(require-all
		(extension-class "com.apple.spotlight-indexable")
		(require-any
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/Mobile Documents/[^/]+/Documents/" #"^/private/var/mobile/Library/Mobile Documents/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Library/Mobile Documents/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Library/Mobile Documents/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Library/Mobile Documents/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Library/Mobile Documents/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Library/Mobile Documents/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Library/Mobile Documents/[^/]+/Documents$")
				(subpath-prefix "${HOME}")
				(require-not (signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider"))
				(extension-class "com.apple.spotlight-indexable"))
			(require-all
				(signing-identifier "com.apple.MobileSMS")
				(require-not (subpath-prefix "${HOME}/Library/SMS/Attachments")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs")
				(require-not (signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider"))
				(extension-class "com.apple.spotlight-indexable"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
				(require-not (signing-identifier "com.apple.FileProvider.LocalStorage")))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilecal")
						(require-not (subpath-prefix "${HOME}/Library/Calendar")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.SharingUI.ShareSheet")
								(require-not (extension com.apple.sharing.airdrop.readonly)))
							(require-all
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(require-not (subpath-prefix "${HOME}/Library/ReplayKit")))))))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.FileProvider.LocalStorage")))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilecal")
						(require-not (subpath-prefix "${HOME}/Library/Calendar")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.SharingUI.ShareSheet")
								(require-not (extension com.apple.sharing.airdrop.readonly)))
							(require-all
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(require-not (subpath-prefix "${HOME}/Library/ReplayKit")))))))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
				(require-not (signing-identifier "com.apple.InCallService"))
				(signing-identifier "com.apple.FileProvider.LocalStorage")
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))))
	(require-all
		(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
		(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs")
		(require-not (extension-class "com.apple.app-sandbox.read-write"))
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.aned.read-only"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
				(require-not (signing-identifier "com.apple.InCallService"))
				(signing-identifier "com.apple.FileProvider.LocalStorage")
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(signing-identifier "com.apple.mobilemail")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-not (signing-identifier "com.apple.mobilemail")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(signing-identifier "com.apple.FileProvider.LocalStorage")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
		(literal "/private/var/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(require-all
				(signing-identifier "com.apple.MobileSMS")
				(require-not (subpath-prefix "${HOME}/Library/SMS/Attachments")))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilecal")
						(require-not (subpath-prefix "${HOME}/Library/Calendar")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.SharingUI.ShareSheet")
								(require-not (extension com.apple.sharing.airdrop.readonly)))
							(require-all
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(require-not (subpath-prefix "${HOME}/Library/ReplayKit")))))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilecal")
						(require-not (subpath-prefix "${HOME}/Library/Calendar")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.SharingUI.ShareSheet")
								(require-not (extension com.apple.sharing.airdrop.readonly)))
							(require-all
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(require-not (subpath-prefix "${HOME}/Library/ReplayKit")))))))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE)
				(require-not (extension com.apple.clouddocs.version)))))
	(require-all
		(subpath "/Library/Ringtones")
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.aned.read-only"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension com.apple.app-sandbox.read-write)
		(require-not (extension-class "com.apple.app-sandbox.read-write"))
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(signing-identifier "com.apple.FileProvider.LocalStorage")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
		(literal "/private/var/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(literal "/private/var/")
		(subpath-prefix "${HOME}")
		(extension com.apple.usernotifications.attachments.read-only)
		(require-not (regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(require-all
				(signing-identifier "com.apple.MobileSMS")
				(require-not (subpath-prefix "${HOME}/Library/SMS/Attachments")))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilecal")
						(require-not (subpath-prefix "${HOME}/Library/Calendar")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.SharingUI.ShareSheet")
								(require-not (extension com.apple.sharing.airdrop.readonly)))
							(require-all
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(require-not (subpath-prefix "${HOME}/Library/ReplayKit")))))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilecal")
						(require-not (subpath-prefix "${HOME}/Library/Calendar")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.SharingUI.ShareSheet")
								(require-not (extension com.apple.sharing.airdrop.readonly)))
							(require-all
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(require-not (subpath-prefix "${HOME}/Library/ReplayKit")))))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(extension com.apple.security.exception.files.home-relative-path.read-write)
				(require-not (extension com.apple.tcc.kTCCServicePhotos)))
			(require-all
				(extension com.apple.security.exception.files.absolute-path.read-write)
				(require-not (extension com.apple.tcc.kTCCServicePhotos)))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(signing-identifier "com.apple.FileProvider.LocalStorage")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
		(literal "/private/var/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(signing-identifier "com.apple.FileProvider.LocalStorage")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
		(literal "/private/var/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))))
	(require-all
		(extension-class "com.apple.spotlight-indexable")
		(require-any
			(require-all
				(signing-identifier "com.apple.MobileSMS")
				(require-not (subpath-prefix "${HOME}/Library/SMS/Attachments")))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilecal")
						(require-not (subpath-prefix "${HOME}/Library/Calendar")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.SharingUI.ShareSheet")
								(require-not (extension com.apple.sharing.airdrop.readonly)))
							(require-all
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(require-not (subpath-prefix "${HOME}/Library/ReplayKit")))))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilecal")
						(require-not (subpath-prefix "${HOME}/Library/Calendar")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.SharingUI.ShareSheet")
								(require-not (extension com.apple.sharing.airdrop.readonly)))
							(require-all
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(require-not (subpath-prefix "${HOME}/Library/ReplayKit")))))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(extension com.apple.tcc.kTCCServicePhotos)
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
			(require-all
				(subpath-prefix "${HOME}/Media")
				(extension com.apple.avasset.read-only)
				(require-not (extension com.apple.tcc.kTCCServicePhotos)))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(signing-identifier "com.apple.FileProvider.LocalStorage")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
		(literal "/private/var/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
				(require-not (extension com.apple.librarian.ubiquity-container))))))
(deny file-link
	(require-all
		(literal "/private/var/")
		(extension com.apple.sandbox.container)
		(require-any
			(require-all
				(signing-identifier "com.apple.shortcuts")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-any
					(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))))
			(require-all
				(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-any
					(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))))
			(require-all
				(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-any
					(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))))))
	(require-all
		(subpath-prefix "${HOME}/Library/AddressBook")
		(require-not (entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash))))
(deny file-map-executable
	(require-all
		(entitlement-is-present com.apple.developer.cellular-logging.allow)
		(require-not (literal "/AppleInternal/Library/Frameworks/CellularLogging.framework")))
	(require-all
		(extension com.apple.swift-playgrounds.executable)
		(require-not (entitlement-is-bool-true com.apple.developer.swift-playgrounds-app.development-build))
		(require-not (entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)))
	(require-all
		(entitlement-is-bool-true get-task-allow)
		(require-any
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(require-all
				(literal "/private/var/")
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(require-any
					(require-all
						(extension com.apple.sandbox.container)
						(require-any
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
							(require-all
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")))))))
	(require-all
		(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
		(literal "/private/var/")
		(extension com.apple.sandbox.container)
		(require-any
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
			(require-all
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
	(require-all
		(subpath "/Applications/AppStore.app/Frameworks")
		(require-not (signing-identifier "com.apple.MobileSMS")))
	(require-all
		(signing-identifier "com.apple.iStreamer")
		(require-not (literal "/AppleInternal/Library/Frameworks/CoreAutomation")))
	(require-all
		(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
		(require-not (extension com.apple.app-sandbox.read))))
(deny file-read*
	(literal "/usr/sbin/fairplayd")
	(require-all
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
			(signing-identifier "com.apple.mobilemail")
			(entitlement-is-bool-true com.apple.security.exception.carrier-bundle.read)
			(subpath "/System/Library/Carrier Bundles")
			(require-all
				(subpath-prefix "${HOME}/Library/Carrier Bundles")
				(require-not (signing-identifier "com.apple.mobilemail"))
				(require-not (entitlement-is-bool-true com.apple.security.exception.carrier-bundle.read)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
				(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
			(require-all
				(literal "/System/Library/Carrier Bundles/")
				(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
				(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
			(require-all
				(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?"))
				(require-not (extension com.apple.librarian.ubiquity-revision)))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.sandbox.container)
				(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork")))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?"))
				(require-not (literal))
				(literal "/private/var/")
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE)
				(require-not (extension com.apple.clouddocs.version)))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$")
						(require-any
							(subpath-prefix "${HOME}")
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(require-all
										(signing-identifier "com.apple.mobilemail")
										(require-not (regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))
									(require-all
										(signing-identifier "com.apple.Music")
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))
									(require-all
										(signing-identifier "com.apple.stocks.watchkitextension")
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))
									(require-all
										(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))
									(require-all
										(signing-identifier "com.apple.Maps")
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/")))
									(require-all
										(signing-identifier "com.apple.iBooks")
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
								(subpath-prefix "${HOME}")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServiceMediaLibrary)
										(require-not (signing-identifier "com.apple.itunesu"))
										(require-not (signing-identifier "com.apple.iBooks"))
										(require-not (entitlement-is-bool-true com.apple.container2))
										(require-any
											(require-all
												(signing-identifier "com.apple.mobilesafari")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(signing-identifier "com.apple.iBooks")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(entitlement-is-bool-true com.apple.container2)
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))))
									(require-all
										(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
										(require-not (regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist")))
									(require-all
										(extension com.apple.usernotifications.attachments.read-only)
										(require-not (regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")))))
							(require-all
								(subpath-prefix "${HOME}")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServiceMediaLibrary)
										(require-any
											(require-all
												(signing-identifier "com.apple.itunesu")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(signing-identifier "com.apple.mobilesafari")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(signing-identifier "com.apple.iBooks")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(entitlement-is-bool-true com.apple.container2)
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))))
									(require-all
										(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
										(require-not (regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist")))
									(require-all
										(extension com.apple.usernotifications.attachments.read-only)
										(require-not (regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")))))))
					(require-all
						(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
						(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
						(require-not (literal "/private/var/preferences/com.apple.security.plist"))
						(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
						(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
						(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
						(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist"))
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(require-all
										(signing-identifier "com.apple.mobilemail")
										(require-not (regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))
									(require-all
										(signing-identifier "com.apple.Music")
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))
									(require-all
										(signing-identifier "com.apple.stocks.watchkitextension")
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))
									(require-all
										(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))
									(require-all
										(signing-identifier "com.apple.Maps")
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/")))
									(require-all
										(signing-identifier "com.apple.iBooks")
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$"))
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
								(subpath-prefix "${HOME}")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServiceMediaLibrary)
										(require-not (signing-identifier "com.apple.itunesu"))
										(require-not (signing-identifier "com.apple.iBooks"))
										(require-not (entitlement-is-bool-true com.apple.container2))
										(require-any
											(require-all
												(signing-identifier "com.apple.mobilesafari")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(signing-identifier "com.apple.iBooks")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(entitlement-is-bool-true com.apple.container2)
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))))
									(require-all
										(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
										(require-not (regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist")))
									(require-all
										(extension com.apple.usernotifications.attachments.read-only)
										(require-not (regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")))))
							(require-all
								(subpath-prefix "${HOME}")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServiceMediaLibrary)
										(require-any
											(require-all
												(signing-identifier "com.apple.itunesu")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(signing-identifier "com.apple.mobilesafari")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(signing-identifier "com.apple.iBooks")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(entitlement-is-bool-true com.apple.container2)
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))))
									(require-all
										(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
										(require-not (regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist")))
									(require-all
										(extension com.apple.usernotifications.attachments.read-only)
										(require-not (regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")))))))))
			(require-all
				(entitlement-is-present com.apple.developer.cellular-logging.allow)
				(require-not (literal "/AppleInternal/Library/Frameworks/CellularLogging.framework")))
			(require-all
				(entitlement-is-present com.apple.private.oop-jit.loader)
				(require-not (subpath "/private/var/OOPJit")))
			(require-all
				(extension com.apple.swift-playgrounds.executable)
				(require-not (entitlement-is-bool-true com.apple.developer.swift-playgrounds-app.development-build))
				(require-not (entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
				(require-not (process-attribute is-apple-signed-executable)))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.plist")
				(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))
			(require-all
				(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
				(require-not (process-attribute is-apple-signed-executable)))
			(require-all
				(subpath-prefix "${HOME}/Media/Purchases")
				(require-not (signing-identifier "com.apple.mobilemail"))
				(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-only))
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-only))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Media/Purchases")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
										(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-only))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Media/Purchases")
								(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
										(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))))))
			(require-all
				(require-any (literal-prefix "${HOME}/Library/SpringBoard/LockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgroundThumbnail.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgroundThumbnaildark.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/HomeVideo.mov")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgroundThumbnail.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgroundThumbnaildark.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/.LockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.LockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.HomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.HomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalLockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalLockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalHomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalHomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockVideo.mov")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeVideo.mov"))
				(require-not (entitlement-is-bool-true com.apple.system.get-wallpaper))
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(literal-prefix "${HOME}/Library/SpringBoard/LockVideo.mov")
				(require-not (entitlement-is-bool-true com.apple.system.get-wallpaper))
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
				(extension com.apple.identityservices.deliver)
				(require-not (signing-identifier "com.apple.shortcuts"))
				(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
				(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
			(require-all
				(subpath-prefix "${HOME}/Media/Books")
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(subpath-prefix "${HOME}/Media/Podcasts")
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
				(require-not (signing-identifier "com.apple.SafariViewService")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.SafariViewService")))
			(require-all
				(extension com.apple.tcc.kTCCServiceMediaLibrary)
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (entitlement-is-bool-true com.apple.container2)))
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (entitlement-is-bool-true com.apple.container2)))))
			(require-all
				(signing-identifier "com.apple.MobileSMS")
				(require-not (subpath "/Applications/AppStore.app/Frameworks")))
			(require-all
				(signing-identifier "com.apple.Music")
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache"))))
			(require-all
				(literal-prefix "${HOME}/Library/Cookies/com.apple.itunesstored")
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(subpath-prefix "${HOME}/Library/WebClips")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.webapp")))
			(require-all
				(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(subpath-prefix "${HOME}/Library/Calendar")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(subpath-prefix "${HOME}/Library/DataAccess")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(subpath-prefix "${HOME}/Media/DCIM")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.webapp"))
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(signing-identifier "com.apple.Maps")
				(require-not (literal)))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(subpath-prefix "${HOME}/Library/Logs/Mail")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(signing-identifier "com.apple.mobilesafari")
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoPlay"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoFill"))))
			(require-all
				(signing-identifier "com.apple.PosterBoard")
				(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$")))
			(require-all
				(subpath-prefix "${HOME}/Media/Safari")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
				(require-not (signing-identifier "com.apple.InCallService")))
			(require-all
				(signing-identifier "com.apple.mobilemail")
				(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd"))
				(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.mobilemail"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mobilemail")))
				(require-all (require-not (subpath "/Library/Application Support/Mail/Plugins"))
(require-not (literal "/System/Library/PairedSyncServices/com.apple.pairedsync.mail.plist"))
(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.AutoWake.plist")))
				(require-not (subpath-prefix "${HOME}/Library/Caches/DataAccess"))
				(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")))
			(require-all
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(signing-identifier "com.apple.SharingUI.ShareSheet")
				(require-not (extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail/" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs")))
			(require-all
				(subpath-prefix "${HOME}/Library/Safari")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper")))
				(require-not (signing-identifier "com.apple.mobilemail"))
				(require-not (signing-identifier "com.apple.mobilenotes")))
			(require-all
				(signing-identifier "com.apple.FileProvider.LocalStorage")
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com.apple.PreviewShell/?")
				(require-not (signing-identifier "com.apple.PreviewShell")))
			(require-all
				(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.notes.sharedstore.lock")
(literal-prefix "${HOME}/Library/Caches/com.apple.notes.objectcreation.lock"))
				(require-not (signing-identifier "com.apple.mobilemail"))
				(require-not (signing-identifier "com.apple.mobilenotes")))
			(require-all
				(signing-identifier "com.apple.iStreamer")
				(require-not (literal "/AppleInternal/Library/Frameworks/CoreAutomation")))
			(require-all
				(require-any (signing-identifier "com.apple.chrono.WidgetRenderer-CarPlay")
(signing-identifier "com.apple.chrono.WidgetRenderer-Default"))
				(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]chrono/?")))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono$")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.PreviewShell")))
			(require-all
				(subpath-prefix "${HOME}/Library/Notes")
				(require-not (signing-identifier "com.apple.mobilemail"))
				(require-not (signing-identifier "com.apple.mobilenotes")))
			(require-all
				(signing-identifier "com.apple.Bridge")
				(require-not (subpath-prefix "${HOME}/Library/DeviceRegistry")))
			(require-all
				(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
				(require-not (extension com.apple.bulletindistributor.attachments.read-only)))
			(require-all
				(debug-mode)
				(signing-identifier "com.apple.CloudDocsDaemon.diagnostic")
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/InternalDaemon/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/db/?")))
			(require-all
				(subpath-prefix "${HOME}/Media")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(require-any (signing-identifier "com.apple.DocumentManagerUICore.SaveToFiles")
(signing-identifier "com.apple.DocumentManagerUICore.RecentsAvocado")
(signing-identifier "com.apple.DocumentManagerUICore.RecentsAppPopover"))
				(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
				(require-not (subpath "/private/var/containers/Bundle"))
				(require-not (subpath "/Developer/Applications"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Bundle/Application/?"))
				(require-not (subpath "/Applications")))
			(require-all
				(require-any (signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service"))
				(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
				(require-not (subpath "/private/var/containers/Bundle"))
				(require-not (subpath "/Developer/Applications"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Bundle/Application/?"))
				(require-not (subpath "/Applications")))
			(require-all
				(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(extension com.apple.tcc.kTCCServiceMediaLibrary)
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
						(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
					(require-all
						(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
						(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
						(require-not (literal "/private/var/preferences/com.apple.security.plist"))
						(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
						(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
						(require-all (require-not (subpath "/Library/Dictionaries"))
(require-not (subpath-prefix "${HOME}/Library/Dictionaries")))
						(require-not (literal-prefix "${HOME}/Library/Caches/DateFormats.plist"))
						(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
						(require-any
							(require-all
								(literal "/private/var/")
								(require-any
									(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
									(require-all
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
										(require-not (subpath-prefix "${HOME}"))
										(process-attribute is-apple-signed-executable)
										(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist")))
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension.plist")
										(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))))
							(require-all
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar"))
								(require-any
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist")))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Fonts"))
										(require-not (subpath "/Library/Audio/Tunings/Generic/Haptics"))
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
										(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache"))
										(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist"))
										(require-all (require-not (subpath-prefix "${HOME}/Library/VoiceServices/Assets"))
(require-not (subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice")))
										(require-not (subpath "/private/var/db/com.apple.naturallanguaged"))
										(require-not (literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
										(require-any
											(require-all
												(extension com.apple.assets.read)
												(require-not (subpath "/private/var/MobileAsset"))
												(require-not (subpath-prefix "${HOME}/Library/Assets")))
											(require-all
												(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
												(require-not (subpath "/Library/Ringtones"))
												(require-any
													(require-all
														(subpath-prefix "${HOME}/Library/ReplayKit")
														(require-not (extension com.apple.replayd.read-only)))
													(require-all
														(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
														(require-not (extension com.apple.Pasteboard-readonly)))
													(require-all
														(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
														(require-not (extension com.apple.odr-assets)))
													(require-all
														(extension com.apple.fileprovider.read-write)
														(require-all (require-not (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?")))
														(literal "/private/var/")
														(require-any
															(require-all
																(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
																(require-not (subpath-prefix "${FRONT_USER_HOME}")))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}")
																(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$"))
																(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
																(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$"))
														(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
														(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))
													(require-all
														(extension com.apple.classkit.read-write)
														(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?"))
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
														(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
													(require-all
														(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
														(require-not (extension com.apple.librarian.ubiquity-revision)))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
														(require-not (extension com.apple.librarian.ubiquity-revision)))
													(require-all
														(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
														(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
														(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
														(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
														(require-not (subpath-prefix "${FRONT_USER_HOME}")))
													(require-all
														(extension com.apple.librarian.ubiquity-container)
														(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
														(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
														(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
														(require-not (subpath-prefix "${FRONT_USER_HOME}")))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
														(require-not (extension com.apple.clouddocs.version)))
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
														(require-not (extension com.apple.clouddocs.version)))
													(require-all
														(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
														(vnode-type REGULAR-FILE)
														(require-not (extension com.apple.clouddocs.version)))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
														(vnode-type REGULAR-FILE)
														(require-not (extension com.apple.clouddocs.version)))
													(require-all
														(subpath-prefix "${HOME}/Media")
														(extension com.apple.tcc.kTCCServicePhotos)
														(require-not (subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData"))
														(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Metadata")))
														(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
														(require-not (subpath-prefix "${HOME}/Media/DCIM"))
														(require-not (literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist"))
														(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Sync"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Mutations")))
														(require-not (extension com.apple.avasset.read-only))
														(process-attribute is-platform-binary)
														(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")))
													(require-all
														(require-not (literal-prefix "${HOME}/Library/Caches/Checkpoint.plist"))
														(subpath-prefix "${HOME}/Library/FairPlay"))))))))))))
			(require-all
				(require-not (subpath-prefix "${HOME}/Library/Fonts"))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
				(require-any
					(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(extension com.apple.tcc.kTCCServiceMediaLibrary)
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))
					(require-all
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(extension com.apple.tcc.kTCCServiceAddressBook)
						(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
						(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
						(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
						(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
						(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
								(literal "/private/var/")
								(require-any
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
										(subpath-prefix "${HOME}")
										(extension com.apple.tcc.kTCCServiceMediaLibrary)
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$"))
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))))))))))
(deny file-read-data
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?")
			(require-all
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$"))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-read-metadata
	(literal "/usr/sbin/fairplayd")
	(require-all
		(require-not (literal "/private/var"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices"))
		(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-not (literal-prefix "${HOME}/Library/GameKit/Data"))
		(require-not (literal-prefix "${HOME}/Library"))
		(require-any
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.swift-playgrounds.executable)
				(require-not (entitlement-is-bool-true com.apple.developer.swift-playgrounds-app.development-build))
				(require-not (entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)))
			(require-all
				(entitlement-is-bool-true com.apple.media.ringtones.read-write)
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))
			(require-all
				(vnode-type SYMLINK)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))
			(require-all
				(extension com.apple.sandbox.container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesMetadata.plist"))
				(literal "/private/var/")
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesMetadata[.]plist$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
				(require-not (signing-identifier "com.apple.SafariViewService")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.SafariViewService")))
			(require-all
				(signing-identifier "com.apple.Music")
				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache"))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(literal-prefix "${HOME}/Library/Caches/sharedCaches")
						(require-not (signing-identifier "com.apple.Music"))
						(require-any
							(require-all
								(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
								(require-not (signing-identifier "com.apple.mobilemail")))
							(require-all
								(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
								(require-not (signing-identifier "com.apple.mobilemail")))))
					(require-all
						(require-any (literal-prefix "${HOME}/Library/com.apple.iTunesStore")
(literal-prefix "${HOME}/Library/com.apple.iTunesStore/LocalStorage"))
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (entitlement-is-bool-true com.apple.container2))
						(require-any
							(require-all
								(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
								(require-not (signing-identifier "com.apple.mobilemail")))
							(require-all
								(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
								(require-not (signing-identifier "com.apple.mobilemail")))))))
			(require-all
				(literal-prefix "${HOME}/Library/Caches/sharedCaches")
				(require-not (signing-identifier "com.apple.Music")))
			(require-all
				(signing-identifier "com.apple.mobilemail")
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-not (signing-identifier "com.apple.mobilemail")))
			(require-all
				(require-any (literal-prefix "${HOME}/Library/com.apple.iTunesStore")
(literal-prefix "${HOME}/Library/com.apple.iTunesStore/LocalStorage"))
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (signing-identifier "com.apple.PosterBoard")))
			(require-all
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.safarifetcherd"))
				(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
			(require-all
				(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs")))
			(require-all
				(signing-identifier "com.apple.FileProvider.LocalStorage")
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
				(literal "/private/var/")
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
					(signing-identifier "com.apple.mobilemail")
					(entitlement-is-bool-true com.apple.security.exception.carrier-bundle.read)
					(subpath "/System/Library/Carrier Bundles")
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
						(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
					(require-all
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?"))
						(extension com.apple.librarian.ubiquity-revision))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(extension com.apple.sandbox.container)
						(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
						(literal)
						(literal "/private/var/")
						(require-any
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
							(require-all
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+$")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(extension com.apple.clouddocs.version))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(extension com.apple.clouddocs.version))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE)
						(extension com.apple.clouddocs.version))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE)
						(extension com.apple.clouddocs.version))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$")
								(require-any
									(subpath-prefix "${HOME}")
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-any
											(require-all
												(signing-identifier "com.apple.mobilemail")
												(regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
											(require-all
												(signing-identifier "com.apple.Music")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
											(require-all
												(signing-identifier "com.apple.stocks.watchkitextension")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
											(require-all
												(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
											(require-all
												(signing-identifier "com.apple.Maps")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/"))
											(require-all
												(signing-identifier "com.apple.iBooks")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))))
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
										(subpath-prefix "${HOME}")
										(require-any
											(require-all
												(extension com.apple.tcc.kTCCServiceMediaLibrary)
												(signing-identifier "com.apple.itunesu")
												(signing-identifier "com.apple.iBooks")
												(entitlement-is-bool-true com.apple.container2)
												(require-any
													(require-all
														(signing-identifier "com.apple.mobilesafari")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(signing-identifier "com.apple.iBooks")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(entitlement-is-bool-true com.apple.container2)
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))))
											(require-all
												(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
												(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist"))
											(require-all
												(extension com.apple.usernotifications.attachments.read-only)
												(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$"))))
									(require-all
										(subpath-prefix "${HOME}")
										(require-any
											(require-all
												(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
												(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist"))
											(require-all
												(extension com.apple.tcc.kTCCServiceMediaLibrary)
												(require-any
													(require-all
														(signing-identifier "com.apple.itunesu")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(signing-identifier "com.apple.mobilesafari")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(signing-identifier "com.apple.iBooks")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(entitlement-is-bool-true com.apple.container2)
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))))
											(require-all
												(extension com.apple.usernotifications.attachments.read-only)
												(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$"))))))
							(require-all
								(literal "/private/var/preferences/com.apple.networkd.plist")
								(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
								(literal "/private/var/preferences/com.apple.security.plist")
								(literal "/private/var/db/com.apple.networkextension.tracker-info")
								(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
								(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
								(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
								(require-any
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-any
											(require-all
												(signing-identifier "com.apple.mobilemail")
												(regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
											(require-all
												(signing-identifier "com.apple.Music")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
											(require-all
												(signing-identifier "com.apple.stocks.watchkitextension")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
											(require-all
												(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
											(require-all
												(signing-identifier "com.apple.Maps")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/"))
											(require-all
												(signing-identifier "com.apple.iBooks")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))))
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
										(subpath-prefix "${HOME}")
										(require-any
											(require-all
												(extension com.apple.tcc.kTCCServiceMediaLibrary)
												(signing-identifier "com.apple.itunesu")
												(signing-identifier "com.apple.iBooks")
												(entitlement-is-bool-true com.apple.container2)
												(require-any
													(require-all
														(signing-identifier "com.apple.mobilesafari")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(signing-identifier "com.apple.iBooks")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(entitlement-is-bool-true com.apple.container2)
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))))
											(require-all
												(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
												(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist"))
											(require-all
												(extension com.apple.usernotifications.attachments.read-only)
												(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$"))))
									(require-all
										(subpath-prefix "${HOME}")
										(require-any
											(require-all
												(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
												(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist"))
											(require-all
												(extension com.apple.tcc.kTCCServiceMediaLibrary)
												(require-any
													(require-all
														(signing-identifier "com.apple.itunesu")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(signing-identifier "com.apple.mobilesafari")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(signing-identifier "com.apple.iBooks")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(entitlement-is-bool-true com.apple.container2)
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))))
											(require-all
												(extension com.apple.usernotifications.attachments.read-only)
												(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$"))))))))
					(require-all
						(entitlement-is-present com.apple.developer.cellular-logging.allow)
						(literal "/AppleInternal/Library/Frameworks/CellularLogging.framework"))
					(require-all
						(entitlement-is-present com.apple.private.oop-jit.loader)
						(subpath "/private/var/OOPJit"))
					(require-all
						(extension com.apple.swift-playgrounds.executable)
						(entitlement-is-bool-true com.apple.developer.swift-playgrounds-app.development-build)
						(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.plist")
						(entitlement-is-present com.apple.private.networkextension.configuration))
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(signing-identifier "com.apple.mobilemail")
						(entitlement-is-bool-true com.apple.media.ringtones.read-only)
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Media/Purchases")
								(entitlement-is-bool-true com.apple.media.ringtones.read-write))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(entitlement-is-bool-true com.apple.media.ringtones.read-write))
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
										(entitlement-is-bool-true com.apple.media.ringtones.read-write))))))
					(require-all
						(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(signing-identifier "com.apple.mobilemail")
								(entitlement-is-bool-true com.apple.media.ringtones.read-only)
								(require-any
									(require-all
										(subpath-prefix "${HOME}/Media/Purchases")
										(entitlement-is-bool-true com.apple.media.ringtones.read-write))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${HOME}")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
												(entitlement-is-bool-true com.apple.media.ringtones.read-write))
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
												(entitlement-is-bool-true com.apple.media.ringtones.read-write))))))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
								(signing-identifier "com.apple.mobilemail")
								(entitlement-is-bool-true com.apple.media.ringtones.read-only)
								(require-any
									(require-all
										(subpath-prefix "${HOME}/Media/Purchases")
										(entitlement-is-bool-true com.apple.media.ringtones.read-write))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${HOME}")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
												(entitlement-is-bool-true com.apple.media.ringtones.read-write))
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
												(entitlement-is-bool-true com.apple.media.ringtones.read-write))))))))
					(require-all
						(require-any (literal-prefix "${HOME}/Library/SpringBoard/LockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgroundThumbnail.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgroundThumbnaildark.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/HomeVideo.mov")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgroundThumbnail.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgroundThumbnaildark.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/.LockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.LockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.HomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.HomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalLockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalLockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalHomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalHomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockVideo.mov")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeVideo.mov"))
						(entitlement-is-bool-true com.apple.system.get-wallpaper)
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
						(extension com.apple.identityservices.deliver)
						(signing-identifier "com.apple.shortcuts")
						(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
						(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents")))
					(require-all
						(literal-prefix "${HOME}/Library/SpringBoard/LockVideo.mov")
						(entitlement-is-bool-true com.apple.system.get-wallpaper)
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
						(signing-identifier "com.apple.SafariViewService"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(signing-identifier "com.apple.SafariViewService"))
					(require-all
						(subpath-prefix "${HOME}/Media/Books")
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(signing-identifier "com.apple.MobileSMS")
						(subpath "/Applications/AppStore.app/Frameworks"))
					(require-all
						(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Media/Podcasts")
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(signing-identifier "com.apple.Music")
						(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
					(require-all
						(subpath-prefix "${HOME}/Library/Calendar")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(literal-prefix "${HOME}/Library/Cookies/com.apple.itunesstored")
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.mobilesafari")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2)
						(signing-identifier "com.apple.safarifetcherd")
						(require-any (signing-identifier "com.apple.webbookmarksd")
(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/DataAccess")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(extension com.apple.tcc.kTCCServiceMediaLibrary)
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
								(signing-identifier "com.apple.itunesu")
								(signing-identifier "com.apple.iBooks")
								(entitlement-is-bool-true com.apple.container2))
							(require-all
								(subpath-prefix "${HOME}/Media/Purchases")
								(signing-identifier "com.apple.itunesu")
								(signing-identifier "com.apple.iBooks")
								(entitlement-is-bool-true com.apple.container2))))
					(require-all
						(subpath-prefix "${HOME}/Library/WebClips")
						(signing-identifier "com.apple.mobilesafari")
						(signing-identifier "com.apple.webapp"))
					(require-all
						(signing-identifier "com.apple.Maps")
						(literal))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/Logs/Mail")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(signing-identifier "com.apple.mobilesafari")
						(signing-identifier "com.apple.webapp")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(signing-identifier "com.apple.PosterBoard")
						(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$"))
					(require-all
						(subpath-prefix "${HOME}/Library/Mail")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
						(signing-identifier "com.apple.InCallService"))
					(require-all
						(signing-identifier "com.apple.mobilesafari")
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoPlay")
(subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoFill")))
					(require-all
						(signing-identifier "com.apple.SharingUI.ShareSheet")
						(extension com.apple.sharing.airdrop.readonly))
					(require-all
						(subpath-prefix "${HOME}/Media/Safari")
						(signing-identifier "com.apple.mobilesafari")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail/" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
						(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(literal-prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
						(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.mobilemail")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mobilemail"))
						(require-any (subpath "/Library/Application Support/Mail/Plugins")
(literal "/System/Library/PairedSyncServices/com.apple.pairedsync.mail.plist")
(literal "/private/var/preferences/SystemConfiguration/com.apple.AutoWake.plist"))
						(subpath-prefix "${HOME}/Library/Caches/DataAccess")
						(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd"))
					(require-all
						(signing-identifier "com.apple.FileProvider.LocalStorage")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/"))
					(require-all
						(subpath-prefix "${HOME}/Library/Cookies")
						(signing-identifier "com.apple.mobilesafari")
						(signing-identifier "com.apple.safarifetcherd")
						(require-any (signing-identifier "com.apple.webbookmarksd")
(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com.apple.PreviewShell/?")
						(signing-identifier "com.apple.PreviewShell"))
					(require-all
						(subpath-prefix "${HOME}/Library/Safari")
						(signing-identifier "com.apple.mobilesafari")
						(signing-identifier "com.apple.safarifetcherd")
						(require-any (signing-identifier "com.apple.webbookmarksd")
(signing-identifier "com.apple.Safari.SocialHelper"))
						(signing-identifier "com.apple.mobilemail")
						(signing-identifier "com.apple.mobilenotes"))
					(require-all
						(require-any (signing-identifier "com.apple.chrono.WidgetRenderer-CarPlay")
(signing-identifier "com.apple.chrono.WidgetRenderer-Default"))
						(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]chrono/?"))
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.chrono$"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(signing-identifier "com.apple.PreviewShell"))
					(require-all
						(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.notes.sharedstore.lock")
(literal-prefix "${HOME}/Library/Caches/com.apple.notes.objectcreation.lock"))
						(signing-identifier "com.apple.mobilemail")
						(signing-identifier "com.apple.mobilenotes"))
					(require-all
						(signing-identifier "com.apple.iStreamer")
						(literal "/AppleInternal/Library/Frameworks/CoreAutomation"))
					(require-all
						(subpath-prefix "${HOME}/Library/Notes")
						(signing-identifier "com.apple.mobilemail")
						(signing-identifier "com.apple.mobilenotes"))
					(require-all
						(signing-identifier "com.apple.Bridge")
						(subpath-prefix "${HOME}/Library/DeviceRegistry"))
					(require-all
						(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
						(extension com.apple.bulletindistributor.attachments.read-only))
					(require-all
						(debug-mode)
						(signing-identifier "com.apple.CloudDocsDaemon.diagnostic")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/InternalDaemon/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/db/?"))
					(require-all
						(require-any (signing-identifier "com.apple.DocumentManagerUICore.SaveToFiles")
(signing-identifier "com.apple.DocumentManagerUICore.RecentsAvocado")
(signing-identifier "com.apple.DocumentManagerUICore.RecentsAppPopover"))
						(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
						(subpath "/private/var/containers/Bundle")
						(subpath "/Developer/Applications")
						(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Bundle/Application/?")
						(subpath "/Applications"))
					(require-all
						(subpath-prefix "${HOME}/Media")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(require-any (signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service"))
						(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
						(subpath "/private/var/containers/Bundle")
						(subpath "/Developer/Applications")
						(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Bundle/Application/?")
						(subpath "/Applications"))
					(require-all
						(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
						(require-any
							(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(extension com.apple.tcc.kTCCServiceMediaLibrary)
								(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
							(require-all
								(process-attribute is-apple-signed-executable)
								(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
							(require-all
								(literal "/private/var/preferences/com.apple.networkd.plist")
								(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
								(literal "/private/var/preferences/com.apple.security.plist")
								(subpath "/private/var/containers/Data/System/com.apple.geod")
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
								(literal "/private/var/db/com.apple.networkextension.tracker-info")
								(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
								(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
								(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
								(require-any
									(require-all
										(literal "/private/var/")
										(require-any
											(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
											(require-all
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
												(subpath-prefix "${HOME}")
												(process-attribute is-apple-signed-executable)
												(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
											(require-all
												(literal "/private/var/preferences/com.apple.networkextension.plist")
												(entitlement-is-present com.apple.private.networkextension.configuration))))
									(require-all
										(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
										(require-any
											(require-all
												(process-attribute is-apple-signed-executable)
												(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
											(require-all
												(subpath-prefix "${HOME}/Library/Fonts")
												(subpath "/Library/Audio/Tunings/Generic/Haptics")
												(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
												(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
												(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
												(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
												(subpath "/private/var/db/com.apple.naturallanguaged")
												(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist")
												(require-any
													(require-all
														(extension com.apple.assets.read)
														(subpath "/private/var/MobileAsset")
														(subpath-prefix "${HOME}/Library/Assets"))
													(require-all
														(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
														(subpath "/Library/Ringtones")
														(require-any
															(require-all
																(subpath-prefix "${HOME}/Library/ReplayKit")
																(extension com.apple.replayd.read-only))
															(require-all
																(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
																(extension com.apple.Pasteboard-readonly))
															(require-all
																(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
																(extension com.apple.odr-assets))
															(require-all
																(extension com.apple.fileprovider.read-write)
																(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
																(literal "/private/var/")
																(require-any
																	(require-all
																		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
																		(subpath-prefix "${FRONT_USER_HOME}"))
																	(require-all
																		(subpath-prefix "${FRONT_USER_HOME}")
																		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))))
															(require-all
																(literal "/private/var/")
																(subpath-prefix "${FRONT_USER_HOME}")
																(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))
															(require-all
																(extension com.apple.classkit.read-write)
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
																(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
															(require-all
																(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
																(extension com.apple.librarian.ubiquity-revision))
															(require-all
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
																(extension com.apple.librarian.ubiquity-revision))
															(require-all
																(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																(subpath-prefix "${HOME}/Library/Mobile Documents")
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																(subpath-prefix "${FRONT_USER_HOME}"))
															(require-all
																(extension com.apple.librarian.ubiquity-container)
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																(subpath-prefix "${HOME}/Library/Mobile Documents")
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																(subpath-prefix "${FRONT_USER_HOME}"))
															(require-all
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
																(extension com.apple.clouddocs.version))
															(require-all
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
																(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																(extension com.apple.clouddocs.version))
															(require-all
																(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
																(vnode-type REGULAR-FILE)
																(extension com.apple.clouddocs.version))
															(require-all
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
																(vnode-type REGULAR-FILE)
																(extension com.apple.clouddocs.version))
															(require-all
																(subpath-prefix "${HOME}/Media")
																(extension com.apple.tcc.kTCCServicePhotos)
																(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
																(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
																(subpath-prefix "${HOME}/Media/PhotoStreamsData")
																(subpath-prefix "${HOME}/Media/DCIM")
																(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
																(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
																(extension com.apple.avasset.read-only)
																(process-attribute is-platform-binary)
																(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))
															(require-all
																(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
																(subpath-prefix "${HOME}/Library/FairPlay"))))))))))))
					(require-all
						(subpath-prefix "${HOME}/Library/Fonts")
						(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
						(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
						(require-any
							(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(extension com.apple.tcc.kTCCServiceMediaLibrary)
								(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
							(require-all
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(extension com.apple.tcc.kTCCServiceAddressBook)
								(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
								(subpath-prefix "${HOME}/Library/AddressBook")
								(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
							(require-all
								(process-attribute is-apple-signed-executable)
								(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
								(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
							(require-all
								(extension com.apple.sandbox.application-group)
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
										(subpath-prefix "${FRONT_USER_HOME}"))
									(require-all
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
										(literal "/private/var/")
										(require-any
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
											(require-all
												(literal "/private/var/PersonaVolumes/")
												(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")
												(subpath-prefix "${HOME}")
												(extension com.apple.tcc.kTCCServiceMediaLibrary)
												(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))))))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(literal-prefix "${HOME}/Library/Caches")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(require-not (signing-identifier "com.apple.mobilenotes")))
					(require-all
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
						(require-not (signing-identifier "com.apple.mobilemail")))
					(require-all
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
						(require-not (signing-identifier "com.apple.mobilemail")))))
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(literal-prefix "${HOME}/Library/Caches")
				(require-not (signing-identifier "com.apple.mobilemail"))
				(require-not (signing-identifier "com.apple.mobilenotes"))))))
(deny file-read-xattr
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension com.apple.revisiond.revision))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension com.apple.revisiond.revision))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension com.apple.revisiond.revision)))))
(deny file-test-existence
	(require-all
		(require-not (process-attribute is-apple-signed-executable))
		(require-not (literal "/private/etc/passwd"))
		(require-not (literal "/private/etc/services"))
		(require-all (require-not (literal "/private/etc/group"))
(require-not (literal "/private/etc/protocols")))
		(require-any
			(require-all
				(extension com.apple.sandbox.container)
				(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork")))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?"))
				(require-not (literal))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesMetadata.plist"))
				(literal "/private/var/")
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesMetadata[.]plist$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
			(require-all
				(require-not (literal "/private/etc/hosts"))
				(require-not (literal "/private/etc/fstab"))
				(require-all (require-not (literal "/sbin/mount"))
(require-not (literal "/sbin/launchd")))
				(require-any
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(require-not (extension-path-ancestor 0))
						(require-any
							(require-any (literal "/bin/")
(literal "/sbin/")
(literal "/usr/bin/")
(literal "/usr/share/terminfo")
(literal "/private/etc/"))
							(require-all
								(signing-identifier "com.apple.mobilemail")
								(require-not (subpath-prefix "${HOME}/Media/Purchases"))
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
							(require-all
								(entitlement-is-bool-true com.apple.media.ringtones.read-only)
								(require-not (subpath-prefix "${HOME}/Media/Purchases"))
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
								(require-not (signing-identifier "com.apple.SafariViewService")))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-not (signing-identifier "com.apple.SafariViewService")))
							(require-all
								(entitlement-is-bool-true com.apple.media.ringtones.read-write)
								(require-not (subpath-prefix "${HOME}/Media/Purchases"))
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
							(require-all
								(signing-identifier "com.apple.Music")
								(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache"))))
							(require-all
								(subpath-prefix "${HOME}/Media/DCIM")
								(require-not (signing-identifier "com.apple.mobilesafari"))
								(require-not (signing-identifier "com.apple.webapp")))
							(require-all
								(subpath-prefix "${HOME}/Library/Cookies")
								(require-not (signing-identifier "com.apple.mobilesafari"))
								(require-not (signing-identifier "com.apple.safarifetcherd"))
								(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
							(require-all
								(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
								(require-not (signing-identifier "com.apple.PosterBoard")))
							(require-all
								(signing-identifier "com.apple.mobilemail")
								(require-not (subpath-prefix "${HOME}/Library/Mail")))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-not (signing-identifier "com.apple.PosterBoard")))
							(require-all
								(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
								(require-not (subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs")))
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
								(require-not (signing-identifier "com.apple.FileProvider.LocalStorage")))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")
										(require-not (signing-identifier "com.apple.FileProvider.LocalStorage")))
									(require-all
										(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
										(subpath "/usr/lib")
										(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
										(subpath "/System")
										(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
										(require-any
											(require-any (literal "/private/var/Managed Preferences/mobile/")
(literal-prefix "${HOME}/Media/Recordings/")
(literal-prefix "${HOME}/Library/Recordings/")
(literal-prefix "${HOME}/Library/SMS/")
(literal-prefix "${HOME}/Library/SpringBoard/PushStore/")
(literal-prefix "${HOME}/Library/SpringBoard/ApplicationShortcuts/")
(literal-prefix "${HOME}/Library/OnDemandResources/Manifests/")
(literal-prefix "${HOME}/Library/CallServices/Ringtones/")
(literal-prefix "${HOME}/Library/Caches/BridgeIconCache/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.bird/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.CloudDocsUI.CloudSharing/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/containers/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/unprotected/containers/"))
											(literal-prefix "${HOME}/Library/Mobile Documents/")))))
							(require-all
								(literal "/dev/urandom")
								(literal "/dev/random")
								(literal "/")))))))))
(deny file-write*
	(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
	(literal-prefix "${HOME}/Library/Preferences/com.apple.springboard.plist")
	(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
	(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(require-not (extension com.apple.revisiond.staging)))
	(require-all
		(vnode-type DIRECTORY)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(require-not (extension com.apple.revisiond.staging)))
	(require-all
		(vnode-type SYMLINK)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(require-not (extension com.apple.revisiond.staging)))
	(require-all
		(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
		(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(extension com.apple.librarian.ubiquity-container)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
		(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/SyncedPreferences/?")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-any
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$")
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(require-all
										(signing-identifier "com.apple.mobilemail")
										(require-not (regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail")))
									(require-all
										(signing-identifier "com.apple.Music")
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync")))
									(require-all
										(signing-identifier "com.apple.Maps")
										(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/")))))
							(require-all
								(literal "/private/var/")
								(extension com.apple.sandbox.container)
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(subpath-prefix "${HOME}")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServiceMediaLibrary)
										(require-any
											(require-all
												(signing-identifier "com.apple.itunesu")
												(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
												(signing-identifier "com.apple.itunesu")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(signing-identifier "com.apple.iBooks")
												(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
												(signing-identifier "com.apple.itunesu")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(entitlement-is-bool-true com.apple.container2)
												(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
												(signing-identifier "com.apple.itunesu")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(signing-identifier "com.apple.mobilesafari")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(signing-identifier "com.apple.iBooks")
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
											(require-all
												(entitlement-is-bool-true com.apple.container2)
												(require-any
													(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
													(require-all
														(vnode-type DIRECTORY)
														(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))))
									(require-all
										(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
										(require-not (regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist")))))))))))
	(require-all
		(literal "/private/var/")
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(require-not (regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail")))
					(require-all
						(signing-identifier "com.apple.Music")
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync")))
					(require-all
						(signing-identifier "com.apple.Maps")
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/")))))
			(require-all
				(literal "/private/var/")
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
			(require-all
				(subpath-prefix "${HOME}")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServiceMediaLibrary)
						(require-any
							(require-all
								(signing-identifier "com.apple.itunesu")
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
								(signing-identifier "com.apple.itunesu")
								(require-any
									(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
									(require-all
										(vnode-type DIRECTORY)
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
							(require-all
								(signing-identifier "com.apple.iBooks")
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
								(signing-identifier "com.apple.itunesu")
								(require-any
									(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
									(require-all
										(vnode-type DIRECTORY)
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
							(require-all
								(entitlement-is-bool-true com.apple.container2)
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
								(signing-identifier "com.apple.itunesu")
								(require-any
									(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
									(require-all
										(vnode-type DIRECTORY)
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
							(require-all
								(signing-identifier "com.apple.mobilesafari")
								(require-any
									(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
									(require-all
										(vnode-type DIRECTORY)
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
							(require-all
								(signing-identifier "com.apple.iBooks")
								(require-any
									(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
									(require-all
										(vnode-type DIRECTORY)
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
							(require-all
								(entitlement-is-bool-true com.apple.container2)
								(require-any
									(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
									(require-all
										(vnode-type DIRECTORY)
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))))
					(require-all
						(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
						(require-not (regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist")))))))
	(require-all
		(entitlement-is-present com.apple.private.oop-jit.loader)
		(require-not (subpath "/private/var/OOPJit")))
	(require-all
		(subpath-prefix "${HOME}/Media/Purchases")
		(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${HOME}")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
				(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))
			(require-all
				(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
				(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-write)))))
	(require-all
		(subpath-prefix "${HOME}/Media/Books")
		(require-not (signing-identifier "com.apple.itunesu"))
		(require-not (signing-identifier "com.apple.iBooks"))
		(require-not (entitlement-is-bool-true com.apple.container2)))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
		(require-not (signing-identifier "com.apple.SafariViewService")))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(require-not (signing-identifier "com.apple.SafariViewService")))
	(require-all
		(signing-identifier "com.apple.Music")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache"))))
	(require-all
		(literal-prefix "${HOME}/Library/Cookies/com.apple.itunesstored")
		(require-not (signing-identifier "com.apple.itunesu"))
		(require-not (signing-identifier "com.apple.mobilesafari"))
		(require-not (signing-identifier "com.apple.iBooks"))
		(require-not (entitlement-is-bool-true com.apple.container2))
		(require-not (signing-identifier "com.apple.safarifetcherd"))
		(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
	(require-all
		(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
		(require-not (subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs")))
	(require-all
		(subpath-prefix "${HOME}/Library/WebClips")
		(require-not (signing-identifier "com.apple.mobilesafari"))
		(require-not (signing-identifier "com.apple.webapp")))
	(require-all
		(signing-identifier "com.apple.mobilesafari")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoPlay"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoFill"))))
	(require-all
		(signing-identifier "com.apple.Maps")
		(require-not (literal)))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com.apple.PreviewShell/?")
		(require-not (signing-identifier "com.apple.PreviewShell")))
	(require-all
		(subpath-prefix "${HOME}/Library/Cookies")
		(require-not (signing-identifier "com.apple.mobilesafari"))
		(require-not (signing-identifier "com.apple.safarifetcherd"))
		(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper"))))
	(require-all
		(signing-identifier "com.apple.FileProvider.LocalStorage")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?"))
		(literal "/private/var/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/")))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(require-not (signing-identifier "com.apple.PreviewShell")))
	(require-all
		(subpath-prefix "${HOME}/Library/Safari")
		(require-not (signing-identifier "com.apple.mobilesafari"))
		(require-not (signing-identifier "com.apple.safarifetcherd"))
		(require-all (require-not (signing-identifier "com.apple.webbookmarksd"))
(require-not (signing-identifier "com.apple.Safari.SocialHelper")))
		(require-not (signing-identifier "com.apple.mobilemail"))
		(require-not (signing-identifier "com.apple.mobilenotes")))
	(require-all
		(vnode-type REGULAR-FILE)
		(entitlement-is-bool-true com.apple.Contacts.database-allow)
		(require-any
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(require-all
				(literal-prefix "${HOME}/Library/AddressBook/")
				(require-not (extension com.apple.tcc.kTCCServiceAddressBook)))))
	(require-all
		(signing-identifier "com.apple.mobilemail")
		(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.mobilemail"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mobilemail"))))
	(require-all
		(signing-identifier "com.apple.Bridge")
		(require-not (subpath-prefix "${HOME}/Library/DeviceRegistry")))
	(require-all
		(subpath-prefix "${HOME}/Library/Calendar")
		(require-not (signing-identifier "com.apple.mobilemail")))
	(require-all
		(signing-identifier "com.apple.PosterBoard")
		(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")))
		(literal "/private/var/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$")))
	(require-all
		(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.notes.sharedstore.lock")
(literal-prefix "${HOME}/Library/Caches/com.apple.notes.objectcreation.lock"))
		(require-not (signing-identifier "com.apple.mobilemail"))
		(require-not (signing-identifier "com.apple.mobilenotes")))
	(require-all
		(subpath-prefix "${HOME}/Library/Notes")
		(require-not (signing-identifier "com.apple.mobilemail"))
		(require-not (signing-identifier "com.apple.mobilenotes")))
	(require-all
		(entitlement-is-bool-true com.apple.Contacts.database-allow)
		(require-any
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(require-all
				(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
				(require-not (extension com.apple.tcc.kTCCServiceAddressBook)))))
	(require-all
		(subpath-prefix "${HOME}/Library/DataAccess")
		(require-not (signing-identifier "com.apple.mobilemail")))
	(require-all
		(extension com.apple.sandbox.application-group)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
	(require-all
		(subpath-prefix "${HOME}/Library/Logs/Mail")
		(require-not (signing-identifier "com.apple.mobilemail")))
	(require-all
		(subpath-prefix "${HOME}/Library/Mail")
		(require-not (signing-identifier "com.apple.mobilemail")))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail/" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/")
		(subpath-prefix "${FRONT_USER_HOME}")
		(require-not (signing-identifier "com.apple.mobilemail")))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")))
	(require-all
		(extension com.apple.fileprovider.read-write)
		(require-all (require-not (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?")))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(extension com.apple.classkit.read-write)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
		(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(subpath-prefix "${HOME}/Library/Mobile Documents")
		(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
		(require-not (extension com.apple.librarian.ubiquity-container)))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
		(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
		(require-not (extension com.apple.librarian.ubiquity-container)))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
		(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
		(require-not (extension com.apple.librarian.ubiquity-container)))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(extension com.apple.revisiond.staging))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
		(subpath-prefix "${FRONT_USER_HOME}")
		(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
		(require-not (extension com.apple.librarian.ubiquity-container)))
	(require-all
		(vnode-type DIRECTORY)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(extension com.apple.revisiond.staging))
	(require-all
		(vnode-type SYMLINK)
		(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
		(extension com.apple.revisiond.staging)))
(deny (with no-report) file-write-acl)
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-any (literal-prefix "${HOME}/Library/Preferences/com.apple.UIKit.plist")
(literal-prefix "${HOME}/Library/Preferences/com.apple.Accessibility.plist"))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))
		(process-attribute is-apple-signed-executable)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-any
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$")))
					(require-all
						(vnode-type DIRECTORY)
						(process-attribute is-apple-signed-executable)
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(signing-identifier "com.apple.shortcuts")
				(require-not (subpath "/private/var/tmp"))
				(require-not (subpath-prefix "${PROCESS_TEMP_DIR}")))
			(require-all
				(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
				(require-not (subpath "/private/var/tmp"))
				(require-not (subpath-prefix "${PROCESS_TEMP_DIR}")))
			(require-all
				(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
				(require-not (subpath "/private/var/tmp"))
				(require-not (subpath-prefix "${PROCESS_TEMP_DIR}")))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(literal-prefix "${HOME}/Library/Caches/sharedCaches")
				(require-not (signing-identifier "com.apple.Music")))
			(require-all
				(signing-identifier "com.apple.mobilemail")
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection"))
				(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd"))
				(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")))
			(require-all
				(require-any (literal-prefix "${HOME}/Library/com.apple.iTunesStore")
(literal-prefix "${HOME}/Library/com.apple.iTunesStore/LocalStorage"))
				(require-not (signing-identifier "com.apple.itunesu"))
				(require-not (signing-identifier "com.apple.mobilesafari"))
				(require-not (signing-identifier "com.apple.iBooks"))
				(require-not (entitlement-is-bool-true com.apple.container2)))
			(require-all
				(literal-prefix "${HOME}/Library/Caches")
				(require-not (signing-identifier "com.apple.mobilemail"))
				(require-not (signing-identifier "com.apple.mobilenotes"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")))))
	(require-all
		(require-any (literal-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(literal-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache"))
		(require-any
			(signing-identifier "com.apple.Music")
			(require-all
				(vnode-type DIRECTORY)
				(signing-identifier "com.apple.mobilemail")
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection"))
				(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd"))
				(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")))))
	(require-all
		(signing-identifier "com.apple.mobilemail")
		(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd"))
		(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices")))
	(require-all
		(literal "/private/var/")
		(extension com.apple.sandbox.application-group)
		(require-any
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Preferences$")
				(require-any
					(require-not (entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash))
					(require-all
						(vnode-type DIRECTORY)
						(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices")))))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Preferences$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$")
				(require-any
					(require-not (entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash))
					(require-all
						(vnode-type DIRECTORY)
						(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices")))))))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))))
(deny file-write-data
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))
		(require-any
			(literal-prefix "${HOME}/Library/Preferences/com.apple.springboard.plist")
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(extension com.apple.sandbox.container)
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/SyncedPreferences/?")
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-any
									(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$")
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-any
											(require-all
												(signing-identifier "com.apple.mobilemail")
												(regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail"))
											(require-all
												(signing-identifier "com.apple.Music")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync"))
											(require-all
												(signing-identifier "com.apple.Maps")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/"))))
									(require-all
										(literal "/private/var/")
										(extension com.apple.sandbox.container)
										(require-any
											(require-all
												(literal "/private/var/PersonaVolumes/")
												(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
											(require-all
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))))
									(require-all
										(subpath-prefix "${HOME}")
										(require-any
											(require-all
												(extension com.apple.tcc.kTCCServiceMediaLibrary)
												(require-any
													(require-all
														(signing-identifier "com.apple.itunesu")
														(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
														(signing-identifier "com.apple.itunesu")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(signing-identifier "com.apple.iBooks")
														(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
														(signing-identifier "com.apple.itunesu")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(entitlement-is-bool-true com.apple.container2)
														(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
														(signing-identifier "com.apple.itunesu")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(signing-identifier "com.apple.mobilesafari")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(signing-identifier "com.apple.iBooks")
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
													(require-all
														(entitlement-is-bool-true com.apple.container2)
														(require-any
															(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
															(require-all
																(vnode-type DIRECTORY)
																(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))))
											(require-all
												(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
												(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist"))))))))))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(require-all
								(signing-identifier "com.apple.mobilemail")
								(regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail"))
							(require-all
								(signing-identifier "com.apple.Music")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync"))
							(require-all
								(signing-identifier "com.apple.Maps")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/"))))
					(require-all
						(literal "/private/var/")
						(extension com.apple.sandbox.container)
						(require-any
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
							(require-all
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))))
					(require-all
						(subpath-prefix "${HOME}")
						(require-any
							(require-all
								(extension com.apple.tcc.kTCCServiceMediaLibrary)
								(require-any
									(require-all
										(signing-identifier "com.apple.itunesu")
										(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
										(signing-identifier "com.apple.itunesu")
										(require-any
											(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
											(require-all
												(vnode-type DIRECTORY)
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
									(require-all
										(signing-identifier "com.apple.iBooks")
										(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
										(signing-identifier "com.apple.itunesu")
										(require-any
											(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
											(require-all
												(vnode-type DIRECTORY)
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
									(require-all
										(entitlement-is-bool-true com.apple.container2)
										(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
										(signing-identifier "com.apple.itunesu")
										(require-any
											(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
											(require-all
												(vnode-type DIRECTORY)
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
									(require-all
										(signing-identifier "com.apple.mobilesafari")
										(require-any
											(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
											(require-all
												(vnode-type DIRECTORY)
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
									(require-all
										(signing-identifier "com.apple.iBooks")
										(require-any
											(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
											(require-all
												(vnode-type DIRECTORY)
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
									(require-all
										(entitlement-is-bool-true com.apple.container2)
										(require-any
											(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
											(require-all
												(vnode-type DIRECTORY)
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))))
							(require-all
								(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
								(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist"))))))
			(require-all
				(entitlement-is-present com.apple.private.oop-jit.loader)
				(subpath "/private/var/OOPJit"))
			(require-all
				(subpath-prefix "${HOME}/Media/Purchases")
				(entitlement-is-bool-true com.apple.media.ringtones.read-write))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
						(entitlement-is-bool-true com.apple.media.ringtones.read-write))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
						(entitlement-is-bool-true com.apple.media.ringtones.read-write))))
			(require-all
				(subpath-prefix "${HOME}/Media/Books")
				(signing-identifier "com.apple.itunesu")
				(signing-identifier "com.apple.iBooks")
				(entitlement-is-bool-true com.apple.container2))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
				(signing-identifier "com.apple.SafariViewService"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(signing-identifier "com.apple.SafariViewService"))
			(require-all
				(signing-identifier "com.apple.Music")
				(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
			(require-all
				(literal-prefix "${HOME}/Library/Cookies/com.apple.itunesstored")
				(signing-identifier "com.apple.itunesu")
				(signing-identifier "com.apple.mobilesafari")
				(signing-identifier "com.apple.iBooks")
				(entitlement-is-bool-true com.apple.container2)
				(signing-identifier "com.apple.safarifetcherd")
				(require-any (signing-identifier "com.apple.webbookmarksd")
(signing-identifier "com.apple.Safari.SocialHelper")))
			(require-all
				(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
				(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
			(require-all
				(subpath-prefix "${HOME}/Library/WebClips")
				(signing-identifier "com.apple.mobilesafari")
				(signing-identifier "com.apple.webapp"))
			(require-all
				(signing-identifier "com.apple.mobilesafari")
				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoPlay")
(subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoFill")))
			(require-all
				(signing-identifier "com.apple.Maps")
				(literal))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com.apple.PreviewShell/?")
				(signing-identifier "com.apple.PreviewShell"))
			(require-all
				(subpath-prefix "${HOME}/Library/Cookies")
				(signing-identifier "com.apple.mobilesafari")
				(signing-identifier "com.apple.safarifetcherd")
				(require-any (signing-identifier "com.apple.webbookmarksd")
(signing-identifier "com.apple.Safari.SocialHelper")))
			(require-all
				(signing-identifier "com.apple.FileProvider.LocalStorage")
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/SystemData/com[.]apple[.]PreviewShell$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(signing-identifier "com.apple.PreviewShell"))
			(require-all
				(subpath-prefix "${HOME}/Library/Safari")
				(signing-identifier "com.apple.mobilesafari")
				(signing-identifier "com.apple.safarifetcherd")
				(require-any (signing-identifier "com.apple.webbookmarksd")
(signing-identifier "com.apple.Safari.SocialHelper"))
				(signing-identifier "com.apple.mobilemail")
				(signing-identifier "com.apple.mobilenotes"))
			(require-all
				(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.notes.sharedstore.lock")
(literal-prefix "${HOME}/Library/Caches/com.apple.notes.objectcreation.lock"))
				(signing-identifier "com.apple.mobilemail")
				(signing-identifier "com.apple.mobilenotes"))
			(require-all
				(vnode-type REGULAR-FILE)
				(entitlement-is-bool-true com.apple.Contacts.database-allow)
				(require-any
					(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
					(require-all
						(literal-prefix "${HOME}/Library/AddressBook/")
						(extension com.apple.tcc.kTCCServiceAddressBook))))
			(require-all
				(signing-identifier "com.apple.mobilemail")
				(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.mobilemail")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mobilemail")))
			(require-all
				(signing-identifier "com.apple.Bridge")
				(subpath-prefix "${HOME}/Library/DeviceRegistry"))
			(require-all
				(subpath-prefix "${HOME}/Library/Calendar")
				(signing-identifier "com.apple.mobilemail"))
			(require-all
				(signing-identifier "com.apple.PosterBoard")
				(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/SystemData|Data/[^/]+/[^/]+/tmp)|Temp/Data/[^/]+/[^/]+/tmp)/com.apple.posterkit.provider$"))
			(require-all
				(subpath-prefix "${HOME}/Library/Notes")
				(signing-identifier "com.apple.mobilemail")
				(signing-identifier "com.apple.mobilenotes"))
			(require-all
				(entitlement-is-bool-true com.apple.Contacts.database-allow)
				(require-any
					(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
					(require-all
						(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
						(extension com.apple.tcc.kTCCServiceAddressBook))))
			(require-all
				(subpath-prefix "${HOME}/Library/DataAccess")
				(signing-identifier "com.apple.mobilemail"))
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(subpath-prefix "${HOME}/Library/Logs/Mail")
				(signing-identifier "com.apple.mobilemail"))
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(signing-identifier "com.apple.mobilemail"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail/" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(signing-identifier "com.apple.mobilemail"))
			(require-all
				(process-attribute is-apple-signed-executable)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
			(require-all
				(extension com.apple.fileprovider.read-write)
				(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(extension com.apple.classkit.read-write)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}")
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(extension com.apple.librarian.ubiquity-container))
			(require-all
				(vnode-type DIRECTORY)
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging))
			(require-all
				(vnode-type SYMLINK)
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging)))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(literal "/private/var/")
		(extension com.apple.sandbox.container)
		(require-any
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(require-any
					(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
					(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")))
			(require-all
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-any
					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$")
					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$")))))
	(require-all
		(extension com.apple.sandbox.container)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?"))
		(literal "/private/var/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit")))
	(require-all
		(signing-identifier "com.apple.mobilemail")
		(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd"))
		(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")))
	(require-all
		(signing-identifier "com.apple.itunesu")
		(require-not (subpath-prefix "${HOME}/Media/Podcasts"))
		(extension com.apple.tcc.kTCCServiceMediaLibrary)
		(require-not (subpath-prefix "${HOME}/Media/ManagedPurchases/Books"))
		(require-not (subpath-prefix "${HOME}/Media/Purchases")))
	(require-all
		(entitlement-is-bool-true com.apple.container2)
		(require-not (subpath-prefix "${HOME}/Media/Podcasts"))
		(extension com.apple.tcc.kTCCServiceMediaLibrary)
		(require-not (subpath-prefix "${HOME}/Media/ManagedPurchases/Books"))
		(require-not (subpath-prefix "${HOME}/Media/Purchases")))
	(require-all
		(signing-identifier "com.apple.iBooks")
		(require-not (subpath-prefix "${HOME}/Media/Podcasts"))
		(extension com.apple.tcc.kTCCServiceMediaLibrary)
		(require-not (subpath-prefix "${HOME}/Media/ManagedPurchases/Books"))
		(require-not (subpath-prefix "${HOME}/Media/Purchases")))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(subpath "/private/var/tmp")
				(require-not (signing-identifier "com.apple.shortcuts"))
				(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
				(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
			(require-all
				(subpath-prefix "${PROCESS_TEMP_DIR}")
				(require-not (signing-identifier "com.apple.shortcuts"))
				(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
				(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))))
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
		(extension com.apple.identityservices.deliver)
		(require-not (signing-identifier "com.apple.shortcuts"))
		(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
		(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents")))))
(deny generic-issue-extension
	(require-all
		(extension-class "com.apple.webkit.microphone")
		(require-not (extension com.apple.tcc.kTCCServiceMicrophone))
		(require-not (signing-identifier "com.apple.mobilesafari"))
		(require-all (require-not (signing-identifier "com.apple.SafariViewService"))
(require-not (signing-identifier "com.apple.SafariViewHostingService")))
		(extension-class "com.apple.webkit.camera")
		(extension com.apple.tcc.kTCCServiceCamera))
	(require-all
		(extension-class "com.apple.webkit.camera")
		(require-not (signing-identifier "com.apple.mobilesafari"))
		(require-all (require-not (signing-identifier "com.apple.SafariViewService"))
(require-not (signing-identifier "com.apple.SafariViewHostingService")))
		(extension-class "com.apple.webkit.camera")
		(extension com.apple.tcc.kTCCServiceCamera)))
(deny iokit-get-properties
	(require-all
		(require-all (require-not (iokit-property "OSKernelCPUType"))
(require-not (iokit-property "OSKernelCPUSubtype")))
		(require-not (iokit-property "IOClass"))
		(require-not (iokit-property "IOCFPlugInTypes"))
		(require-not (iokit-property "IOClassNameOverride"))
		(require-not (signing-identifier "com.apple.Passbook"))
		(require-not (entitlement-is-bool-true com.apple.system.get-hardware-identifiers))
		(require-not (entitlement-is-bool-true com.apple.wifi.manager-access))
		(require-any
			(require-all
				(iokit-user-client-class "IOService")
				(require-all (require-not (iokit-property "closed-loop"))
(require-not (iokit-property "jasper-camera"))
(require-not (iokit-property "auto-low-light-video"))
(require-not (iokit-property "stereo-sound-recording")))
				(require-not (iokit-property "chip-id"))
				(require-all (require-not (iokit-property "tnr-mode"))
(require-not (iokit-property "encoding"))
(require-not (iokit-property "bitrate-"))
(require-not (iokit-property "rear-slowmo"))
(require-not (iokit-property "decoding"))
(require-not (iokit-property "display-scale"))
(require-not (iokit-property "display-rotation"))
(require-not (iokit-property "navigation"))
(require-not (iokit-property "no-sdio-devices"))
(require-not (iokit-property "3d-maps"))
(require-not (iokit-property "3d-imagery"))
(require-not (iokit-property "video-cap"))
(require-not (iokit-property "video-stills"))
(require-not (iokit-property "auto-focus"))
(require-not (iokit-property "adaptive-ui"))
(require-not (iokit-property "live-effects"))
(require-not (iokit-property "live-photo-auto"))
(require-not (iokit-property "post-effects"))
(require-not (iokit-property "p3-color-space-video-recording"))
(require-not (iokit-property "mandrake-supported"))
(require-not (iokit-property "marketing-software-behavior"))
(require-not (iokit-property "supports-always-listening"))
(require-not (iokit-property "studio-light-portrait-preview")))
				(require-all (require-not (iokit-property "live-photo-capture"))
(require-not (iokit-property "camera-hdr-version"))
(require-not (iokit-property "aggregate-cam-video-zoom"))
(require-not (iokit-property "aggregate-cam-photo-zoom"))
(require-not (iokit-property "flash"))
(require-not (iokit-property "front-auto-hdr"))
(require-not (iokit-property "front-max-video-"))
(require-not (iokit-property "front-max-burst-length"))
(require-not (iokit-property "front-hdr"))
(require-not (iokit-property "front-hdr-on"))
(require-not (iokit-property "front-flash-capability"))
(require-not (iokit-property "front-burst"))
(require-not (iokit-property "front-burst-image-duration"))
(require-not (iokit-property "panorama"))
(require-not (iokit-property "pearl-camera"))
(require-not (iokit-property "portrait-lighting-strength"))
(require-not (iokit-property "pipelined-stillimage-capability"))
(require-not (iokit-property "rear-max-video-"))
(require-not (iokit-property "rear-max-slomo-video-fps-"))
(require-not (iokit-property "rear-auto-hdr"))
(require-not (iokit-property "rear-low-light-photo"))
(require-not (iokit-property "rear-hdr"))
(require-not (iokit-property "rear-hdr-on"))
(require-not (iokit-property "rear-burst"))
(require-not (iokit-property "rear-burst-image-duration"))
(require-not (iokit-property "rear-cam-telephoto-capability"))
(require-not (iokit-property "rear-cam-superwide-capability")))
				(require-not (iokit-property "software-behavior"))
				(require-any
					(require-any (iokit-property "gid-aes-key")
(iokit-property "AAPL,phandle")
(iokit-property "#address-cells")
(iokit-property "production-cert")
(iokit-property "firmware-version")
(iokit-property "image4-supported")
(iokit-property "random-seed")
(iokit-property "root-matching")
(iokit-property "uid-aes-key")
(iokit-property "unique-chip-id")
(iokit-property "board-id")
(iokit-property "bootp-response")
(iokit-property "boot-nonce")
(iokit-property "boot-manifest-hash")
(iokit-property "die-id")
(iokit-property "dram-vendor")
(iokit-property "dram-vendor-id")
(iokit-property "debug-enabled")
(iokit-property "development-cert")
(iokit-property "system-trusted")
(iokit-property "software-bundle-version")
(iokit-property "secure-boot")
(iokit-property "security-domain")
(iokit-property "mix-n-match-prevention-status")
(iokit-property "mac-address-wifi0")
(iokit-property "mac-address-ethernet0")
(iokit-property "mac-address-bluetooth0")
(iokit-property "chip-epoch")
(iokit-property "crypto-hash-method")
(iokit-property "consistent-debug-root")
(iokit-property "certificate-security-mode")
(iokit-property "certificate-production-status")
(iokit-property "effective-security-mode-ap")
(iokit-property "effective-security-mode-sep")
(iokit-property "effective-production-status-ap")
(iokit-property "effective-production-status-sep"))
					(require-all
						(require-not (iokit-property "IOSurfaceAcceleratorCapabilitiesDict"))
						(require-all (require-not (iokit-property "name"))
(require-not (iokit-property "device_type"))
(require-not (iokit-property "device-type")))
						(require-not (iokit-property "display-corner-radius"))
						(require-not (iokit-property "Protocol Characteristics")))))
			(require-all
				(iokit-property "supports-apt")
				(require-not (iokit-user-client-class "AppleARMIODevice")))
			(require-all
				(require-any (iokit-property "nfcWithRadio")
(iokit-property "supports-nfc-reader-mode"))
				(require-all (require-not (iokit-user-client-class "AppleSimpleUARTSync"))
(require-not (iokit-user-client-class "AppleStockholmControlConfig"))))
			(require-all
				(entitlement-is-present fairplay-client)
				(entitlement-is-present com.apple.private.MobileGestalt.AllowedProtectedKeys))
			(require-all
				(iokit-user-client-class "AppleJPEGDriver")
				(require-any
					(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
					(require-all
						(require-not (iokit-property "AppleJPEGNumCores"))
						(require-not (iokit-property "AppleJPEGSupportsAppleInterchangeFormats")))))
			(require-all
				(iokit-user-client-class "AppleSPUHIDDriver")
				(require-all (require-not (iokit-property "SupportHDRCompass"))
(require-not (iokit-property "SupportAlwaysOnCompass"))))
			(require-all
				(require-any (iokit-property "Product Name")
(iokit-property "kUSBProductString")
(iokit-property "idVendor")
(iokit-property "idProduct"))
				(require-not (iokit-connection "AppleSynopsysOTGDevice")))
			(require-all
				(iokit-user-client-class "IOMedia")
				(signing-identifier "com.apple.SharingViewService")
				(require-all (require-not (iokit-property "UUID"))
(require-not (iokit-property "Role"))
(require-not (iokit-property "Content")))
				(require-not (iokit-property "BSD Name")))
			(require-all
				(iokit-user-client-class "IONetworkController")
				(require-not (iokit-property "IOClass"))
				(require-all (require-not (iokit-property "IOFeatures"))
(require-not (iokit-property "IOProviderClass")))
				(require-all (require-not (iokit-property "CFBundleIdentifier"))
(require-not (iokit-property "IOLinkSpeed"))
(require-not (iokit-property "IOLinkStatus"))
(require-not (iokit-property "IOPropertyMatch"))
(require-not (iokit-property "IOMinPacketSize"))
(require-not (iokit-property "IOMaxPacketSize"))))
			(require-all
				(iokit-user-client-class "AppleAPFSVolume")
				(require-all (require-not (signing-identifier "com.apple.DocumentsApp"))
(require-not (signing-identifier "com.apple.DocumentManagerUICore.Service"))))
			(require-all
				(iokit-property "soc-generation")
				(iokit-user-client-class "IOPlatformDevice"))
			(require-all
				(iokit-user-client-class "IONetworkInterface")
				(require-all (require-not (iokit-property "NetworkConfigurationOverrides"))
(require-not (iokit-property "IsEphemeral"))
(require-not (iokit-property "InterfaceRole"))
(require-not (iokit-property "IOBuiltin"))
(require-not (iokit-property "IOLocation"))
(require-not (iokit-property "IOPrimaryInterface"))
(require-not (iokit-property "IOControllerEnabled"))
(require-not (iokit-property "IOActivePacketFilters"))
(require-not (iokit-property "IORequiredPacketFilters"))
(require-not (iokit-property "IONetworkData"))
(require-not (iokit-property "IONetworkRootType"))
(require-not (iokit-property "IO80211Band"))
(require-not (iokit-property "IO80211RSNDone"))
(require-not (iokit-property "IO80211Channel"))
(require-not (iokit-property "IO80211ChannelBandwidth"))
(require-not (iokit-property "IO80211ChannelFrequency"))
(require-not (iokit-property "IOMaxTransferUnit"))
(require-not (iokit-property "IOMediaHeaderLength"))
(require-not (iokit-property "IOMediaAddressLength"))
(require-not (iokit-property "IOInterfaceUnit"))
(require-not (iokit-property "IOInterfaceType"))
(require-not (iokit-property "IOInterfaceFlags"))
(require-not (iokit-property "IOInterfaceState"))
(require-not (iokit-property "IOInterfaceNamePrefix"))
(require-not (iokit-property "IOInterfaceExtraFlags")))
				(require-not (iokit-property "BSD Name"))
				(require-all (require-not (iokit-property "IOFeatures"))
(require-not (iokit-property "IOProviderClass"))))
			(require-all
				(iokit-property "Size")
				(require-not (iokit-user-client-class "IOMedia")))
			(require-all
				(iokit-property "DeviceProperties")
				(iokit-user-client-class "H11ANEIn"))
			(require-all
				(require-any (iokit-property "BatteryInstalled")
(iokit-property "ExternalConnected"))
				(require-not (iokit-connection "IOPMPowerSource")))
			(require-all
				(iokit-property "ane-type")
				(iokit-user-client-class "AppleARMIODevice")
				(iokit-user-client-class "IOPlatformExpertDevice"))
			(require-all
				(iokit-user-client-class "AppleARMIODevice")
				(require-all (require-not (iokit-property "camera-rear"))
(require-not (iokit-property "camera-front")))
				(require-all (require-not (iokit-property "metal-standard"))
(require-not (iokit-property "opengl-standard"))
(require-not (iokit-property "procedural-antialiasing")))
				(require-all (require-not (iokit-property "canvas-width"))
(require-not (iokit-property "canvas-height"))))
			(require-all
				(iokit-user-client-class "IOPlatformDevice")
				(require-all (require-not (iokit-property "product-description"))
(require-not (iokit-property "device-perf-memory-class"))
(require-not (iokit-property "compatible-device-fallback"))
(require-not (iokit-property "graphics-featureset-class"))
(require-not (iokit-property "graphics-featureset-fallbacks"))
(require-not (iokit-property "artwork-display-gamut"))
(require-not (iokit-property "artwork-dynamic-displaymode"))
(require-not (iokit-property "artwork-device-idiom"))
(require-not (iokit-property "artwork-device-subtype")))
				(require-not (iokit-property "product-id"))
				(require-all (require-not (iokit-property "external-hdr"))
(require-not (iokit-property "compatible-app-variant")))
				(require-not (iokit-property "dictation"))
				(require-not (iokit-property "front-cam-offset-from-center"))
				(require-not (iokit-property "iommu-present"))
				(require-all (require-not (iokit-property "thin-bezel"))
(require-not (iokit-property "large-format-phone")))
				(require-all (require-not (iokit-property "ui-pip"))
(require-not (iokit-property "compatible"))
(require-not (iokit-property "oled-display")))
				(require-not (iokit-property "device-colors"))
				(require-not (iokit-property "display-corner-radius"))
				(require-all (require-not (iokit-property "ptp-large-files"))
(require-not (iokit-property "home-button-type")))
				(require-all (require-not (iokit-property "horseman"))
(require-not (iokit-property "assistant"))
(require-not (iokit-property "gps-capable"))
(require-not (iokit-property "bluetooth-le"))
(require-not (iokit-property "magnetometer"))
(require-not (iokit-property "watch-companion"))
(require-not (iokit-property "car-integration"))
(require-not (iokit-property "offline-dictation"))
(require-not (iokit-property "location-reminders"))
(require-not (iokit-property "function-button_ringerab"))
(require-not (iokit-property "rear-cam-offset-from-center"))
(require-not (iokit-property "side-button-location"))
(require-not (iokit-property "supports-maps-optical-heading")))
				(require-not (iokit-property "artwork-scale-factor")))
			(require-all
				(require-any (iokit-property "Serial")
(iokit-property "BatteryData")
(iokit-property "battery-data"))
				(entitlement-is-bool-true com.apple.system.get-hardware-identifiers)
				(require-not (iokit-connection "IOPMPowerSource")))
			(require-all
				(require-any (iokit-property "disable-globe-map")
(iokit-property "multiuser-sessions"))
				(iokit-user-client-class "IOPlatformDevice"))
			(require-all
				(iokit-property "client")
				(iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
			(require-all
				(iokit-user-client-class "IOPlatformExpertDevice")
				(require-all (require-not (iokit-property "model"))
(require-not (iokit-property "model-number")))
				(require-all (require-not (iokit-property "platform-name"))
(require-not (iokit-property "regulatory-model-number")))
				(require-not (iokit-property "region-info")))
			(require-all
				(require-any (iokit-user-client-class "AppleOscarNub")
(iokit-user-client-class "AppleSPUHIDInterface"))
				(require-not (iokit-property "gyro-interrupt-calibration")))
			(require-all
				(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
				(require-all (require-not (iokit-property "mode"))
(require-not (iokit-property "useMag"))
(require-not (iokit-property "interval")))
				(iokit-property "QueueSize"))
			(require-all
				(iokit-property "APTDevice")
				(require-not (iokit-user-client-class "AppleCLCD")))
			(require-all
				(iokit-user-client-class "IOMobileFramebuffer")
				(require-not (iokit-property "external"))
				(require-not (iokit-property "ext-display-subsystem"))
				(require-all (require-not (iokit-property "AppleTV"))
(require-not (iokit-property "appleTV-VID0"))
(require-not (iokit-property "appleTV-VID1")))
				(require-all (require-not (iokit-property "dfr"))
(require-not (iokit-property "hdcp-hoover-protocol"))
(require-not (iokit-property "DisplayPipeStrideRequirements"))
(require-not (iokit-property "DisplayPipePlaneBaseAlignment")))
				(require-not (iokit-property "PerformanceStatistics")))
			(require-all
				(require-any (iokit-property "ForceSupported")
(iokit-property "SupportTapToWake"))
				(require-all (require-not (iokit-user-client-class "AppleMultitouchSPI"))
(require-not (iokit-user-client-class "AppleMultitouchDevice"))))
			(require-all
				(iokit-property "AppleJPEG")
				(require-not (iokit-user-client-class "AppleJPEGDriver")))
			(require-all
				(iokit-property "HEVCSupported")
				(require-not (iokit-user-client-class "AppleD5500")))
			(require-all
				(iokit-user-client-class "AppleAVD")
				(require-not (iokit-property "AVCSupported"))
				(require-not (iokit-property "HEVCCanDecodeTileToCanvas"))
				(require-not (iokit-property "LGHSupported")))
			(require-all
				(iokit-property "als-colorCfg")
				(require-all (require-not (iokit-user-client-class "AppleARMIICDevice"))
(require-not (iokit-user-client-class "AppleSPUInterface"))))
			(require-all
				(iokit-property "noMultiColorSupport")
				(require-all (require-not (iokit-user-client-class "AppleARMIICDevice"))
(require-not (iokit-user-client-class "AppleSPUInterface"))))
			(require-all
				(require-any (iokit-user-client-class "IOHIDDevice")
(iokit-user-client-class "IOHIDInterface"))
				(require-not (iokit-property "MaxInputReportSize")))
			(require-all
				(iokit-user-client-class "IOAcceleratorES")
				(require-all (require-not (iokit-property "AGXParameterBufferMaxSize"))
(require-not (iokit-property "IOGLES"))
(require-not (iokit-property "InternalStatistics"))
(require-not (iokit-property "InternalStatisticsAccm"))
(require-not (iokit-property "MetalStatisticsName"))
(require-not (iokit-property "PerformanceStatisticsAccum")))
				(require-not (iokit-property "PerformanceStatistics"))
				(require-all (require-not (iokit-property "MetalPluginName"))
(require-not (iokit-property "MetalPluginClassName"))
(require-not (iokit-property "BaseAddressAlignmentRequirement")))))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "IOGPUDeviceUserClient"))
		(require-all (require-not (iokit-user-client-class "IOAccelDevice2"))
(require-not (iokit-user-client-class "IOAccelContext2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient2")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
				(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
				(require-all (require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient")))
				(require-any
					(require-all
						(iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (entitlement-is-bool-true com.apple.container2)))
					(require-all
						(iokit-user-client-class "RootDomainUserClient")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-not (signing-identifier "com.apple.Bridge"))
						(require-not (signing-identifier "com.apple.Maps"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(require-not (iokit-user-client-class "IOSurfaceSendRight"))
						(require-all (require-not (iokit-user-client-class "IOAccelDevice"))
(require-not (iokit-user-client-class "IOAccelContext"))
(require-not (iokit-user-client-class "IOAccelSubmitter2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient")))
						(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
						(require-not (iokit-user-client-class "AGXCommandQueue"))
						(require-all (require-not (iokit-connection "IOGPU"))
(require-not (iokit-connection "IOGraphicsAccelerator2")))
						(require-not (iokit-user-client-class "AGXSharedUserClient"))
						(require-not (iokit-user-client-class "AGXDevice"))
						(require-not (extension com.apple.security.exception.iokit-user-client-class))
						(require-not (iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
						(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-not (iokit-user-client-class "AppleKeyStoreUserClient"))
						(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
						(require-any
							(require-all
								(iokit-user-client-class "AppleAPFSUserClient")
								(require-all (require-not (signing-identifier "com.apple.DocumentsApp"))
(require-not (signing-identifier "com.apple.DocumentManagerUICore.Service"))))
							(require-all
								(iokit-user-client-class "AppleSPUHIDDeviceUserClient")
								(require-not (signing-identifier "com.apple.Maps")))
							(require-all
								(iokit-user-client-class "ANEClientHintsUserClient")
								(require-not (entitlement-is-bool-true com.apple.private.ane.allow-set-client-hints)))
							(require-all
								(iokit-user-client-class "AppleMobileFileIntegrityUserClient")
								(require-not (entitlement-is-bool-true com.apple.private.amfi.can-load-cdhash)))
							(require-all
								(iokit-user-client-class "IOHIDLibUserClient")
								(process-attribute is-apple-signed-executable))))))
			(require-all
				(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
				(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
				(require-not (iokit-user-client-class "AGXDevice"))
				(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
				(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
				(require-all (require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient")))
				(require-any
					(require-all
						(iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (entitlement-is-bool-true com.apple.container2)))
					(require-all
						(iokit-user-client-class "RootDomainUserClient")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-not (signing-identifier "com.apple.Bridge"))
						(require-not (signing-identifier "com.apple.Maps"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(require-not (iokit-user-client-class "IOSurfaceSendRight"))
						(require-all (require-not (iokit-user-client-class "IOAccelDevice"))
(require-not (iokit-user-client-class "IOAccelContext"))
(require-not (iokit-user-client-class "IOAccelSubmitter2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient")))
						(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
						(require-not (iokit-user-client-class "AGXCommandQueue"))
						(require-all (require-not (iokit-connection "IOGPU"))
(require-not (iokit-connection "IOGraphicsAccelerator2")))
						(require-not (iokit-user-client-class "AGXSharedUserClient"))
						(require-not (iokit-user-client-class "AGXDevice"))
						(require-not (extension com.apple.security.exception.iokit-user-client-class))
						(require-not (iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
						(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-not (iokit-user-client-class "AppleKeyStoreUserClient"))
						(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
						(require-any
							(require-all
								(iokit-user-client-class "AppleAPFSUserClient")
								(require-all (require-not (signing-identifier "com.apple.DocumentsApp"))
(require-not (signing-identifier "com.apple.DocumentManagerUICore.Service"))))
							(require-all
								(iokit-user-client-class "AppleSPUHIDDeviceUserClient")
								(require-not (signing-identifier "com.apple.Maps")))
							(require-all
								(iokit-user-client-class "ANEClientHintsUserClient")
								(require-not (entitlement-is-bool-true com.apple.private.ane.allow-set-client-hints)))
							(require-all
								(iokit-user-client-class "AppleMobileFileIntegrityUserClient")
								(require-not (entitlement-is-bool-true com.apple.private.amfi.can-load-cdhash)))
							(require-all
								(iokit-user-client-class "IOHIDLibUserClient")
								(process-attribute is-apple-signed-executable)))))))))
(deny iokit-set-properties
	(require-all
		(iokit-property "FieldDiagsInflowInhibit")
		(iokit-user-client-class "IOPMPowerSource")
		(signing-identifier "com.apple.DiagnosticsService.Diagnostic-8187")))
(deny ipc-posix-sem*
	(require-not (entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)))
(deny ipc-posix-sem-create
	(require-not (semaphore-owner self)))
(deny ipc-posix-sem-open
	(require-not (semaphore-owner self)))
(deny ipc-posix-shm-read-data
	(require-all
		(ipc-posix-name "AppleABL.")
		(require-any
			(require-all
				(entitlement-is-bool-true inter-app-audio)
				(require-not (ipc-posix-name-regex #"^AppleABL[.]." #"^AppleABL[.].+")))
			(require-all
				(require-not (ipc-posix-name))
				(ipc-posix-name "apple.shm.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable))))
	(require-all
		(require-not (ipc-posix-name "/com.apple.AppSSO.version"))
		(require-not (ipc-posix-name))
		(ipc-posix-name "apple.shm.notification_center")
		(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))
(deny ipc-posix-shm-write-create
	(require-not (ipc-posix-name)))
(deny ipc-posix-shm-write-data
	(require-all
		(require-not (ipc-posix-name))
		(ipc-posix-name "AppleABL.")
		(ipc-posix-name-regex #"^AppleABL[.]." #"^AppleABL[.].+")
		(require-not (entitlement-is-bool-true inter-app-audio))))
(deny job-creation)
(deny mach-lookup
	(require-all
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(require-all
				(require-not (xpc-service-name "com.apple.siri.context.service"))
				(require-not (xpc-service-name "com.apple.intents.intents-helper"))
				(require-all (require-not (xpc-service-name "com.apple.OSLogService"))
(require-not (xpc-service-name "com.apple.mscamerad-xpc"))
(require-not (xpc-service-name "com.apple.ModelIO.AssetLoader"))
(require-not (xpc-service-name "com.apple.PrintKit.PrinterTool"))
(require-not (xpc-service-name "com.apple.WorkoutKitXPCService"))
(require-not (xpc-service-name "com.apple.avkit.SharedPreferences"))
(require-not (xpc-service-name "com.apple.DocumentManagerCore.Rename"))
(require-not (xpc-service-name "com.apple.uifoundation-bundle-helper"))
(require-not (xpc-service-name "com.apple.BarcodeSupport.ParsingService"))
(require-not (xpc-service-name "com.apple.datadetectors.AddToRecentsService"))
(require-not (xpc-service-name "com.apple.ContactsUI.ContactsButtonXPCService"))
(require-not (xpc-service-name "com.apple.StocksKitService"))
(require-not (xpc-service-name "com.apple.SafariFoundation.AutoFillHelper"))
(require-not (xpc-service-name "com.apple.SafariFoundation.CredentialProviderExtensionHelper")))
				(require-all (require-not (xpc-service-name "com.apple.iWorkFileFormat"))
(require-not (xpc-service-name "com.apple.CompassCalibration"))
(require-not (xpc-service-name "com.apple.CallKit.CallDirectory"))
(require-not (xpc-service-name "com.apple.SafariServices.ContentBlockerLoader")))
				(require-not (xpc-service-name "com.apple.AGXCompilerService"))
				(require-not (xpc-service-name "com.apple.MapKit.SnapshotService"))
				(require-not (xpc-service-name "com.apple.imfoundation.IMRemoteURLConnectionAgent"))
				(require-not (xpc-service-name "com.apple.textkit.nsattributedstringagent"))
				(require-not (xpc-service-name "com.apple.WebKit.WebAuthn"))
				(require-all (require-not (xpc-service-name "com.apple.WebKit.Networking"))
(require-not (xpc-service-name "com.apple.WebKit.WebContent")))
				(require-not (xpc-service-name "com.apple.accessibility.heard"))
				(require-not (xpc-service-name "com.apple.MTLCompilerService"))
				(require-not (xpc-service-name "com.apple.accessibility.AccessibilityUIServer"))
				(require-any
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(require-not (global-name "com.apple.nanoprefsync"))
						(require-not (global-name "com.apple.routined.registration"))
						(require-not (global-name "com.apple.backupd"))
						(require-not (global-name "com.apple.sharingd.nsxpc"))
						(require-not (global-name "com.apple.bulletindistributord.server"))
						(require-not (global-name "com.apple.identityservicesd.embedded.auth"))
						(require-not (global-name "com.apple.mobilemail"))
						(require-not (global-name "com.apple.harvestd.manager")))
					(require-all
						(require-not (xpc-service-name "com.apple.coremedia.decompressionsession.xpc"))
						(require-not (xpc-service-name "com.apple.coremedia.compressionsession.xpc"))
						(require-not (xpc-service-name "com.apple.WebKit.GPU"))
						(require-not (xpc-service-name "com.apple.WebKit.WebContent.CaptivePortal"))
						(require-not (extension com.apple.security.exception.mach-lookup.global-name))
						(require-not (extension com.apple.security.exception.mach-lookup.local-name))
						(require-any
							(require-all
								(global-name "com.apple.ak.auth.xpc")
								(require-not (process-attribute is-apple-signed-executable))
								(require-not (entitlement-is-bool-true com.apple.authkit.client))
								(require-not (entitlement-is-bool-true com.apple.authkit.client.private))
								(require-not (entitlement-is-bool-true com.apple.authkit.client.internal)))
							(require-all
								(global-name "com.apple.ak.anisette.xpc")
								(require-not (process-attribute is-apple-signed-executable))
								(require-not (entitlement-is-bool-true com.apple.authkit.client))
								(require-not (entitlement-is-bool-true com.apple.authkit.client.private))
								(require-not (entitlement-is-bool-true com.apple.authkit.client.internal)))
							(require-all
								(global-name "com.apple.networkd_privileged")
								(require-not (entitlement-is-bool-true com.apple.networkd.modify_settings))
								(require-not (entitlement-is-bool-true com.apple.networkd.disable_opportunistic))
								(require-not (entitlement-is-bool-true com.apple.networkd.advisory_socket))
								(require-not (entitlement-is-bool-true com.apple.networkd_privileged))
								(require-not (entitlement-is-bool-true com.apple.networkd.persistent_interface)))
							(require-all
								(xpc-service-name "com.apple.imdpersistence.IMDPersistenceAgent")
								(require-not (entitlement-is-bool-true com.apple.private.imcore.imdpersistence.database-access))
								(require-not (entitlement-is-bool-true com.apple.private.imcore.imdpersistence.data-detection-access ))
								(require-not (entitlement-is-bool-true com.apple.private.imcore.spi.database-access)))
							(require-all
								(entitlement-is-bool-true com.apple.developer.networking.multicast)
								(require-not (global-name "com.apple.securityd"))
								(require-not (global-name "com.apple.trustd"))
								(require-not (global-name "com.apple.commcenter.xpc"))
								(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
								(require-not (global-name "com.apple.usymptomsd"))
								(require-not (global-name "com.apple.symptomsd"))
								(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
								(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
								(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
								(require-not (global-name "com.apple.SystemConfiguration.helper"))
								(require-not (global-name "com.apple.SystemConfiguration.configd"))
								(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
								(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability")))
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.osanalytics.osanalyticshelper"))
								(require-all (require-not (global-name "com.apple.ReportCrash"))
(require-not (global-name "com.apple.ReportCrash.SafetyNet"))
(require-not (global-name "com.apple.ReportCrash.StackShot"))
(require-not (global-name "com.apple.ReportCrash.DirectoryService"))))
							(require-all
								(global-name "com.apple.replayd")
								(process-attribute unknown))
							(require-all
								(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
								(require-not (entitlement-is-bool-true com.apple.private.ids.remoteurlconnection))
								(require-not (entitlement-is-bool-true com.apple.private.imcore.imremoteurlconnection)))
							(require-all
								(global-name "com.apple.bulletinboard.utilitiesconnection")
								(require-not (entitlement-is-bool-true com.apple.bulletinboard.utilities)))
							(require-all
								(xpc-service-name "com.apple.StreamingUnzipService")
								(require-all (require-not (signing-identifier "com.apple.Home"))
(require-not (signing-identifier "com.apple.Home.HomeControlService"))))
							(require-all
								(global-name "com.apple.bulletinboard.systemstateconnection")
								(require-not (entitlement-is-bool-true com.apple.bulletinboard.systemstate)))
							(require-all
								(global-name "com.apple.bulletinboard.settingsconnection")
								(require-not (entitlement-is-bool-true com.apple.bulletinboard.settings)))
							(require-all
								(global-name "com.apple.lsd.xpc")
								(require-not (signing-identifier "com.apple.mobilesafari")))
							(require-all
								(global-name "com.apple.bulletinboard.observerconnection")
								(require-not (entitlement-is-bool-true com.apple.bulletinboard.observer)))
							(require-all
								(global-name "com.apple.safarifetcherd")
								(require-not (signing-identifier "com.apple.mobilesafari")))
							(require-all
								(local-name "com.apple.iphone.axserver")
								(require-not (entitlement-is-bool-true com.apple.accessibility.api)))
							(require-all
								(signing-identifier "com.apple.Maps")
								(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
								(require-not (global-name "com.apple.iokit.powerdxpc"))
								(require-not (global-name "com.apple.PowerManagement.control"))
								(require-not (global-name "com.apple.nanomaps.xpc.Navigation"))
								(require-not (global-name "com.apple.nanomaps.xpc.GeoServices.Navigation"))
								(require-not (global-name "com.apple.assistant.analytics")))
							(require-all
								(global-name "com.apple.icfcallserver")
								(require-not (entitlement-is-bool-true com.apple.private.icfcallserver)))
							(require-all
								(global-name "com.apple.mobile.keybagd.xpc")
								(require-not (signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI"))
								(require-any
									(require-all
										(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
										(require-any
											(require-all
												(global-name "com.apple.SafetyKit")
												(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.weatherkit.authservice")
												(require-not (entitlement-is-present com.apple.developer.weatherkit))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(debug-mode)
												(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
											(require-all
												(global-name "com.apple.merchantd.identity")
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.gputools.service")
												(require-not (debug-mode))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.seserviced.credential.manager")
												(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.merchantd.discovery")
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.callkit.networkextension.voip")
												(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.financed.service.coredatastore")
												(require-not (entitlement-is-present com.apple.finance.private))
												(require-not (entitlement-is-present com.apple.developer.financekit))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.MomentsUIService")
												(require-not (entitlement-is-present com.apple.developer.journal.allow))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.assessmentagent")
												(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.SharedWebCredentials"))
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.ThreadNetwork.xpc")
												(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.messages.critical-messaging")
												(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.coreidvd.digital-presentment.xpc")
												(require-any
													(require-all
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.iconservices"))
														(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
														(require-not (xpc-service-name "com.apple.audio.analytics.service"))
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
														(require-not (xpc-service-name "com.apple.tonelibraryd"))
														(require-any
															(global-name "com.apple.ckdiscretionaryd.debug")
															(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
															(global-name "com.apple.cloudkit.partlycloudd")
															(require-all
																(xpc-service-name-regex #".+")
																(require-any
																	(require-all
																		(global-name "com.apple.system.notification_center")
																		(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
																	(require-all
																		(global-name "com.apple.lsd.openurl")
																		(global-name "com.apple.tccd")
																		(global-name "com.apple.lsd.advertisingidentifiers"))))
															(require-all
																(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
																(require-not (global-name "com.apple.uikit.viewservice.")))))
													(require-all
														(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
														(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
											(require-all
												(global-name "com.apple.ExposureNotification")
												(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.seserviced.session")
												(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
												(require-any
													(require-all
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.iconservices"))
														(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
														(require-not (xpc-service-name "com.apple.audio.analytics.service"))
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
														(require-not (xpc-service-name "com.apple.tonelibraryd"))
														(require-any
															(global-name "com.apple.ckdiscretionaryd.debug")
															(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
															(global-name "com.apple.cloudkit.partlycloudd")
															(require-all
																(xpc-service-name-regex #".+")
																(require-any
																	(require-all
																		(global-name "com.apple.system.notification_center")
																		(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
																	(require-all
																		(global-name "com.apple.lsd.openurl")
																		(global-name "com.apple.tccd")
																		(global-name "com.apple.lsd.advertisingidentifiers"))))
															(require-all
																(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
																(require-not (global-name "com.apple.uikit.viewservice.")))))
													(require-all
														(debug-mode)
														(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
											(require-all
												(require-not (global-name "com.apple.sharingd.nsxpc"))
												(require-not (global-name "com.apple.vibrationmanagerd"))
												(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
												(require-not (global-name "com.apple.passd.library"))
												(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
												(require-not (global-name "com.apple.mediaserverd"))
												(require-not (global-name "com.apple.voiceservices.tts"))
												(require-not (global-name "com.apple.mobileasset.autoasset"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
												(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
												(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
												(require-not (global-name "com.apple.accessories.transport-server"))
												(require-not (global-name "com.apple.librariand"))
												(require-not (global-name "com.apple.audio.AudioConverterService"))
												(require-not (global-name "com.apple.mobileassetd"))
												(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
												(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
												(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
												(require-not (global-name "com.apple.UIKit.statusbarserver"))
												(require-not (global-name "com.apple.bird"))
												(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
												(require-not (global-name "com.apple.assistant.dictation"))
												(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
												(require-not (global-name "com.apple.nanoprefsync"))
												(require-not (global-name "com.apple.DeviceAccess.xpc"))
												(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
												(require-not (global-name "com.apple.TextInput.lexicon-server"))
												(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
												(require-not (global-name "com.apple.audio.AudioQueueServer"))
												(require-not (global-name "com.apple.mediaremoted.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
												(require-not (global-name "com.apple.backboard.display.services"))
												(require-not (global-name "com.apple.FileCoordination"))
												(require-not (global-name "com.apple.CARenderServer"))
												(require-not (global-name "com.apple.seserviced.passkit-extensions"))
												(require-not (global-name "com.apple.audio.AudioSession"))
												(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
												(require-not (global-name "com.apple.cloudasset.cloudd"))
												(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
												(require-not (global-name "com.apple.TextInput.preferences"))
												(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
												(require-not (global-name "com.apple.mobileassetd.v2"))
												(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
												(require-not (global-name "com.apple.bird.token"))
												(require-not (global-name "com.apple.assetsd.changehub"))
												(require-not (global-name "com.apple.linkd.transcript"))
												(require-not (global-name "com.apple.revisiond"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
												(require-not (global-name "com.apple.springboard.backgroundappservices"))
												(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
												(require-not (global-name "com.apple.iconservices"))
												(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
												(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
												(require-not (global-name "com.apple.ckdiscretionaryd"))
												(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
												(require-not (global-name "com.apple.accessories.externalaccessory-server"))
												(require-not (global-name "com.apple.springboard.services"))
												(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
												(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.photos.service"))
												(require-not (global-name "com.apple.accessibility.gax.backboard"))
												(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
												(require-not (global-name "com.apple.itunesstored.xpc"))
												(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
												(require-not (global-name "com.apple.backboard.hid.services"))
												(require-not (global-name "com.apple.voiceservices.keepalive"))
												(require-not (global-name "com.apple.assistant.analytics"))
												(require-not (global-name "com.apple.coremedia.videocompositor"))
												(require-not (global-name "com.apple.FileProvider"))
												(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
												(require-not (global-name "com.apple.frontboard.workspace"))
												(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
												(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.pasteboard.pasted"))
												(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
												(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
												(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
												(require-not (global-name "com.apple.audio.AURemoteIOServer"))
												(require-not (global-name "com.apple.coremedia.admin"))
												(require-not (global-name "com.apple.cloudd"))
												(require-not (global-name "com.apple.coremedia.asset.xpc"))
												(require-not (global-name "com.apple.iohideventsystem"))
												(require-not (global-name "com.apple.pegasus"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
												(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
												(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
												(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
												(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
												(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
												(require-not (global-name "com.apple.privacyaccountingd"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
												(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.iphone.axserver-systemwide"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
												(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
												(require-not (global-name "com.apple.dt.automationmode.reader"))
												(require-not (global-name "com.apple.TextInput"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
												(require-not (global-name "com.apple.TextInput.image-cache-server"))
												(require-not (global-name "com.apple.coremedia.sandboxserver"))
												(require-not (global-name "com.apple.audio.hapticd"))
												(require-not (global-name "com.apple.timesync.ptp.manager"))
												(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
												(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
												(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
												(require-not (global-name "com.apple.coremedia.player.xpc"))
												(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
												(require-not (global-name "com.apple.audioanalyticsd"))
												(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
												(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
												(require-not (global-name "com.apple.linkd.autoShortcut"))
												(require-not (global-name "com.apple.backboard.hid-services.xpc"))
												(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
												(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
												(require-not (global-name "com.apple.UIKit.pasteboardd"))
												(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
												(require-not (global-name "com.apple.usernotifications.listener"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
												(require-not (global-name "com.apple.coremedia.sts"))
												(require-not (global-name "com.apple.NPKCompanionAgent.library"))
												(require-not (global-name "com.apple.itunescloudd.xpc"))
												(require-not (global-name "com.apple.callkit.callcontrollerhost"))
												(require-not (global-name "com.apple.frontboard.systemappservices"))
												(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
												(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
												(require-not (global-name "com.apple.TextInput.rdt"))
												(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
												(require-not (local-name "com.apple.assistant.contextprovider."))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))))
									(require-all
										(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
										(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
										(require-not (global-name "com.apple.spotlight.IndexAgent"))
										(require-not (global-name "com.apple.ABDatabaseDoctor"))
										(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
										(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
										(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
										(require-not (extension com.apple.sandbox.application-group))
										(require-any
											(require-all
												(global-name "com.apple.SafetyKit")
												(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.weatherkit.authservice")
												(require-not (entitlement-is-present com.apple.developer.weatherkit))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(debug-mode)
												(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
											(require-all
												(global-name "com.apple.merchantd.identity")
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.gputools.service")
												(require-not (debug-mode))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.seserviced.credential.manager")
												(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.merchantd.discovery")
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.callkit.networkextension.voip")
												(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.financed.service.coredatastore")
												(require-not (entitlement-is-present com.apple.finance.private))
												(require-not (entitlement-is-present com.apple.developer.financekit))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.MomentsUIService")
												(require-not (entitlement-is-present com.apple.developer.journal.allow))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.assessmentagent")
												(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.SharedWebCredentials"))
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.ThreadNetwork.xpc")
												(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.messages.critical-messaging")
												(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.coreidvd.digital-presentment.xpc")
												(require-any
													(require-all
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.iconservices"))
														(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
														(require-not (xpc-service-name "com.apple.audio.analytics.service"))
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
														(require-not (xpc-service-name "com.apple.tonelibraryd"))
														(require-any
															(global-name "com.apple.ckdiscretionaryd.debug")
															(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
															(global-name "com.apple.cloudkit.partlycloudd")
															(require-all
																(xpc-service-name-regex #".+")
																(require-any
																	(require-all
																		(global-name "com.apple.system.notification_center")
																		(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
																	(require-all
																		(global-name "com.apple.lsd.openurl")
																		(global-name "com.apple.tccd")
																		(global-name "com.apple.lsd.advertisingidentifiers"))))
															(require-all
																(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
																(require-not (global-name "com.apple.uikit.viewservice.")))))
													(require-all
														(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
														(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
											(require-all
												(global-name "com.apple.ExposureNotification")
												(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.seserviced.session")
												(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
												(require-any
													(require-all
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.iconservices"))
														(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
														(require-not (xpc-service-name "com.apple.audio.analytics.service"))
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
														(require-not (xpc-service-name "com.apple.tonelibraryd"))
														(require-any
															(global-name "com.apple.ckdiscretionaryd.debug")
															(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
															(global-name "com.apple.cloudkit.partlycloudd")
															(require-all
																(xpc-service-name-regex #".+")
																(require-any
																	(require-all
																		(global-name "com.apple.system.notification_center")
																		(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
																	(require-all
																		(global-name "com.apple.lsd.openurl")
																		(global-name "com.apple.tccd")
																		(global-name "com.apple.lsd.advertisingidentifiers"))))
															(require-all
																(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
																(require-not (global-name "com.apple.uikit.viewservice.")))))
													(require-all
														(debug-mode)
														(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
											(require-all
												(require-not (global-name "com.apple.sharingd.nsxpc"))
												(require-not (global-name "com.apple.vibrationmanagerd"))
												(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
												(require-not (global-name "com.apple.passd.library"))
												(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
												(require-not (global-name "com.apple.mediaserverd"))
												(require-not (global-name "com.apple.voiceservices.tts"))
												(require-not (global-name "com.apple.mobileasset.autoasset"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
												(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
												(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
												(require-not (global-name "com.apple.accessories.transport-server"))
												(require-not (global-name "com.apple.librariand"))
												(require-not (global-name "com.apple.audio.AudioConverterService"))
												(require-not (global-name "com.apple.mobileassetd"))
												(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
												(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
												(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
												(require-not (global-name "com.apple.UIKit.statusbarserver"))
												(require-not (global-name "com.apple.bird"))
												(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
												(require-not (global-name "com.apple.assistant.dictation"))
												(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
												(require-not (global-name "com.apple.nanoprefsync"))
												(require-not (global-name "com.apple.DeviceAccess.xpc"))
												(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
												(require-not (global-name "com.apple.TextInput.lexicon-server"))
												(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
												(require-not (global-name "com.apple.audio.AudioQueueServer"))
												(require-not (global-name "com.apple.mediaremoted.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
												(require-not (global-name "com.apple.backboard.display.services"))
												(require-not (global-name "com.apple.FileCoordination"))
												(require-not (global-name "com.apple.CARenderServer"))
												(require-not (global-name "com.apple.seserviced.passkit-extensions"))
												(require-not (global-name "com.apple.audio.AudioSession"))
												(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
												(require-not (global-name "com.apple.cloudasset.cloudd"))
												(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
												(require-not (global-name "com.apple.TextInput.preferences"))
												(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
												(require-not (global-name "com.apple.mobileassetd.v2"))
												(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
												(require-not (global-name "com.apple.bird.token"))
												(require-not (global-name "com.apple.assetsd.changehub"))
												(require-not (global-name "com.apple.linkd.transcript"))
												(require-not (global-name "com.apple.revisiond"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
												(require-not (global-name "com.apple.springboard.backgroundappservices"))
												(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
												(require-not (global-name "com.apple.iconservices"))
												(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
												(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
												(require-not (global-name "com.apple.ckdiscretionaryd"))
												(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
												(require-not (global-name "com.apple.accessories.externalaccessory-server"))
												(require-not (global-name "com.apple.springboard.services"))
												(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
												(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.photos.service"))
												(require-not (global-name "com.apple.accessibility.gax.backboard"))
												(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
												(require-not (global-name "com.apple.itunesstored.xpc"))
												(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
												(require-not (global-name "com.apple.backboard.hid.services"))
												(require-not (global-name "com.apple.voiceservices.keepalive"))
												(require-not (global-name "com.apple.assistant.analytics"))
												(require-not (global-name "com.apple.coremedia.videocompositor"))
												(require-not (global-name "com.apple.FileProvider"))
												(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
												(require-not (global-name "com.apple.frontboard.workspace"))
												(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
												(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.pasteboard.pasted"))
												(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
												(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
												(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
												(require-not (global-name "com.apple.audio.AURemoteIOServer"))
												(require-not (global-name "com.apple.coremedia.admin"))
												(require-not (global-name "com.apple.cloudd"))
												(require-not (global-name "com.apple.coremedia.asset.xpc"))
												(require-not (global-name "com.apple.iohideventsystem"))
												(require-not (global-name "com.apple.pegasus"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
												(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
												(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
												(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
												(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
												(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
												(require-not (global-name "com.apple.privacyaccountingd"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
												(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.iphone.axserver-systemwide"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
												(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
												(require-not (global-name "com.apple.dt.automationmode.reader"))
												(require-not (global-name "com.apple.TextInput"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
												(require-not (global-name "com.apple.TextInput.image-cache-server"))
												(require-not (global-name "com.apple.coremedia.sandboxserver"))
												(require-not (global-name "com.apple.audio.hapticd"))
												(require-not (global-name "com.apple.timesync.ptp.manager"))
												(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
												(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
												(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
												(require-not (global-name "com.apple.coremedia.player.xpc"))
												(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
												(require-not (global-name "com.apple.audioanalyticsd"))
												(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
												(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
												(require-not (global-name "com.apple.linkd.autoShortcut"))
												(require-not (global-name "com.apple.backboard.hid-services.xpc"))
												(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
												(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
												(require-not (global-name "com.apple.UIKit.pasteboardd"))
												(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
												(require-not (global-name "com.apple.usernotifications.listener"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
												(require-not (global-name "com.apple.coremedia.sts"))
												(require-not (global-name "com.apple.NPKCompanionAgent.library"))
												(require-not (global-name "com.apple.itunescloudd.xpc"))
												(require-not (global-name "com.apple.callkit.callcontrollerhost"))
												(require-not (global-name "com.apple.frontboard.systemappservices"))
												(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
												(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
												(require-not (global-name "com.apple.TextInput.rdt"))
												(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
												(require-not (local-name "com.apple.assistant.contextprovider."))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))))))
							(require-all
								(global-name "com.apple.nanoprefsync")
								(require-all (require-not (signing-identifier "com.apple.Health"))
(require-not (signing-identifier "com.apple.PassbookUIService")))
								(require-not (signing-identifier "com.apple.iBooks"))
								(require-not (signing-identifier "com.apple.stocks.watchkitextension")))
							(require-all
								(global-name "com.apple.managedconfiguration.profiled")
								(require-not (entitlement-is-bool-true com.apple.managedconfiguration.profiled-access)))
							(require-all
								(global-name "com.apple.FileCoordination")
								(require-all (require-not (signing-identifier "com.apple.Health"))
(require-not (signing-identifier "com.apple.PassbookUIService")))
								(require-not (signing-identifier "com.apple.iBooks"))
								(require-not (signing-identifier "com.apple.stocks.watchkitextension")))
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.aps.alertprovider.xpc"))
								(require-not (global-name "com.apple.mobile.keybagd.UserManager.xpc"))
								(require-not (global-name "com.apple.coreduetd"))
								(require-not (global-name "com.apple.mobile.keybagd.xpc"))
								(require-not (global-name "com.apple.unfreed"))
								(require-not (global-name "com.apple.lskdd"))
								(require-not (global-name "com.apple.mobile.usermanagerd.xpc")))
							(require-all
								(signing-identifier "com.apple.Bridge")
								(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
								(require-not (global-name "com.apple.iokit.powerdxpc"))
								(require-not (global-name "com.apple.PowerManagement.control")))
							(require-all
								(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
								(require-any
									(require-all
										(global-name "com.apple.SafetyKit")
										(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.weatherkit.authservice")
										(require-not (entitlement-is-present com.apple.developer.weatherkit))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(debug-mode)
										(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
									(require-all
										(global-name "com.apple.merchantd.identity")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.gputools.service")
										(require-not (debug-mode))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.credential.manager")
										(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.merchantd.discovery")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.callkit.networkextension.voip")
										(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.financed.service.coredatastore")
										(require-not (entitlement-is-present com.apple.finance.private))
										(require-not (entitlement-is-present com.apple.developer.financekit))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.MomentsUIService")
										(require-not (entitlement-is-present com.apple.developer.journal.allow))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.assessmentagent")
										(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.SharedWebCredentials"))
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.ThreadNetwork.xpc")
										(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.messages.critical-messaging")
										(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.coreidvd.digital-presentment.xpc")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
												(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
									(require-all
										(global-name "com.apple.ExposureNotification")
										(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.session")
										(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(debug-mode)
												(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
									(require-all
										(require-not (global-name "com.apple.sharingd.nsxpc"))
										(require-not (global-name "com.apple.vibrationmanagerd"))
										(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
										(require-not (global-name "com.apple.passd.library"))
										(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
										(require-not (global-name "com.apple.mediaserverd"))
										(require-not (global-name "com.apple.voiceservices.tts"))
										(require-not (global-name "com.apple.mobileasset.autoasset"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
										(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
										(require-not (global-name "com.apple.accessories.transport-server"))
										(require-not (global-name "com.apple.librariand"))
										(require-not (global-name "com.apple.audio.AudioConverterService"))
										(require-not (global-name "com.apple.mobileassetd"))
										(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
										(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
										(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
										(require-not (global-name "com.apple.UIKit.statusbarserver"))
										(require-not (global-name "com.apple.bird"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
										(require-not (global-name "com.apple.assistant.dictation"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
										(require-not (global-name "com.apple.nanoprefsync"))
										(require-not (global-name "com.apple.DeviceAccess.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
										(require-not (global-name "com.apple.TextInput.lexicon-server"))
										(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
										(require-not (global-name "com.apple.audio.AudioQueueServer"))
										(require-not (global-name "com.apple.mediaremoted.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
										(require-not (global-name "com.apple.backboard.display.services"))
										(require-not (global-name "com.apple.FileCoordination"))
										(require-not (global-name "com.apple.CARenderServer"))
										(require-not (global-name "com.apple.seserviced.passkit-extensions"))
										(require-not (global-name "com.apple.audio.AudioSession"))
										(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
										(require-not (global-name "com.apple.cloudasset.cloudd"))
										(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
										(require-not (global-name "com.apple.TextInput.preferences"))
										(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
										(require-not (global-name "com.apple.mobileassetd.v2"))
										(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
										(require-not (global-name "com.apple.bird.token"))
										(require-not (global-name "com.apple.assetsd.changehub"))
										(require-not (global-name "com.apple.linkd.transcript"))
										(require-not (global-name "com.apple.revisiond"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
										(require-not (global-name "com.apple.springboard.backgroundappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
										(require-not (global-name "com.apple.iconservices"))
										(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
										(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
										(require-not (global-name "com.apple.ckdiscretionaryd"))
										(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
										(require-not (global-name "com.apple.accessories.externalaccessory-server"))
										(require-not (global-name "com.apple.springboard.services"))
										(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
										(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.photos.service"))
										(require-not (global-name "com.apple.accessibility.gax.backboard"))
										(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
										(require-not (global-name "com.apple.itunesstored.xpc"))
										(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
										(require-not (global-name "com.apple.backboard.hid.services"))
										(require-not (global-name "com.apple.voiceservices.keepalive"))
										(require-not (global-name "com.apple.assistant.analytics"))
										(require-not (global-name "com.apple.coremedia.videocompositor"))
										(require-not (global-name "com.apple.FileProvider"))
										(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
										(require-not (global-name "com.apple.frontboard.workspace"))
										(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
										(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.pasteboard.pasted"))
										(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
										(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
										(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
										(require-not (global-name "com.apple.audio.AURemoteIOServer"))
										(require-not (global-name "com.apple.coremedia.admin"))
										(require-not (global-name "com.apple.cloudd"))
										(require-not (global-name "com.apple.coremedia.asset.xpc"))
										(require-not (global-name "com.apple.iohideventsystem"))
										(require-not (global-name "com.apple.pegasus"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
										(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
										(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
										(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
										(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
										(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
										(require-not (global-name "com.apple.privacyaccountingd"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
										(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.iphone.axserver-systemwide"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
										(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
										(require-not (global-name "com.apple.dt.automationmode.reader"))
										(require-not (global-name "com.apple.TextInput"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
										(require-not (global-name "com.apple.TextInput.image-cache-server"))
										(require-not (global-name "com.apple.coremedia.sandboxserver"))
										(require-not (global-name "com.apple.audio.hapticd"))
										(require-not (global-name "com.apple.timesync.ptp.manager"))
										(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
										(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
										(require-not (global-name "com.apple.coremedia.player.xpc"))
										(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
										(require-not (global-name "com.apple.audioanalyticsd"))
										(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
										(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
										(require-not (global-name "com.apple.linkd.autoShortcut"))
										(require-not (global-name "com.apple.backboard.hid-services.xpc"))
										(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
										(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
										(require-not (global-name "com.apple.UIKit.pasteboardd"))
										(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
										(require-not (global-name "com.apple.usernotifications.listener"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
										(require-not (global-name "com.apple.coremedia.sts"))
										(require-not (global-name "com.apple.NPKCompanionAgent.library"))
										(require-not (global-name "com.apple.itunescloudd.xpc"))
										(require-not (global-name "com.apple.callkit.callcontrollerhost"))
										(require-not (global-name "com.apple.frontboard.systemappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
										(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
										(require-not (global-name "com.apple.TextInput.rdt"))
										(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
										(require-not (local-name "com.apple.assistant.contextprovider."))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))))
							(require-all
								(global-name "com.apple.SystemConfiguration.PPPController-priv")
								(require-not (entitlement-is-present com.apple.networking.vpn.configuration)))
							(require-all
								(require-not (global-name "com.apple.locationd.synchronous"))
								(require-not (global-name "com.apple.locationd.registration"))
								(require-not (global-name "com.apple.locationd.spi"))
								(require-not (global-name "com.apple.calaccessd"))
								(require-not (global-name "com.apple.calaccessd.xpc"))
								(require-all (require-not (global-name "com.apple.accountsd.authmanager"))
(require-not (global-name "com.apple.accountsd.accessmanager")))
								(require-not (global-name "com.apple.healthd.restriction"))
								(require-not (global-name "com.apple.twitterd.server"))
								(require-not (global-name "com.apple.accountsd.oauthsigner"))
								(require-not (global-name "com.apple.healthd.server"))
								(require-not (global-name "com.apple.twitterd"))
								(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
								(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
								(require-not (global-name "com.apple.spotlight.IndexAgent"))
								(require-not (global-name "com.apple.ABDatabaseDoctor"))
								(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
								(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
								(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
								(require-not (extension com.apple.sandbox.application-group))
								(require-any
									(require-all
										(global-name "com.apple.SafetyKit")
										(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.weatherkit.authservice")
										(require-not (entitlement-is-present com.apple.developer.weatherkit))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(debug-mode)
										(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
									(require-all
										(global-name "com.apple.merchantd.identity")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.gputools.service")
										(require-not (debug-mode))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.credential.manager")
										(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.merchantd.discovery")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.callkit.networkextension.voip")
										(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.financed.service.coredatastore")
										(require-not (entitlement-is-present com.apple.finance.private))
										(require-not (entitlement-is-present com.apple.developer.financekit))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.MomentsUIService")
										(require-not (entitlement-is-present com.apple.developer.journal.allow))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.assessmentagent")
										(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.SharedWebCredentials"))
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.ThreadNetwork.xpc")
										(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.messages.critical-messaging")
										(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.coreidvd.digital-presentment.xpc")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
												(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
									(require-all
										(global-name "com.apple.ExposureNotification")
										(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.session")
										(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(debug-mode)
												(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
									(require-all
										(require-not (global-name "com.apple.sharingd.nsxpc"))
										(require-not (global-name "com.apple.vibrationmanagerd"))
										(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
										(require-not (global-name "com.apple.passd.library"))
										(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
										(require-not (global-name "com.apple.mediaserverd"))
										(require-not (global-name "com.apple.voiceservices.tts"))
										(require-not (global-name "com.apple.mobileasset.autoasset"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
										(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
										(require-not (global-name "com.apple.accessories.transport-server"))
										(require-not (global-name "com.apple.librariand"))
										(require-not (global-name "com.apple.audio.AudioConverterService"))
										(require-not (global-name "com.apple.mobileassetd"))
										(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
										(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
										(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
										(require-not (global-name "com.apple.UIKit.statusbarserver"))
										(require-not (global-name "com.apple.bird"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
										(require-not (global-name "com.apple.assistant.dictation"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
										(require-not (global-name "com.apple.nanoprefsync"))
										(require-not (global-name "com.apple.DeviceAccess.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
										(require-not (global-name "com.apple.TextInput.lexicon-server"))
										(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
										(require-not (global-name "com.apple.audio.AudioQueueServer"))
										(require-not (global-name "com.apple.mediaremoted.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
										(require-not (global-name "com.apple.backboard.display.services"))
										(require-not (global-name "com.apple.FileCoordination"))
										(require-not (global-name "com.apple.CARenderServer"))
										(require-not (global-name "com.apple.seserviced.passkit-extensions"))
										(require-not (global-name "com.apple.audio.AudioSession"))
										(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
										(require-not (global-name "com.apple.cloudasset.cloudd"))
										(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
										(require-not (global-name "com.apple.TextInput.preferences"))
										(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
										(require-not (global-name "com.apple.mobileassetd.v2"))
										(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
										(require-not (global-name "com.apple.bird.token"))
										(require-not (global-name "com.apple.assetsd.changehub"))
										(require-not (global-name "com.apple.linkd.transcript"))
										(require-not (global-name "com.apple.revisiond"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
										(require-not (global-name "com.apple.springboard.backgroundappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
										(require-not (global-name "com.apple.iconservices"))
										(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
										(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
										(require-not (global-name "com.apple.ckdiscretionaryd"))
										(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
										(require-not (global-name "com.apple.accessories.externalaccessory-server"))
										(require-not (global-name "com.apple.springboard.services"))
										(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
										(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.photos.service"))
										(require-not (global-name "com.apple.accessibility.gax.backboard"))
										(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
										(require-not (global-name "com.apple.itunesstored.xpc"))
										(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
										(require-not (global-name "com.apple.backboard.hid.services"))
										(require-not (global-name "com.apple.voiceservices.keepalive"))
										(require-not (global-name "com.apple.assistant.analytics"))
										(require-not (global-name "com.apple.coremedia.videocompositor"))
										(require-not (global-name "com.apple.FileProvider"))
										(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
										(require-not (global-name "com.apple.frontboard.workspace"))
										(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
										(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.pasteboard.pasted"))
										(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
										(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
										(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
										(require-not (global-name "com.apple.audio.AURemoteIOServer"))
										(require-not (global-name "com.apple.coremedia.admin"))
										(require-not (global-name "com.apple.cloudd"))
										(require-not (global-name "com.apple.coremedia.asset.xpc"))
										(require-not (global-name "com.apple.iohideventsystem"))
										(require-not (global-name "com.apple.pegasus"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
										(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
										(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
										(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
										(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
										(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
										(require-not (global-name "com.apple.privacyaccountingd"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
										(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.iphone.axserver-systemwide"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
										(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
										(require-not (global-name "com.apple.dt.automationmode.reader"))
										(require-not (global-name "com.apple.TextInput"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
										(require-not (global-name "com.apple.TextInput.image-cache-server"))
										(require-not (global-name "com.apple.coremedia.sandboxserver"))
										(require-not (global-name "com.apple.audio.hapticd"))
										(require-not (global-name "com.apple.timesync.ptp.manager"))
										(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
										(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
										(require-not (global-name "com.apple.coremedia.player.xpc"))
										(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
										(require-not (global-name "com.apple.audioanalyticsd"))
										(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
										(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
										(require-not (global-name "com.apple.linkd.autoShortcut"))
										(require-not (global-name "com.apple.backboard.hid-services.xpc"))
										(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
										(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
										(require-not (global-name "com.apple.UIKit.pasteboardd"))
										(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
										(require-not (global-name "com.apple.usernotifications.listener"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
										(require-not (global-name "com.apple.coremedia.sts"))
										(require-not (global-name "com.apple.NPKCompanionAgent.library"))
										(require-not (global-name "com.apple.itunescloudd.xpc"))
										(require-not (global-name "com.apple.callkit.callcontrollerhost"))
										(require-not (global-name "com.apple.frontboard.systemappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
										(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
										(require-not (global-name "com.apple.TextInput.rdt"))
										(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
										(require-not (local-name "com.apple.assistant.contextprovider."))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))))
							(require-all
								(global-name "com.apple.siri.vocabularyupdates")
								(require-not (entitlement-is-bool-true com.apple.developer.siri))
								(require-not (entitlement-is-bool-true com.apple.siri.synapse)))
							(require-all
								(global-name "com.apple.identityservicesd.embedded.auth")
								(require-not (signing-identifier "com.apple.Bridge"))
								(require-any
									(require-all
										(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
										(require-any
											(require-all
												(global-name "com.apple.SafetyKit")
												(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.weatherkit.authservice")
												(require-not (entitlement-is-present com.apple.developer.weatherkit))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(debug-mode)
												(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
											(require-all
												(global-name "com.apple.merchantd.identity")
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.gputools.service")
												(require-not (debug-mode))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.seserviced.credential.manager")
												(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.merchantd.discovery")
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.callkit.networkextension.voip")
												(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.financed.service.coredatastore")
												(require-not (entitlement-is-present com.apple.finance.private))
												(require-not (entitlement-is-present com.apple.developer.financekit))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.MomentsUIService")
												(require-not (entitlement-is-present com.apple.developer.journal.allow))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.assessmentagent")
												(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.SharedWebCredentials"))
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.ThreadNetwork.xpc")
												(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.messages.critical-messaging")
												(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.coreidvd.digital-presentment.xpc")
												(require-any
													(require-all
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.iconservices"))
														(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
														(require-not (xpc-service-name "com.apple.audio.analytics.service"))
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
														(require-not (xpc-service-name "com.apple.tonelibraryd"))
														(require-any
															(global-name "com.apple.ckdiscretionaryd.debug")
															(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
															(global-name "com.apple.cloudkit.partlycloudd")
															(require-all
																(xpc-service-name-regex #".+")
																(require-any
																	(require-all
																		(global-name "com.apple.system.notification_center")
																		(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
																	(require-all
																		(global-name "com.apple.lsd.openurl")
																		(global-name "com.apple.tccd")
																		(global-name "com.apple.lsd.advertisingidentifiers"))))
															(require-all
																(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
																(require-not (global-name "com.apple.uikit.viewservice.")))))
													(require-all
														(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
														(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
											(require-all
												(global-name "com.apple.ExposureNotification")
												(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.seserviced.session")
												(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
												(require-any
													(require-all
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.iconservices"))
														(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
														(require-not (xpc-service-name "com.apple.audio.analytics.service"))
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
														(require-not (xpc-service-name "com.apple.tonelibraryd"))
														(require-any
															(global-name "com.apple.ckdiscretionaryd.debug")
															(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
															(global-name "com.apple.cloudkit.partlycloudd")
															(require-all
																(xpc-service-name-regex #".+")
																(require-any
																	(require-all
																		(global-name "com.apple.system.notification_center")
																		(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
																	(require-all
																		(global-name "com.apple.lsd.openurl")
																		(global-name "com.apple.tccd")
																		(global-name "com.apple.lsd.advertisingidentifiers"))))
															(require-all
																(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
																(require-not (global-name "com.apple.uikit.viewservice.")))))
													(require-all
														(debug-mode)
														(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
											(require-all
												(require-not (global-name "com.apple.sharingd.nsxpc"))
												(require-not (global-name "com.apple.vibrationmanagerd"))
												(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
												(require-not (global-name "com.apple.passd.library"))
												(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
												(require-not (global-name "com.apple.mediaserverd"))
												(require-not (global-name "com.apple.voiceservices.tts"))
												(require-not (global-name "com.apple.mobileasset.autoasset"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
												(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
												(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
												(require-not (global-name "com.apple.accessories.transport-server"))
												(require-not (global-name "com.apple.librariand"))
												(require-not (global-name "com.apple.audio.AudioConverterService"))
												(require-not (global-name "com.apple.mobileassetd"))
												(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
												(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
												(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
												(require-not (global-name "com.apple.UIKit.statusbarserver"))
												(require-not (global-name "com.apple.bird"))
												(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
												(require-not (global-name "com.apple.assistant.dictation"))
												(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
												(require-not (global-name "com.apple.nanoprefsync"))
												(require-not (global-name "com.apple.DeviceAccess.xpc"))
												(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
												(require-not (global-name "com.apple.TextInput.lexicon-server"))
												(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
												(require-not (global-name "com.apple.audio.AudioQueueServer"))
												(require-not (global-name "com.apple.mediaremoted.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
												(require-not (global-name "com.apple.backboard.display.services"))
												(require-not (global-name "com.apple.FileCoordination"))
												(require-not (global-name "com.apple.CARenderServer"))
												(require-not (global-name "com.apple.seserviced.passkit-extensions"))
												(require-not (global-name "com.apple.audio.AudioSession"))
												(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
												(require-not (global-name "com.apple.cloudasset.cloudd"))
												(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
												(require-not (global-name "com.apple.TextInput.preferences"))
												(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
												(require-not (global-name "com.apple.mobileassetd.v2"))
												(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
												(require-not (global-name "com.apple.bird.token"))
												(require-not (global-name "com.apple.assetsd.changehub"))
												(require-not (global-name "com.apple.linkd.transcript"))
												(require-not (global-name "com.apple.revisiond"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
												(require-not (global-name "com.apple.springboard.backgroundappservices"))
												(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
												(require-not (global-name "com.apple.iconservices"))
												(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
												(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
												(require-not (global-name "com.apple.ckdiscretionaryd"))
												(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
												(require-not (global-name "com.apple.accessories.externalaccessory-server"))
												(require-not (global-name "com.apple.springboard.services"))
												(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
												(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.photos.service"))
												(require-not (global-name "com.apple.accessibility.gax.backboard"))
												(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
												(require-not (global-name "com.apple.itunesstored.xpc"))
												(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
												(require-not (global-name "com.apple.backboard.hid.services"))
												(require-not (global-name "com.apple.voiceservices.keepalive"))
												(require-not (global-name "com.apple.assistant.analytics"))
												(require-not (global-name "com.apple.coremedia.videocompositor"))
												(require-not (global-name "com.apple.FileProvider"))
												(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
												(require-not (global-name "com.apple.frontboard.workspace"))
												(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
												(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.pasteboard.pasted"))
												(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
												(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
												(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
												(require-not (global-name "com.apple.audio.AURemoteIOServer"))
												(require-not (global-name "com.apple.coremedia.admin"))
												(require-not (global-name "com.apple.cloudd"))
												(require-not (global-name "com.apple.coremedia.asset.xpc"))
												(require-not (global-name "com.apple.iohideventsystem"))
												(require-not (global-name "com.apple.pegasus"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
												(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
												(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
												(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
												(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
												(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
												(require-not (global-name "com.apple.privacyaccountingd"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
												(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.iphone.axserver-systemwide"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
												(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
												(require-not (global-name "com.apple.dt.automationmode.reader"))
												(require-not (global-name "com.apple.TextInput"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
												(require-not (global-name "com.apple.TextInput.image-cache-server"))
												(require-not (global-name "com.apple.coremedia.sandboxserver"))
												(require-not (global-name "com.apple.audio.hapticd"))
												(require-not (global-name "com.apple.timesync.ptp.manager"))
												(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
												(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
												(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
												(require-not (global-name "com.apple.coremedia.player.xpc"))
												(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
												(require-not (global-name "com.apple.audioanalyticsd"))
												(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
												(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
												(require-not (global-name "com.apple.linkd.autoShortcut"))
												(require-not (global-name "com.apple.backboard.hid-services.xpc"))
												(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
												(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
												(require-not (global-name "com.apple.UIKit.pasteboardd"))
												(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
												(require-not (global-name "com.apple.usernotifications.listener"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
												(require-not (global-name "com.apple.coremedia.sts"))
												(require-not (global-name "com.apple.NPKCompanionAgent.library"))
												(require-not (global-name "com.apple.itunescloudd.xpc"))
												(require-not (global-name "com.apple.callkit.callcontrollerhost"))
												(require-not (global-name "com.apple.frontboard.systemappservices"))
												(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
												(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
												(require-not (global-name "com.apple.TextInput.rdt"))
												(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
												(require-not (local-name "com.apple.assistant.contextprovider."))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))))
									(require-all
										(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
										(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
										(require-not (global-name "com.apple.spotlight.IndexAgent"))
										(require-not (global-name "com.apple.ABDatabaseDoctor"))
										(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
										(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
										(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
										(require-not (extension com.apple.sandbox.application-group))
										(require-any
											(require-all
												(global-name "com.apple.SafetyKit")
												(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.weatherkit.authservice")
												(require-not (entitlement-is-present com.apple.developer.weatherkit))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(debug-mode)
												(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
											(require-all
												(global-name "com.apple.merchantd.identity")
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.gputools.service")
												(require-not (debug-mode))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.seserviced.credential.manager")
												(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.merchantd.discovery")
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
												(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.callkit.networkextension.voip")
												(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.financed.service.coredatastore")
												(require-not (entitlement-is-present com.apple.finance.private))
												(require-not (entitlement-is-present com.apple.developer.financekit))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.MomentsUIService")
												(require-not (entitlement-is-present com.apple.developer.journal.allow))
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.assessmentagent")
												(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(process-attribute is-apple-signed-executable)
												(require-not (global-name "com.apple.SharedWebCredentials"))
												(require-not (global-name "com.apple.dataaccess.dataaccessd"))
												(require-not (global-name "com.apple.exchangesyncd"))
												(require-not (xpc-service-name "com.apple.ctcategories.service"))
												(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
											(require-all
												(global-name "com.apple.ThreadNetwork.xpc")
												(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.messages.critical-messaging")
												(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.coreidvd.digital-presentment.xpc")
												(require-any
													(require-all
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.iconservices"))
														(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
														(require-not (xpc-service-name "com.apple.audio.analytics.service"))
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
														(require-not (xpc-service-name "com.apple.tonelibraryd"))
														(require-any
															(global-name "com.apple.ckdiscretionaryd.debug")
															(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
															(global-name "com.apple.cloudkit.partlycloudd")
															(require-all
																(xpc-service-name-regex #".+")
																(require-any
																	(require-all
																		(global-name "com.apple.system.notification_center")
																		(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
																	(require-all
																		(global-name "com.apple.lsd.openurl")
																		(global-name "com.apple.tccd")
																		(global-name "com.apple.lsd.advertisingidentifiers"))))
															(require-all
																(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
																(require-not (global-name "com.apple.uikit.viewservice.")))))
													(require-all
														(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
														(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
											(require-all
												(global-name "com.apple.ExposureNotification")
												(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.seserviced.session")
												(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
												(require-any
													(require-all
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.iconservices"))
														(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
														(require-not (xpc-service-name "com.apple.audio.analytics.service"))
														(require-not (xpc-service-name))
														(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
														(require-not (xpc-service-name "com.apple.tonelibraryd"))
														(require-any
															(global-name "com.apple.ckdiscretionaryd.debug")
															(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
															(global-name "com.apple.cloudkit.partlycloudd")
															(require-all
																(xpc-service-name-regex #".+")
																(require-any
																	(require-all
																		(global-name "com.apple.system.notification_center")
																		(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
																	(require-all
																		(global-name "com.apple.lsd.openurl")
																		(global-name "com.apple.tccd")
																		(global-name "com.apple.lsd.advertisingidentifiers"))))
															(require-all
																(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
																(require-not (global-name "com.apple.uikit.viewservice.")))))
													(require-all
														(debug-mode)
														(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
											(require-all
												(require-not (global-name "com.apple.sharingd.nsxpc"))
												(require-not (global-name "com.apple.vibrationmanagerd"))
												(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
												(require-not (global-name "com.apple.passd.library"))
												(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
												(require-not (global-name "com.apple.mediaserverd"))
												(require-not (global-name "com.apple.voiceservices.tts"))
												(require-not (global-name "com.apple.mobileasset.autoasset"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
												(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
												(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
												(require-not (global-name "com.apple.accessories.transport-server"))
												(require-not (global-name "com.apple.librariand"))
												(require-not (global-name "com.apple.audio.AudioConverterService"))
												(require-not (global-name "com.apple.mobileassetd"))
												(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
												(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
												(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
												(require-not (global-name "com.apple.UIKit.statusbarserver"))
												(require-not (global-name "com.apple.bird"))
												(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
												(require-not (global-name "com.apple.assistant.dictation"))
												(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
												(require-not (global-name "com.apple.nanoprefsync"))
												(require-not (global-name "com.apple.DeviceAccess.xpc"))
												(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
												(require-not (global-name "com.apple.TextInput.lexicon-server"))
												(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
												(require-not (global-name "com.apple.audio.AudioQueueServer"))
												(require-not (global-name "com.apple.mediaremoted.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
												(require-not (global-name "com.apple.backboard.display.services"))
												(require-not (global-name "com.apple.FileCoordination"))
												(require-not (global-name "com.apple.CARenderServer"))
												(require-not (global-name "com.apple.seserviced.passkit-extensions"))
												(require-not (global-name "com.apple.audio.AudioSession"))
												(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
												(require-not (global-name "com.apple.cloudasset.cloudd"))
												(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
												(require-not (global-name "com.apple.TextInput.preferences"))
												(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
												(require-not (global-name "com.apple.mobileassetd.v2"))
												(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
												(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
												(require-not (global-name "com.apple.bird.token"))
												(require-not (global-name "com.apple.assetsd.changehub"))
												(require-not (global-name "com.apple.linkd.transcript"))
												(require-not (global-name "com.apple.revisiond"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
												(require-not (global-name "com.apple.springboard.backgroundappservices"))
												(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
												(require-not (global-name "com.apple.iconservices"))
												(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
												(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
												(require-not (global-name "com.apple.ckdiscretionaryd"))
												(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
												(require-not (global-name "com.apple.accessories.externalaccessory-server"))
												(require-not (global-name "com.apple.springboard.services"))
												(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
												(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.photos.service"))
												(require-not (global-name "com.apple.accessibility.gax.backboard"))
												(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
												(require-not (global-name "com.apple.itunesstored.xpc"))
												(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
												(require-not (global-name "com.apple.backboard.hid.services"))
												(require-not (global-name "com.apple.voiceservices.keepalive"))
												(require-not (global-name "com.apple.assistant.analytics"))
												(require-not (global-name "com.apple.coremedia.videocompositor"))
												(require-not (global-name "com.apple.FileProvider"))
												(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
												(require-not (global-name "com.apple.frontboard.workspace"))
												(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
												(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.pasteboard.pasted"))
												(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
												(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
												(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
												(require-not (global-name "com.apple.audio.AURemoteIOServer"))
												(require-not (global-name "com.apple.coremedia.admin"))
												(require-not (global-name "com.apple.cloudd"))
												(require-not (global-name "com.apple.coremedia.asset.xpc"))
												(require-not (global-name "com.apple.iohideventsystem"))
												(require-not (global-name "com.apple.pegasus"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
												(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
												(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
												(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
												(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
												(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
												(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
												(require-not (global-name "com.apple.privacyaccountingd"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
												(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
												(require-not (global-name "com.apple.iphone.axserver-systemwide"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
												(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
												(require-not (global-name "com.apple.dt.automationmode.reader"))
												(require-not (global-name "com.apple.TextInput"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
												(require-not (global-name "com.apple.TextInput.image-cache-server"))
												(require-not (global-name "com.apple.coremedia.sandboxserver"))
												(require-not (global-name "com.apple.audio.hapticd"))
												(require-not (global-name "com.apple.timesync.ptp.manager"))
												(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
												(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
												(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
												(require-not (global-name "com.apple.coremedia.player.xpc"))
												(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
												(require-not (global-name "com.apple.audioanalyticsd"))
												(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
												(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
												(require-not (global-name "com.apple.linkd.autoShortcut"))
												(require-not (global-name "com.apple.backboard.hid-services.xpc"))
												(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
												(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
												(require-not (global-name "com.apple.UIKit.pasteboardd"))
												(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
												(require-not (global-name "com.apple.usernotifications.listener"))
												(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
												(require-not (global-name "com.apple.coremedia.sts"))
												(require-not (global-name "com.apple.NPKCompanionAgent.library"))
												(require-not (global-name "com.apple.itunescloudd.xpc"))
												(require-not (global-name "com.apple.callkit.callcontrollerhost"))
												(require-not (global-name "com.apple.frontboard.systemappservices"))
												(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
												(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
												(require-not (global-name "com.apple.TextInput.rdt"))
												(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
												(require-not (local-name "com.apple.assistant.contextprovider."))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))))))
							(require-all
								(global-name "com.apple.familycircle.agent")
								(require-not (entitlement-is-bool-true com.apple.private.familycircle)))
							(require-all
								(global-name "com.apple.icloud.findmydeviced")
								(require-not (entitlement-is-bool-true com.apple.icloud.findmydeviced.access))
								(require-not (entitlement-is-bool-true com.apple.aosnotification.aosnotifyd-access)))
							(require-all
								(global-name "com.apple.AOSNotification")
								(require-not (entitlement-is-bool-true com.apple.aosnotification.aosnotifyd-access)))
							(require-all
								(global-name "com.apple.mobilestoredemod")
								(require-not (entitlement-is-present com.apple.private.mobilestoredemo.enabledemo)))
							(require-all
								(global-name "com.apple.telephonyutilities.callservicesdaemon.ptt")
								(require-not (entitlement-is-bool-true com.apple.developer.push-to-talk)))
							(require-all
								(global-name "com.apple.merchantd.transaction")
								(require-not (entitlement-is-bool-true com.apple.developer.proximity-reader.payment.acceptance))
								(require-not (entitlement-is-bool-true com.apple.developer.proximity-reader.payment.acceptance-development)))
							(require-all
								(global-name "com.apple.personad.xpc")
								(require-not (entitlement-is-bool-true com.apple.private.persona.write))
								(require-not (entitlement-is-bool-true com.apple.private.persona.read))
								(require-not (entitlement-is-bool-true com.apple.private.contactsui)))
							(require-all
								(global-name "com.apple.VideoSubscriberAccount.videosubscriptionsd")
								(require-not (entitlement-is-bool-true com.apple.private.subscriptionservice.internal))
								(require-not (entitlement-is-bool-true com.apple.private.subscriptionservice.web-sources.read-write))
								(require-not (entitlement-is-bool-true com.apple.smoot.subscriptionservice))
								(require-not (entitlement-is-bool-true com.apple.developer.video-subscription-registration))
								(require-not (entitlement-is-bool-true com.apple.private.subscriptionservice.all-sources.read-only)))
							(require-all
								(global-name "com.apple.cache_delete")
								(require-not (entitlement-is-bool-true com.apple.mobile.deleted.AllowFreeSpace))
								(require-not (entitlement-is-present com.apple.private.CacheDelete)))
							(require-all
								(global-name "com.apple.powerlog.plxpclogger.xpc")
								(require-not (signing-identifier "com.apple.shortcuts"))
								(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
								(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
							(require-all
								(global-name "com.apple.iokit.powerdxpc")
								(require-not (signing-identifier "com.apple.shortcuts"))
								(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
								(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
							(require-all
								(global-name "com.apple.PowerManagement.control")
								(require-not (signing-identifier "com.apple.shortcuts"))
								(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
								(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
							(require-all
								(global-name "com.apple.identityservicesd.embedded.auth")
								(require-not (signing-identifier "com.apple.shortcuts"))
								(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
								(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
							(require-all
								(global-name "com.apple.nanoprefsync")
								(require-not (signing-identifier "com.apple.Music")))
							(require-all
								(global-name "com.apple.FileCoordination")
								(require-not (signing-identifier "com.apple.Music")))))))))
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-not (global-name "com.apple.vibrationmanagerd"))
		(require-not (global-name "com.apple.fairplayd.versioned"))
		(require-not (global-name "com.apple.wcd"))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.springboard.blockableservices"))
		(require-not (global-name "com.apple.coremedia.compressionsession"))
		(require-not (global-name "com.apple.server.bluetooth.le.pipe.xpc"))
		(require-not (global-name "com.apple.certui.relay"))
		(require-not (global-name "com.apple.sessionservices"))
		(require-not (global-name "com.apple.mediaserverd"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.server.bluetooth.le.att.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.passd.assertions"))
		(require-not (global-name "com.apple.librariand"))
		(require-not (global-name "com.apple.nearbyd.xpc.nearbyinteraction"))
		(require-not (global-name "com.apple.cvhwa.xpc"))
		(require-not (global-name "com.apple.mobile.installd"))
		(require-all (require-not (global-name "com.apple.inputanalyticsd"))
(require-not (global-name "com.apple.CameraOverlayAngel.application-service")))
		(require-not (global-name "com.apple.networking.captivenetworksupport"))
		(require-not (global-name "com.apple.fairplayd"))
		(require-not (global-name "com.apple.mobileassetd"))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.WebBookmarks.webbookmarksd"))
		(require-not (global-name "com.apple.coremedia.decompressionsession"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.bird"))
		(require-not (global-name "com.apple.VoiceOverTouch"))
		(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
		(require-not (global-name "com.apple.contactsd"))
		(require-not (global-name "com.apple.safarifetcherd"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-all (require-not (global-name "com.apple.shazamd"))
(require-not (global-name "com.apple.SiriTTSService.TrialProxy")))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
		(require-not (global-name "com.apple.commcenter.mobile-helper"))
		(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
		(require-not (global-name "com.apple.FileCoordination"))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (global-name "com.apple.mobilemail.services.xpc"))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-not (global-name "com.apple.mediaanalysisd.analysis"))
		(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.mediaanalysisd.service.public"))
		(require-not (global-name "com.apple.passd.in-app-payment"))
		(require-not (global-name "com.apple.MobileInternetSharing"))
		(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
		(require-not (global-name "com.apple.mobileassetd.v2"))
		(require-all (require-not (global-name "com.apple.iapd.distributednotification.server"))
(require-not (global-name "com.apple.iap2d.distributednotification.server")))
		(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.apsd"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-not (global-name "com.apple.naturallanguaged"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.gamed"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.itdbprep.server"))
		(require-not (global-name "com.apple.bird.token"))
		(require-not (global-name "com.apple.imavagent.embedded.auth"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.assetsd.changehub"))
		(require-not (global-name "com.apple.revisiond"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
		(require-not (global-name "com.apple.backgroundassets.user"))
		(require-not (global-name "PurplePPTServer"))
		(require-not (global-name "com.apple.iapauthd.xpc"))
		(require-not (global-name "com.apple.fontservicesd"))
		(require-not (global-name "com.apple.parsecd"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-not (global-name "com.apple.syncdefaultsd"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.notificationcenter.widgetcontrollerconnection"))
		(require-not (global-name "com.apple.atc"))
		(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
		(require-not (global-name "com.apple.midiserver.io"))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-not (global-name "com.apple.marco"))
		(require-not (global-name "PurpleSystemAppPort"))
		(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.videoqueue"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.GameController.gamecontrollerd"))
		(require-not (global-name "com.apple.kvsd"))
		(require-all (require-not (global-name "com.apple.mDNSResponder"))
(require-not (global-name "com.apple.instruments.server.mig")))
		(require-not (global-name "com.apple.ClipServices.clipserviced"))
		(require-all (require-not (global-name "com.apple.coremedia.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mutablecomposition.xpc"))
(require-not (global-name "com.apple.coremedia.mediaparserd.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.mutablecomposition.xpc")))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.server.bluetooth"))
		(require-not (global-name "com.apple.inputservice.input-ui-host"))
		(require-all (require-not (global-name "com.apple.cvmsServ"))
(require-not (global-name "com.apple.gpumemd.source")))
		(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
		(require-not (global-name "com.apple.FSEvents"))
		(require-not (global-name "com.apple.storekitd"))
		(require-not (global-name "com.apple.photos.service"))
		(require-not (global-name "com.apple.PointerUI.pointeruid.service"))
		(require-not (global-name "com.apple.remindd"))
		(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.itunesstored.xpc"))
		(require-not (global-name "com.apple.springboard"))
		(require-all (require-not (global-name "com.apple.GameController.gamecontrollerd.app"))
(require-not (global-name "com.apple.GameController.gamecontrollerd.haptics")))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.coremedia.videocompositor"))
		(require-not (global-name "com.apple.audio.AudioUnitServer"))
		(require-not (global-name "com.apple.awdd"))
		(require-not (global-name "com.apple.midiserver"))
		(require-all (require-not (global-name "com.apple.iTunesStore.daemon"))
(require-not (global-name "com.apple.iTunesStore.daemon.deatchwatch"))
(require-not (global-name "com.apple.iTunesStore.daemon-notifications")))
		(require-not (global-name "com.apple.ak.authorizationservices.xpc"))
		(require-not (global-name "com.apple.homed.xpc"))
		(require-not (global-name "com.apple.ScreenTimeAgent"))
		(require-not (global-name "com.apple.FileProvider"))
		(require-not (global-name "com.apple.springboard.icongeneration"))
		(require-all (require-not (global-name "com.apple.iap2d"))
(require-not (global-name "com.apple.iaptransportd")))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.businessservicesd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.webfilterd"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.coremedia.videoqueue"))
		(require-not (global-name "com.apple.synapse.backlink-service"))
		(require-all (require-not (global-name "com.apple.ptpcamerad"))
(require-not (global-name "com.apple.widget.pushkit"))
(require-not (global-name "com.apple.gputools.producer"))
(require-not (global-name "com.apple.VoiceOverTouch.drag.xpc"))
(require-not (global-name "com.apple.FontServices.FontProviderLoader"))
(require-not (global-name "com.apple.relatived.public"))
(require-not (global-name "com.apple.relatived.status"))
(require-not (global-name "com.apple.testmanagerd"))
(require-not (global-name "com.apple.translation.text"))
(require-not (global-name "com.apple.DragUI.druid.source"))
(require-not (global-name "com.apple.DragUI.druid.destination"))
(require-not (global-name "com.apple.storekitservice"))
(require-not (global-name "com.apple.storekit.configuration.xpc"))
(require-not (global-name "com.apple.SpatialAudioXPCService"))
(require-not (global-name "com.apple.SensorKit.SKMediaEventsHelper"))
(require-not (global-name "com.apple.uikit.eyedropperd.service"))
(require-not (global-name "com.apple.uiintelligencesupport.agent"))
(require-not (global-name "com.apple.CoreMLModelSecurityService"))
(require-not (global-name "com.apple.ClockKit.CLKWatchFaceLibrary"))
(require-not (global-name "com.apple.IncomingCallNotifications.ICNotificationManagerHost"))
(require-not (global-name "com.apple.fullkeyboardaccess.drag.xpc"))
(require-not (global-name "com.apple.financed.service.financestore"))
(require-not (global-name "com.apple.icprefd-xpc"))
(require-not (global-name "com.apple.inputservice.keyboardui"))
(require-not (global-name "com.apple.iMessageAppsViewService.warmup-connection"))
(require-not (global-name "com.apple.homed.xpc.accessory-setup"))
(require-not (global-name "com.apple.handwritingd.pksettings"))
(require-not (global-name "com.apple.handwritingd.pkanalytics"))
(require-not (global-name "com.apple.managedappdistributiond.xpc"))
(require-not (global-name "com.apple.metrickit.xpc"))
(require-not (global-name "com.apple.metricmeasurement.MetricMeasurementHelper"))
(require-not (global-name "com.apple.chrono.controlcenter"))
(require-not (global-name "com.apple.chrono.widgetcenterconnection"))
(require-not (global-name "com.apple.corelocation.locationUI"))
(require-not (global-name "com.apple.commandandcontrol.drag.xpc"))
(require-not (global-name "com.apple.contactsd.support"))
(require-not (global-name "com.apple.contactsd.contact-provider"))
(require-not (global-name "com.apple.USDLib.FormatLoader"))
(require-not (global-name "com.apple.USDKit.FormatLoader"))
(require-not (global-name "com.apple.UIKit.OverlayUI.services"))
(require-not (global-name "com.apple.UIKit.SecureControlService"))
(require-not (global-name "com.apple.AccessorySetupUI"))
(require-not (global-name "com.apple.AppTrackingTransparency.EnforcementService"))
(require-not (global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent"))
(require-not (global-name "com.apple.dasd.end-prewarm"))
(require-not (global-name "com.apple.dt.xctestd.target"))
(require-not (global-name "com.apple.dt.testmanagerd.runner"))
(require-not (global-name "com.apple.dt.testmanagerd.uiprocess"))
(require-not (global-name "com.apple.donotdisturb.availability.service"))
(require-not (global-name "com.apple.donotdisturb.appconfiguration.service"))
(require-not (global-name "com.apple.assistivetouchd.drag.xpc"))
(require-not (global-name "com.apple.arkit.service.location"))
(require-not (global-name "com.apple.arkit.service.geoTracking"))
(require-not (global-name "com.apple.appprotectiond.extensioninfo"))
(require-not (global-name "com.apple.appprotectiond.extensionmonitor"))
(require-not (global-name "com.apple.ap.promotedcontent.attributionservice"))
(require-not (global-name "com.apple.ap.adprivacyd.attribution"))
(require-not (global-name "com.apple.ap.adprivacyd.trackingtransparency")))
		(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
		(require-not (global-name "com.apple.VoiceOverTouch.xpc"))
		(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
		(require-not (global-name "com.apple.AccessibilityUIServer"))
		(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
		(require-all (require-not (global-name "com.apple.prdaily"))
(require-not (global-name "com.apple.fileprovider.pushkit"))
(require-not (global-name "com.apple.gizmoappd"))
(require-not (global-name "com.apple.gamed.note"))
(require-not (global-name "com.apple.vsassetd"))
(require-not (global-name "com.apple.videoconference.avconference"))
(require-not (global-name "com.apple.AdSheetPad.server"))
(require-not (global-name "com.apple.AdSheetPhone.server"))
(require-not (global-name "com.apple.scrod"))
(require-not (global-name "com.apple.sandboxd"))
(require-not (global-name "com.apple.springboard.watchdogserver"))
(require-not (global-name "com.apple.weibod.server"))
(require-not (global-name "com.apple.wapi.client"))
(require-not (global-name "com.apple.watchconnectivity.complication"))
(require-not (global-name "com.apple.datamigrator.dz"))
(require-not (global-name "com.apple.distributed_notifications@0v3"))
(require-not (global-name "com.apple.cvmsCompAgent_armv7"))
(require-not (global-name "com.apple.coremedia.wirelessdisplay"))
(require-not (global-name "com.apple.coremedia.wirelessdisplayserver"))
(require-not (global-name "com.apple.iapauthd"))
(require-not (global-name "com.apple.itunescloudd.tcchelper"))
(require-not (global-name "com.apple.iTunesStore.daemon.public"))
(require-not (global-name "com.apple.iTunesStore.daemon.notifications.public"))
(require-not (global-name "com.apple.telephonyutilities.remotelogdaemon"))
(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.voip"))
(require-not (global-name "com.apple.bypassBasebandAutoBooter.msgport"))
(require-not (global-name "com.apple.backboard.watchdog"))
(require-not (global-name "com.apple.backboard.workspaceserverconnection"))
(require-not (global-name "com.apple.MediaControl.daemon"))
(require-not (global-name "com.apple.Music.MPMusicPlayerMigServer"))
(require-not (global-name "com.apple.MobileFileIntegrity"))
(require-not (global-name "com.apple.MobileAccessoryUpdater"))
(require-not (global-name "com.apple.appleprofilepolicyd"))
(require-not (global-name "com.apple.ait.client"))
(require-not (global-name "com.apple.airplay.sender.xpc"))
(require-not (global-name "com.apple.audio.AudioFileServer"))
(require-not (global-name "com.apple.audio.AudioConverterServer"))
(require-not (global-name "com.apple.mediastream.sharing-nowake"))
(require-not (global-name "com.apple.managedconfiguration.mdmdservice"))
(require-not (global-name "com.apple.mobileipod.MPMusicPlayerControllerInternal"))
(require-not (global-name "com.apple.mobileipod.MPMusicPlayerMigServer"))
(require-not (global-name "com.apple.mobileipod.MPMusicPlayerMigServerExists")))
		(require-not (global-name "com.apple.audio.AURemoteIOServer"))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.gamecenter"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "PurpleSystemEventPort"))
		(require-not (global-name "com.apple.Music.MPMusicPlayerControllerInternal"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.webprivacyd"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.pegasus"))
		(require-not (global-name "com.apple.iapd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.Music.MPMusicPlayerMigServerExists"))
		(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
		(require-not (global-name "com.apple.privacyaccountingd"))
		(require-not (global-name "com.apple.corespotlightservice"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
		(require-not (global-name "com.apple.medialibraryd.xpc"))
		(require-not (global-name "com.apple.ctkd.slot-client"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.webinspector"))
		(require-not (global-name "com.apple.coresymbolicationd"))
		(require-not (global-name "com.apple.cache_delete.public"))
		(require-not (global-name "com.apple.imagent.embedded.auth"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.coremedia.sandboxserver"))
		(require-not (global-name "com.apple.duetactivityscheduler"))
		(require-not (global-name "com.apple.iaptransportd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.timesync.ptp.manager"))
		(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
		(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.mediastream.sharing"))
		(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
		(require-not (global-name "com.apple.corerecents.recentsd"))
		(require-all (require-not (global-name "com.apple.commcenter.dm-helper"))
(require-not (global-name "com.apple.callkit.callsourcehost")))
		(require-not (global-name "com.apple.videoconference.camera"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.coremedia.player.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.cpe.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpe.xpc")))
		(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
		(require-not (global-name "com.apple.handwritingd.remoterecognition"))
		(require-all (require-not (global-name "com.apple.callkit.service"))
(require-not (global-name "com.apple.coremedia.audioprocessingtap"))
(require-not (global-name "com.apple.matter.support.xpc")))
		(require-not (global-name "com.apple.siri.VoiceShortcuts.xpc"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
		(require-not (global-name "com.apple.ProgressReporting"))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
		(require-not (global-name "com.apple.spotlight.SearchAgent"))
		(require-not (global-name "com.apple.coremedia.sts"))
		(require-not (global-name "com.apple.itunescloudd.xpc"))
		(require-not (global-name "com.apple.devicecheckd"))
		(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
		(require-not (global-name "com.apple.appleneuralengine"))
		(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
		(require-not (global-name "com.apple.Safari.SafeBrowsing.Service"))
		(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
		(require-not (global-name "com.apple.triald.namespace-management"))
		(require-all (require-not (global-name "com.apple.dockaccessoryd"))
(require-not (global-name "com.apple.relatived.tempest")))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(require-not (xpc-service-name "com.apple.siri.context.service"))
		(require-not (xpc-service-name "com.apple.intents.intents-helper"))
		(require-all (require-not (xpc-service-name "com.apple.OSLogService"))
(require-not (xpc-service-name "com.apple.mscamerad-xpc"))
(require-not (xpc-service-name "com.apple.ModelIO.AssetLoader"))
(require-not (xpc-service-name "com.apple.PrintKit.PrinterTool"))
(require-not (xpc-service-name "com.apple.WorkoutKitXPCService"))
(require-not (xpc-service-name "com.apple.avkit.SharedPreferences"))
(require-not (xpc-service-name "com.apple.DocumentManagerCore.Rename"))
(require-not (xpc-service-name "com.apple.uifoundation-bundle-helper"))
(require-not (xpc-service-name "com.apple.BarcodeSupport.ParsingService"))
(require-not (xpc-service-name "com.apple.datadetectors.AddToRecentsService"))
(require-not (xpc-service-name "com.apple.ContactsUI.ContactsButtonXPCService"))
(require-not (xpc-service-name "com.apple.StocksKitService"))
(require-not (xpc-service-name "com.apple.SafariFoundation.AutoFillHelper"))
(require-not (xpc-service-name "com.apple.SafariFoundation.CredentialProviderExtensionHelper")))
		(require-all (require-not (xpc-service-name "com.apple.iWorkFileFormat"))
(require-not (xpc-service-name "com.apple.CompassCalibration"))
(require-not (xpc-service-name "com.apple.CallKit.CallDirectory"))
(require-not (xpc-service-name "com.apple.SafariServices.ContentBlockerLoader")))
		(require-not (xpc-service-name "com.apple.AGXCompilerService"))
		(require-not (xpc-service-name "com.apple.MapKit.SnapshotService"))
		(require-not (xpc-service-name "com.apple.imfoundation.IMRemoteURLConnectionAgent"))
		(require-not (xpc-service-name "com.apple.textkit.nsattributedstringagent"))
		(require-not (xpc-service-name "com.apple.WebKit.WebAuthn"))
		(require-all (require-not (xpc-service-name "com.apple.WebKit.Networking"))
(require-not (xpc-service-name "com.apple.WebKit.WebContent")))
		(require-not (xpc-service-name "com.apple.accessibility.heard"))
		(require-not (xpc-service-name "com.apple.MTLCompilerService"))
		(require-not (xpc-service-name "com.apple.accessibility.AccessibilityUIServer"))
		(require-any
			(require-all
				(signing-identifier "com.apple.mobilemail")
				(require-not (global-name "com.apple.nanoprefsync"))
				(require-not (global-name "com.apple.routined.registration"))
				(require-not (global-name "com.apple.backupd"))
				(require-not (global-name "com.apple.sharingd.nsxpc"))
				(require-not (global-name "com.apple.bulletindistributord.server"))
				(require-not (global-name "com.apple.identityservicesd.embedded.auth"))
				(require-not (global-name "com.apple.mobilemail"))
				(require-not (global-name "com.apple.harvestd.manager")))
			(require-all
				(require-not (xpc-service-name "com.apple.coremedia.decompressionsession.xpc"))
				(require-not (xpc-service-name "com.apple.coremedia.compressionsession.xpc"))
				(require-not (xpc-service-name "com.apple.WebKit.GPU"))
				(require-not (xpc-service-name "com.apple.WebKit.WebContent.CaptivePortal"))
				(require-not (extension com.apple.security.exception.mach-lookup.global-name))
				(require-not (extension com.apple.security.exception.mach-lookup.local-name))
				(require-any
					(require-all
						(global-name "com.apple.ak.auth.xpc")
						(require-not (process-attribute is-apple-signed-executable))
						(require-not (entitlement-is-bool-true com.apple.authkit.client))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.private))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.internal)))
					(require-all
						(global-name "com.apple.ak.anisette.xpc")
						(require-not (process-attribute is-apple-signed-executable))
						(require-not (entitlement-is-bool-true com.apple.authkit.client))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.private))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.internal)))
					(require-all
						(global-name "com.apple.networkd_privileged")
						(require-not (entitlement-is-bool-true com.apple.networkd.modify_settings))
						(require-not (entitlement-is-bool-true com.apple.networkd.disable_opportunistic))
						(require-not (entitlement-is-bool-true com.apple.networkd.advisory_socket))
						(require-not (entitlement-is-bool-true com.apple.networkd_privileged))
						(require-not (entitlement-is-bool-true com.apple.networkd.persistent_interface)))
					(require-all
						(xpc-service-name "com.apple.imdpersistence.IMDPersistenceAgent")
						(require-not (entitlement-is-bool-true com.apple.private.imcore.imdpersistence.database-access))
						(require-not (entitlement-is-bool-true com.apple.private.imcore.imdpersistence.data-detection-access ))
						(require-not (entitlement-is-bool-true com.apple.private.imcore.spi.database-access)))
					(require-all
						(entitlement-is-bool-true com.apple.developer.networking.multicast)
						(require-not (global-name "com.apple.securityd"))
						(require-not (global-name "com.apple.trustd"))
						(require-not (global-name "com.apple.commcenter.xpc"))
						(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
						(require-not (global-name "com.apple.usymptomsd"))
						(require-not (global-name "com.apple.symptomsd"))
						(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
						(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
						(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
						(require-not (global-name "com.apple.SystemConfiguration.helper"))
						(require-not (global-name "com.apple.SystemConfiguration.configd"))
						(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
						(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability")))
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (global-name "com.apple.osanalytics.osanalyticshelper"))
						(require-all (require-not (global-name "com.apple.ReportCrash"))
(require-not (global-name "com.apple.ReportCrash.SafetyNet"))
(require-not (global-name "com.apple.ReportCrash.StackShot"))
(require-not (global-name "com.apple.ReportCrash.DirectoryService"))))
					(require-all
						(global-name "com.apple.replayd")
						(process-attribute unknown))
					(require-all
						(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
						(require-not (entitlement-is-bool-true com.apple.private.ids.remoteurlconnection))
						(require-not (entitlement-is-bool-true com.apple.private.imcore.imremoteurlconnection)))
					(require-all
						(global-name "com.apple.bulletinboard.utilitiesconnection")
						(require-not (entitlement-is-bool-true com.apple.bulletinboard.utilities)))
					(require-all
						(xpc-service-name "com.apple.StreamingUnzipService")
						(require-all (require-not (signing-identifier "com.apple.Home"))
(require-not (signing-identifier "com.apple.Home.HomeControlService"))))
					(require-all
						(global-name "com.apple.bulletinboard.systemstateconnection")
						(require-not (entitlement-is-bool-true com.apple.bulletinboard.systemstate)))
					(require-all
						(global-name "com.apple.bulletinboard.settingsconnection")
						(require-not (entitlement-is-bool-true com.apple.bulletinboard.settings)))
					(require-all
						(global-name "com.apple.lsd.xpc")
						(require-not (signing-identifier "com.apple.mobilesafari")))
					(require-all
						(global-name "com.apple.bulletinboard.observerconnection")
						(require-not (entitlement-is-bool-true com.apple.bulletinboard.observer)))
					(require-all
						(global-name "com.apple.safarifetcherd")
						(require-not (signing-identifier "com.apple.mobilesafari")))
					(require-all
						(local-name "com.apple.iphone.axserver")
						(require-not (entitlement-is-bool-true com.apple.accessibility.api)))
					(require-all
						(signing-identifier "com.apple.Maps")
						(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
						(require-not (global-name "com.apple.iokit.powerdxpc"))
						(require-not (global-name "com.apple.PowerManagement.control"))
						(require-not (global-name "com.apple.nanomaps.xpc.Navigation"))
						(require-not (global-name "com.apple.nanomaps.xpc.GeoServices.Navigation"))
						(require-not (global-name "com.apple.assistant.analytics")))
					(require-all
						(global-name "com.apple.icfcallserver")
						(require-not (entitlement-is-bool-true com.apple.private.icfcallserver)))
					(require-all
						(global-name "com.apple.mobile.keybagd.xpc")
						(require-not (signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI"))
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
								(require-any
									(require-all
										(global-name "com.apple.SafetyKit")
										(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.weatherkit.authservice")
										(require-not (entitlement-is-present com.apple.developer.weatherkit))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(debug-mode)
										(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
									(require-all
										(global-name "com.apple.merchantd.identity")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.gputools.service")
										(require-not (debug-mode))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.credential.manager")
										(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.merchantd.discovery")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.callkit.networkextension.voip")
										(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.financed.service.coredatastore")
										(require-not (entitlement-is-present com.apple.finance.private))
										(require-not (entitlement-is-present com.apple.developer.financekit))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.MomentsUIService")
										(require-not (entitlement-is-present com.apple.developer.journal.allow))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.assessmentagent")
										(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.SharedWebCredentials"))
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.ThreadNetwork.xpc")
										(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.messages.critical-messaging")
										(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.coreidvd.digital-presentment.xpc")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
												(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
									(require-all
										(global-name "com.apple.ExposureNotification")
										(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.session")
										(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(debug-mode)
												(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
									(require-all
										(require-not (global-name "com.apple.sharingd.nsxpc"))
										(require-not (global-name "com.apple.vibrationmanagerd"))
										(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
										(require-not (global-name "com.apple.passd.library"))
										(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
										(require-not (global-name "com.apple.mediaserverd"))
										(require-not (global-name "com.apple.voiceservices.tts"))
										(require-not (global-name "com.apple.mobileasset.autoasset"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
										(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
										(require-not (global-name "com.apple.accessories.transport-server"))
										(require-not (global-name "com.apple.librariand"))
										(require-not (global-name "com.apple.audio.AudioConverterService"))
										(require-not (global-name "com.apple.mobileassetd"))
										(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
										(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
										(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
										(require-not (global-name "com.apple.UIKit.statusbarserver"))
										(require-not (global-name "com.apple.bird"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
										(require-not (global-name "com.apple.assistant.dictation"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
										(require-not (global-name "com.apple.nanoprefsync"))
										(require-not (global-name "com.apple.DeviceAccess.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
										(require-not (global-name "com.apple.TextInput.lexicon-server"))
										(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
										(require-not (global-name "com.apple.audio.AudioQueueServer"))
										(require-not (global-name "com.apple.mediaremoted.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
										(require-not (global-name "com.apple.backboard.display.services"))
										(require-not (global-name "com.apple.FileCoordination"))
										(require-not (global-name "com.apple.CARenderServer"))
										(require-not (global-name "com.apple.seserviced.passkit-extensions"))
										(require-not (global-name "com.apple.audio.AudioSession"))
										(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
										(require-not (global-name "com.apple.cloudasset.cloudd"))
										(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
										(require-not (global-name "com.apple.TextInput.preferences"))
										(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
										(require-not (global-name "com.apple.mobileassetd.v2"))
										(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
										(require-not (global-name "com.apple.bird.token"))
										(require-not (global-name "com.apple.assetsd.changehub"))
										(require-not (global-name "com.apple.linkd.transcript"))
										(require-not (global-name "com.apple.revisiond"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
										(require-not (global-name "com.apple.springboard.backgroundappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
										(require-not (global-name "com.apple.iconservices"))
										(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
										(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
										(require-not (global-name "com.apple.ckdiscretionaryd"))
										(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
										(require-not (global-name "com.apple.accessories.externalaccessory-server"))
										(require-not (global-name "com.apple.springboard.services"))
										(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
										(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.photos.service"))
										(require-not (global-name "com.apple.accessibility.gax.backboard"))
										(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
										(require-not (global-name "com.apple.itunesstored.xpc"))
										(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
										(require-not (global-name "com.apple.backboard.hid.services"))
										(require-not (global-name "com.apple.voiceservices.keepalive"))
										(require-not (global-name "com.apple.assistant.analytics"))
										(require-not (global-name "com.apple.coremedia.videocompositor"))
										(require-not (global-name "com.apple.FileProvider"))
										(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
										(require-not (global-name "com.apple.frontboard.workspace"))
										(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
										(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.pasteboard.pasted"))
										(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
										(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
										(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
										(require-not (global-name "com.apple.audio.AURemoteIOServer"))
										(require-not (global-name "com.apple.coremedia.admin"))
										(require-not (global-name "com.apple.cloudd"))
										(require-not (global-name "com.apple.coremedia.asset.xpc"))
										(require-not (global-name "com.apple.iohideventsystem"))
										(require-not (global-name "com.apple.pegasus"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
										(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
										(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
										(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
										(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
										(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
										(require-not (global-name "com.apple.privacyaccountingd"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
										(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.iphone.axserver-systemwide"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
										(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
										(require-not (global-name "com.apple.dt.automationmode.reader"))
										(require-not (global-name "com.apple.TextInput"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
										(require-not (global-name "com.apple.TextInput.image-cache-server"))
										(require-not (global-name "com.apple.coremedia.sandboxserver"))
										(require-not (global-name "com.apple.audio.hapticd"))
										(require-not (global-name "com.apple.timesync.ptp.manager"))
										(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
										(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
										(require-not (global-name "com.apple.coremedia.player.xpc"))
										(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
										(require-not (global-name "com.apple.audioanalyticsd"))
										(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
										(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
										(require-not (global-name "com.apple.linkd.autoShortcut"))
										(require-not (global-name "com.apple.backboard.hid-services.xpc"))
										(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
										(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
										(require-not (global-name "com.apple.UIKit.pasteboardd"))
										(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
										(require-not (global-name "com.apple.usernotifications.listener"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
										(require-not (global-name "com.apple.coremedia.sts"))
										(require-not (global-name "com.apple.NPKCompanionAgent.library"))
										(require-not (global-name "com.apple.itunescloudd.xpc"))
										(require-not (global-name "com.apple.callkit.callcontrollerhost"))
										(require-not (global-name "com.apple.frontboard.systemappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
										(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
										(require-not (global-name "com.apple.TextInput.rdt"))
										(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
										(require-not (local-name "com.apple.assistant.contextprovider."))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))))
							(require-all
								(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
								(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
								(require-not (global-name "com.apple.spotlight.IndexAgent"))
								(require-not (global-name "com.apple.ABDatabaseDoctor"))
								(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
								(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
								(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
								(require-not (extension com.apple.sandbox.application-group))
								(require-any
									(require-all
										(global-name "com.apple.SafetyKit")
										(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.weatherkit.authservice")
										(require-not (entitlement-is-present com.apple.developer.weatherkit))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(debug-mode)
										(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
									(require-all
										(global-name "com.apple.merchantd.identity")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.gputools.service")
										(require-not (debug-mode))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.credential.manager")
										(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.merchantd.discovery")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.callkit.networkextension.voip")
										(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.financed.service.coredatastore")
										(require-not (entitlement-is-present com.apple.finance.private))
										(require-not (entitlement-is-present com.apple.developer.financekit))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.MomentsUIService")
										(require-not (entitlement-is-present com.apple.developer.journal.allow))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.assessmentagent")
										(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.SharedWebCredentials"))
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.ThreadNetwork.xpc")
										(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.messages.critical-messaging")
										(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.coreidvd.digital-presentment.xpc")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
												(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
									(require-all
										(global-name "com.apple.ExposureNotification")
										(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.session")
										(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(debug-mode)
												(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
									(require-all
										(require-not (global-name "com.apple.sharingd.nsxpc"))
										(require-not (global-name "com.apple.vibrationmanagerd"))
										(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
										(require-not (global-name "com.apple.passd.library"))
										(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
										(require-not (global-name "com.apple.mediaserverd"))
										(require-not (global-name "com.apple.voiceservices.tts"))
										(require-not (global-name "com.apple.mobileasset.autoasset"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
										(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
										(require-not (global-name "com.apple.accessories.transport-server"))
										(require-not (global-name "com.apple.librariand"))
										(require-not (global-name "com.apple.audio.AudioConverterService"))
										(require-not (global-name "com.apple.mobileassetd"))
										(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
										(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
										(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
										(require-not (global-name "com.apple.UIKit.statusbarserver"))
										(require-not (global-name "com.apple.bird"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
										(require-not (global-name "com.apple.assistant.dictation"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
										(require-not (global-name "com.apple.nanoprefsync"))
										(require-not (global-name "com.apple.DeviceAccess.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
										(require-not (global-name "com.apple.TextInput.lexicon-server"))
										(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
										(require-not (global-name "com.apple.audio.AudioQueueServer"))
										(require-not (global-name "com.apple.mediaremoted.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
										(require-not (global-name "com.apple.backboard.display.services"))
										(require-not (global-name "com.apple.FileCoordination"))
										(require-not (global-name "com.apple.CARenderServer"))
										(require-not (global-name "com.apple.seserviced.passkit-extensions"))
										(require-not (global-name "com.apple.audio.AudioSession"))
										(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
										(require-not (global-name "com.apple.cloudasset.cloudd"))
										(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
										(require-not (global-name "com.apple.TextInput.preferences"))
										(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
										(require-not (global-name "com.apple.mobileassetd.v2"))
										(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
										(require-not (global-name "com.apple.bird.token"))
										(require-not (global-name "com.apple.assetsd.changehub"))
										(require-not (global-name "com.apple.linkd.transcript"))
										(require-not (global-name "com.apple.revisiond"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
										(require-not (global-name "com.apple.springboard.backgroundappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
										(require-not (global-name "com.apple.iconservices"))
										(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
										(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
										(require-not (global-name "com.apple.ckdiscretionaryd"))
										(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
										(require-not (global-name "com.apple.accessories.externalaccessory-server"))
										(require-not (global-name "com.apple.springboard.services"))
										(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
										(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.photos.service"))
										(require-not (global-name "com.apple.accessibility.gax.backboard"))
										(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
										(require-not (global-name "com.apple.itunesstored.xpc"))
										(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
										(require-not (global-name "com.apple.backboard.hid.services"))
										(require-not (global-name "com.apple.voiceservices.keepalive"))
										(require-not (global-name "com.apple.assistant.analytics"))
										(require-not (global-name "com.apple.coremedia.videocompositor"))
										(require-not (global-name "com.apple.FileProvider"))
										(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
										(require-not (global-name "com.apple.frontboard.workspace"))
										(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
										(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.pasteboard.pasted"))
										(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
										(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
										(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
										(require-not (global-name "com.apple.audio.AURemoteIOServer"))
										(require-not (global-name "com.apple.coremedia.admin"))
										(require-not (global-name "com.apple.cloudd"))
										(require-not (global-name "com.apple.coremedia.asset.xpc"))
										(require-not (global-name "com.apple.iohideventsystem"))
										(require-not (global-name "com.apple.pegasus"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
										(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
										(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
										(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
										(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
										(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
										(require-not (global-name "com.apple.privacyaccountingd"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
										(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.iphone.axserver-systemwide"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
										(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
										(require-not (global-name "com.apple.dt.automationmode.reader"))
										(require-not (global-name "com.apple.TextInput"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
										(require-not (global-name "com.apple.TextInput.image-cache-server"))
										(require-not (global-name "com.apple.coremedia.sandboxserver"))
										(require-not (global-name "com.apple.audio.hapticd"))
										(require-not (global-name "com.apple.timesync.ptp.manager"))
										(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
										(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
										(require-not (global-name "com.apple.coremedia.player.xpc"))
										(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
										(require-not (global-name "com.apple.audioanalyticsd"))
										(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
										(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
										(require-not (global-name "com.apple.linkd.autoShortcut"))
										(require-not (global-name "com.apple.backboard.hid-services.xpc"))
										(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
										(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
										(require-not (global-name "com.apple.UIKit.pasteboardd"))
										(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
										(require-not (global-name "com.apple.usernotifications.listener"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
										(require-not (global-name "com.apple.coremedia.sts"))
										(require-not (global-name "com.apple.NPKCompanionAgent.library"))
										(require-not (global-name "com.apple.itunescloudd.xpc"))
										(require-not (global-name "com.apple.callkit.callcontrollerhost"))
										(require-not (global-name "com.apple.frontboard.systemappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
										(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
										(require-not (global-name "com.apple.TextInput.rdt"))
										(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
										(require-not (local-name "com.apple.assistant.contextprovider."))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))))))
					(require-all
						(global-name "com.apple.nanoprefsync")
						(require-all (require-not (signing-identifier "com.apple.Health"))
(require-not (signing-identifier "com.apple.PassbookUIService")))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (signing-identifier "com.apple.stocks.watchkitextension")))
					(require-all
						(global-name "com.apple.managedconfiguration.profiled")
						(require-not (entitlement-is-bool-true com.apple.managedconfiguration.profiled-access)))
					(require-all
						(global-name "com.apple.FileCoordination")
						(require-all (require-not (signing-identifier "com.apple.Health"))
(require-not (signing-identifier "com.apple.PassbookUIService")))
						(require-not (signing-identifier "com.apple.iBooks"))
						(require-not (signing-identifier "com.apple.stocks.watchkitextension")))
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (global-name "com.apple.aps.alertprovider.xpc"))
						(require-not (global-name "com.apple.mobile.keybagd.UserManager.xpc"))
						(require-not (global-name "com.apple.coreduetd"))
						(require-not (global-name "com.apple.mobile.keybagd.xpc"))
						(require-not (global-name "com.apple.unfreed"))
						(require-not (global-name "com.apple.lskdd"))
						(require-not (global-name "com.apple.mobile.usermanagerd.xpc")))
					(require-all
						(signing-identifier "com.apple.Bridge")
						(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
						(require-not (global-name "com.apple.iokit.powerdxpc"))
						(require-not (global-name "com.apple.PowerManagement.control")))
					(require-all
						(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
						(require-any
							(require-all
								(global-name "com.apple.SafetyKit")
								(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.weatherkit.authservice")
								(require-not (entitlement-is-present com.apple.developer.weatherkit))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(debug-mode)
								(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
							(require-all
								(global-name "com.apple.merchantd.identity")
								(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
								(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.gputools.service")
								(require-not (debug-mode))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.seserviced.credential.manager")
								(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.merchantd.discovery")
								(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
								(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
								(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.callkit.networkextension.voip")
								(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.financed.service.coredatastore")
								(require-not (entitlement-is-present com.apple.finance.private))
								(require-not (entitlement-is-present com.apple.developer.financekit))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.MomentsUIService")
								(require-not (entitlement-is-present com.apple.developer.journal.allow))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.assessmentagent")
								(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.SharedWebCredentials"))
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.ThreadNetwork.xpc")
								(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.messages.critical-messaging")
								(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.coreidvd.digital-presentment.xpc")
								(require-any
									(require-all
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
										(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
							(require-all
								(global-name "com.apple.ExposureNotification")
								(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.seserviced.session")
								(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
								(require-any
									(require-all
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(debug-mode)
										(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
							(require-all
								(require-not (global-name "com.apple.sharingd.nsxpc"))
								(require-not (global-name "com.apple.vibrationmanagerd"))
								(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
								(require-not (global-name "com.apple.passd.library"))
								(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
								(require-not (global-name "com.apple.mediaserverd"))
								(require-not (global-name "com.apple.voiceservices.tts"))
								(require-not (global-name "com.apple.mobileasset.autoasset"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
								(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
								(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
								(require-not (global-name "com.apple.accessories.transport-server"))
								(require-not (global-name "com.apple.librariand"))
								(require-not (global-name "com.apple.audio.AudioConverterService"))
								(require-not (global-name "com.apple.mobileassetd"))
								(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
								(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
								(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
								(require-not (global-name "com.apple.UIKit.statusbarserver"))
								(require-not (global-name "com.apple.bird"))
								(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
								(require-not (global-name "com.apple.assistant.dictation"))
								(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
								(require-not (global-name "com.apple.nanoprefsync"))
								(require-not (global-name "com.apple.DeviceAccess.xpc"))
								(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
								(require-not (global-name "com.apple.TextInput.lexicon-server"))
								(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
								(require-not (global-name "com.apple.audio.AudioQueueServer"))
								(require-not (global-name "com.apple.mediaremoted.xpc"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
								(require-not (global-name "com.apple.backboard.display.services"))
								(require-not (global-name "com.apple.FileCoordination"))
								(require-not (global-name "com.apple.CARenderServer"))
								(require-not (global-name "com.apple.seserviced.passkit-extensions"))
								(require-not (global-name "com.apple.audio.AudioSession"))
								(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
								(require-not (global-name "com.apple.cloudasset.cloudd"))
								(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
								(require-not (global-name "com.apple.TextInput.preferences"))
								(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
								(require-not (global-name "com.apple.mobileassetd.v2"))
								(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
								(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
								(require-not (global-name "com.apple.bird.token"))
								(require-not (global-name "com.apple.assetsd.changehub"))
								(require-not (global-name "com.apple.linkd.transcript"))
								(require-not (global-name "com.apple.revisiond"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
								(require-not (global-name "com.apple.springboard.backgroundappservices"))
								(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
								(require-not (global-name "com.apple.iconservices"))
								(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
								(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
								(require-not (global-name "com.apple.ckdiscretionaryd"))
								(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
								(require-not (global-name "com.apple.accessories.externalaccessory-server"))
								(require-not (global-name "com.apple.springboard.services"))
								(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
								(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
								(require-not (global-name "com.apple.photos.service"))
								(require-not (global-name "com.apple.accessibility.gax.backboard"))
								(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
								(require-not (global-name "com.apple.itunesstored.xpc"))
								(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
								(require-not (global-name "com.apple.backboard.hid.services"))
								(require-not (global-name "com.apple.voiceservices.keepalive"))
								(require-not (global-name "com.apple.assistant.analytics"))
								(require-not (global-name "com.apple.coremedia.videocompositor"))
								(require-not (global-name "com.apple.FileProvider"))
								(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
								(require-not (global-name "com.apple.frontboard.workspace"))
								(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
								(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
								(require-not (global-name "com.apple.pasteboard.pasted"))
								(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
								(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
								(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
								(require-not (global-name "com.apple.audio.AURemoteIOServer"))
								(require-not (global-name "com.apple.coremedia.admin"))
								(require-not (global-name "com.apple.cloudd"))
								(require-not (global-name "com.apple.coremedia.asset.xpc"))
								(require-not (global-name "com.apple.iohideventsystem"))
								(require-not (global-name "com.apple.pegasus"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
								(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
								(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
								(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
								(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
								(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
								(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
								(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
								(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
								(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
								(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
								(require-not (global-name "com.apple.privacyaccountingd"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
								(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
								(require-not (global-name "com.apple.iphone.axserver-systemwide"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
								(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
								(require-not (global-name "com.apple.dt.automationmode.reader"))
								(require-not (global-name "com.apple.TextInput"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
								(require-not (global-name "com.apple.TextInput.image-cache-server"))
								(require-not (global-name "com.apple.coremedia.sandboxserver"))
								(require-not (global-name "com.apple.audio.hapticd"))
								(require-not (global-name "com.apple.timesync.ptp.manager"))
								(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
								(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
								(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
								(require-not (global-name "com.apple.coremedia.player.xpc"))
								(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
								(require-not (global-name "com.apple.audioanalyticsd"))
								(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
								(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
								(require-not (global-name "com.apple.linkd.autoShortcut"))
								(require-not (global-name "com.apple.backboard.hid-services.xpc"))
								(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
								(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
								(require-not (global-name "com.apple.UIKit.pasteboardd"))
								(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
								(require-not (global-name "com.apple.usernotifications.listener"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
								(require-not (global-name "com.apple.coremedia.sts"))
								(require-not (global-name "com.apple.NPKCompanionAgent.library"))
								(require-not (global-name "com.apple.itunescloudd.xpc"))
								(require-not (global-name "com.apple.callkit.callcontrollerhost"))
								(require-not (global-name "com.apple.frontboard.systemappservices"))
								(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
								(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
								(require-not (global-name "com.apple.TextInput.rdt"))
								(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
								(require-not (local-name "com.apple.assistant.contextprovider."))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))))
					(require-all
						(global-name "com.apple.SystemConfiguration.PPPController-priv")
						(require-not (entitlement-is-present com.apple.networking.vpn.configuration)))
					(require-all
						(require-not (global-name "com.apple.locationd.synchronous"))
						(require-not (global-name "com.apple.locationd.registration"))
						(require-not (global-name "com.apple.locationd.spi"))
						(require-not (global-name "com.apple.calaccessd"))
						(require-not (global-name "com.apple.calaccessd.xpc"))
						(require-all (require-not (global-name "com.apple.accountsd.authmanager"))
(require-not (global-name "com.apple.accountsd.accessmanager")))
						(require-not (global-name "com.apple.healthd.restriction"))
						(require-not (global-name "com.apple.twitterd.server"))
						(require-not (global-name "com.apple.accountsd.oauthsigner"))
						(require-not (global-name "com.apple.healthd.server"))
						(require-not (global-name "com.apple.twitterd"))
						(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
						(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
						(require-not (global-name "com.apple.spotlight.IndexAgent"))
						(require-not (global-name "com.apple.ABDatabaseDoctor"))
						(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
						(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
						(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
						(require-not (extension com.apple.sandbox.application-group))
						(require-any
							(require-all
								(global-name "com.apple.SafetyKit")
								(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.weatherkit.authservice")
								(require-not (entitlement-is-present com.apple.developer.weatherkit))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(debug-mode)
								(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
							(require-all
								(global-name "com.apple.merchantd.identity")
								(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
								(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.gputools.service")
								(require-not (debug-mode))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.seserviced.credential.manager")
								(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.merchantd.discovery")
								(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
								(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
								(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.callkit.networkextension.voip")
								(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.financed.service.coredatastore")
								(require-not (entitlement-is-present com.apple.finance.private))
								(require-not (entitlement-is-present com.apple.developer.financekit))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.MomentsUIService")
								(require-not (entitlement-is-present com.apple.developer.journal.allow))
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.assessmentagent")
								(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-not (global-name "com.apple.SharedWebCredentials"))
								(require-not (global-name "com.apple.dataaccess.dataaccessd"))
								(require-not (global-name "com.apple.exchangesyncd"))
								(require-not (xpc-service-name "com.apple.ctcategories.service"))
								(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
							(require-all
								(global-name "com.apple.ThreadNetwork.xpc")
								(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.messages.critical-messaging")
								(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.coreidvd.digital-presentment.xpc")
								(require-any
									(require-all
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
										(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
							(require-all
								(global-name "com.apple.ExposureNotification")
								(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.seserviced.session")
								(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))
							(require-all
								(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
								(require-any
									(require-all
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(debug-mode)
										(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
							(require-all
								(require-not (global-name "com.apple.sharingd.nsxpc"))
								(require-not (global-name "com.apple.vibrationmanagerd"))
								(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
								(require-not (global-name "com.apple.passd.library"))
								(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
								(require-not (global-name "com.apple.mediaserverd"))
								(require-not (global-name "com.apple.voiceservices.tts"))
								(require-not (global-name "com.apple.mobileasset.autoasset"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
								(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
								(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
								(require-not (global-name "com.apple.accessories.transport-server"))
								(require-not (global-name "com.apple.librariand"))
								(require-not (global-name "com.apple.audio.AudioConverterService"))
								(require-not (global-name "com.apple.mobileassetd"))
								(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
								(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
								(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
								(require-not (global-name "com.apple.UIKit.statusbarserver"))
								(require-not (global-name "com.apple.bird"))
								(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
								(require-not (global-name "com.apple.assistant.dictation"))
								(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
								(require-not (global-name "com.apple.nanoprefsync"))
								(require-not (global-name "com.apple.DeviceAccess.xpc"))
								(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
								(require-not (global-name "com.apple.TextInput.lexicon-server"))
								(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
								(require-not (global-name "com.apple.audio.AudioQueueServer"))
								(require-not (global-name "com.apple.mediaremoted.xpc"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
								(require-not (global-name "com.apple.backboard.display.services"))
								(require-not (global-name "com.apple.FileCoordination"))
								(require-not (global-name "com.apple.CARenderServer"))
								(require-not (global-name "com.apple.seserviced.passkit-extensions"))
								(require-not (global-name "com.apple.audio.AudioSession"))
								(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
								(require-not (global-name "com.apple.cloudasset.cloudd"))
								(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
								(require-not (global-name "com.apple.TextInput.preferences"))
								(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
								(require-not (global-name "com.apple.mobileassetd.v2"))
								(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
								(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
								(require-not (global-name "com.apple.bird.token"))
								(require-not (global-name "com.apple.assetsd.changehub"))
								(require-not (global-name "com.apple.linkd.transcript"))
								(require-not (global-name "com.apple.revisiond"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
								(require-not (global-name "com.apple.springboard.backgroundappservices"))
								(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
								(require-not (global-name "com.apple.iconservices"))
								(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
								(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
								(require-not (global-name "com.apple.ckdiscretionaryd"))
								(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
								(require-not (global-name "com.apple.accessories.externalaccessory-server"))
								(require-not (global-name "com.apple.springboard.services"))
								(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
								(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
								(require-not (global-name "com.apple.photos.service"))
								(require-not (global-name "com.apple.accessibility.gax.backboard"))
								(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
								(require-not (global-name "com.apple.itunesstored.xpc"))
								(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
								(require-not (global-name "com.apple.backboard.hid.services"))
								(require-not (global-name "com.apple.voiceservices.keepalive"))
								(require-not (global-name "com.apple.assistant.analytics"))
								(require-not (global-name "com.apple.coremedia.videocompositor"))
								(require-not (global-name "com.apple.FileProvider"))
								(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
								(require-not (global-name "com.apple.frontboard.workspace"))
								(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
								(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
								(require-not (global-name "com.apple.pasteboard.pasted"))
								(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
								(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
								(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
								(require-not (global-name "com.apple.audio.AURemoteIOServer"))
								(require-not (global-name "com.apple.coremedia.admin"))
								(require-not (global-name "com.apple.cloudd"))
								(require-not (global-name "com.apple.coremedia.asset.xpc"))
								(require-not (global-name "com.apple.iohideventsystem"))
								(require-not (global-name "com.apple.pegasus"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
								(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
								(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
								(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
								(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
								(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
								(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
								(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
								(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
								(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
								(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
								(require-not (global-name "com.apple.privacyaccountingd"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
								(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
								(require-not (global-name "com.apple.iphone.axserver-systemwide"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
								(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
								(require-not (global-name "com.apple.dt.automationmode.reader"))
								(require-not (global-name "com.apple.TextInput"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
								(require-not (global-name "com.apple.TextInput.image-cache-server"))
								(require-not (global-name "com.apple.coremedia.sandboxserver"))
								(require-not (global-name "com.apple.audio.hapticd"))
								(require-not (global-name "com.apple.timesync.ptp.manager"))
								(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
								(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
								(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
								(require-not (global-name "com.apple.coremedia.player.xpc"))
								(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
								(require-not (global-name "com.apple.audioanalyticsd"))
								(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
								(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
								(require-not (global-name "com.apple.linkd.autoShortcut"))
								(require-not (global-name "com.apple.backboard.hid-services.xpc"))
								(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
								(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
								(require-not (global-name "com.apple.UIKit.pasteboardd"))
								(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
								(require-not (global-name "com.apple.usernotifications.listener"))
								(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
								(require-not (global-name "com.apple.coremedia.sts"))
								(require-not (global-name "com.apple.NPKCompanionAgent.library"))
								(require-not (global-name "com.apple.itunescloudd.xpc"))
								(require-not (global-name "com.apple.callkit.callcontrollerhost"))
								(require-not (global-name "com.apple.frontboard.systemappservices"))
								(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
								(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
								(require-not (global-name "com.apple.TextInput.rdt"))
								(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
								(require-not (local-name "com.apple.assistant.contextprovider."))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(require-all
										(xpc-service-name-regex #".+")
										(require-any
											(require-all
												(global-name "com.apple.system.notification_center")
												(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
											(require-all
												(global-name "com.apple.lsd.openurl")
												(global-name "com.apple.tccd")
												(global-name "com.apple.lsd.advertisingidentifiers"))))
									(require-all
										(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
										(require-not (global-name "com.apple.uikit.viewservice.")))))))
					(require-all
						(global-name "com.apple.siri.vocabularyupdates")
						(require-not (entitlement-is-bool-true com.apple.developer.siri))
						(require-not (entitlement-is-bool-true com.apple.siri.synapse)))
					(require-all
						(global-name "com.apple.identityservicesd.embedded.auth")
						(require-not (signing-identifier "com.apple.Bridge"))
						(require-any
							(require-all
								(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
								(require-any
									(require-all
										(global-name "com.apple.SafetyKit")
										(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.weatherkit.authservice")
										(require-not (entitlement-is-present com.apple.developer.weatherkit))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(debug-mode)
										(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
									(require-all
										(global-name "com.apple.merchantd.identity")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.gputools.service")
										(require-not (debug-mode))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.credential.manager")
										(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.merchantd.discovery")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.callkit.networkextension.voip")
										(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.financed.service.coredatastore")
										(require-not (entitlement-is-present com.apple.finance.private))
										(require-not (entitlement-is-present com.apple.developer.financekit))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.MomentsUIService")
										(require-not (entitlement-is-present com.apple.developer.journal.allow))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.assessmentagent")
										(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.SharedWebCredentials"))
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.ThreadNetwork.xpc")
										(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.messages.critical-messaging")
										(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.coreidvd.digital-presentment.xpc")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
												(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
									(require-all
										(global-name "com.apple.ExposureNotification")
										(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.session")
										(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(debug-mode)
												(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
									(require-all
										(require-not (global-name "com.apple.sharingd.nsxpc"))
										(require-not (global-name "com.apple.vibrationmanagerd"))
										(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
										(require-not (global-name "com.apple.passd.library"))
										(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
										(require-not (global-name "com.apple.mediaserverd"))
										(require-not (global-name "com.apple.voiceservices.tts"))
										(require-not (global-name "com.apple.mobileasset.autoasset"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
										(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
										(require-not (global-name "com.apple.accessories.transport-server"))
										(require-not (global-name "com.apple.librariand"))
										(require-not (global-name "com.apple.audio.AudioConverterService"))
										(require-not (global-name "com.apple.mobileassetd"))
										(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
										(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
										(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
										(require-not (global-name "com.apple.UIKit.statusbarserver"))
										(require-not (global-name "com.apple.bird"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
										(require-not (global-name "com.apple.assistant.dictation"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
										(require-not (global-name "com.apple.nanoprefsync"))
										(require-not (global-name "com.apple.DeviceAccess.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
										(require-not (global-name "com.apple.TextInput.lexicon-server"))
										(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
										(require-not (global-name "com.apple.audio.AudioQueueServer"))
										(require-not (global-name "com.apple.mediaremoted.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
										(require-not (global-name "com.apple.backboard.display.services"))
										(require-not (global-name "com.apple.FileCoordination"))
										(require-not (global-name "com.apple.CARenderServer"))
										(require-not (global-name "com.apple.seserviced.passkit-extensions"))
										(require-not (global-name "com.apple.audio.AudioSession"))
										(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
										(require-not (global-name "com.apple.cloudasset.cloudd"))
										(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
										(require-not (global-name "com.apple.TextInput.preferences"))
										(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
										(require-not (global-name "com.apple.mobileassetd.v2"))
										(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
										(require-not (global-name "com.apple.bird.token"))
										(require-not (global-name "com.apple.assetsd.changehub"))
										(require-not (global-name "com.apple.linkd.transcript"))
										(require-not (global-name "com.apple.revisiond"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
										(require-not (global-name "com.apple.springboard.backgroundappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
										(require-not (global-name "com.apple.iconservices"))
										(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
										(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
										(require-not (global-name "com.apple.ckdiscretionaryd"))
										(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
										(require-not (global-name "com.apple.accessories.externalaccessory-server"))
										(require-not (global-name "com.apple.springboard.services"))
										(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
										(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.photos.service"))
										(require-not (global-name "com.apple.accessibility.gax.backboard"))
										(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
										(require-not (global-name "com.apple.itunesstored.xpc"))
										(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
										(require-not (global-name "com.apple.backboard.hid.services"))
										(require-not (global-name "com.apple.voiceservices.keepalive"))
										(require-not (global-name "com.apple.assistant.analytics"))
										(require-not (global-name "com.apple.coremedia.videocompositor"))
										(require-not (global-name "com.apple.FileProvider"))
										(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
										(require-not (global-name "com.apple.frontboard.workspace"))
										(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
										(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.pasteboard.pasted"))
										(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
										(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
										(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
										(require-not (global-name "com.apple.audio.AURemoteIOServer"))
										(require-not (global-name "com.apple.coremedia.admin"))
										(require-not (global-name "com.apple.cloudd"))
										(require-not (global-name "com.apple.coremedia.asset.xpc"))
										(require-not (global-name "com.apple.iohideventsystem"))
										(require-not (global-name "com.apple.pegasus"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
										(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
										(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
										(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
										(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
										(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
										(require-not (global-name "com.apple.privacyaccountingd"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
										(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.iphone.axserver-systemwide"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
										(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
										(require-not (global-name "com.apple.dt.automationmode.reader"))
										(require-not (global-name "com.apple.TextInput"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
										(require-not (global-name "com.apple.TextInput.image-cache-server"))
										(require-not (global-name "com.apple.coremedia.sandboxserver"))
										(require-not (global-name "com.apple.audio.hapticd"))
										(require-not (global-name "com.apple.timesync.ptp.manager"))
										(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
										(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
										(require-not (global-name "com.apple.coremedia.player.xpc"))
										(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
										(require-not (global-name "com.apple.audioanalyticsd"))
										(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
										(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
										(require-not (global-name "com.apple.linkd.autoShortcut"))
										(require-not (global-name "com.apple.backboard.hid-services.xpc"))
										(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
										(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
										(require-not (global-name "com.apple.UIKit.pasteboardd"))
										(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
										(require-not (global-name "com.apple.usernotifications.listener"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
										(require-not (global-name "com.apple.coremedia.sts"))
										(require-not (global-name "com.apple.NPKCompanionAgent.library"))
										(require-not (global-name "com.apple.itunescloudd.xpc"))
										(require-not (global-name "com.apple.callkit.callcontrollerhost"))
										(require-not (global-name "com.apple.frontboard.systemappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
										(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
										(require-not (global-name "com.apple.TextInput.rdt"))
										(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
										(require-not (local-name "com.apple.assistant.contextprovider."))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))))
							(require-all
								(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
								(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
								(require-not (global-name "com.apple.spotlight.IndexAgent"))
								(require-not (global-name "com.apple.ABDatabaseDoctor"))
								(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
								(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
								(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
								(require-not (extension com.apple.sandbox.application-group))
								(require-any
									(require-all
										(global-name "com.apple.SafetyKit")
										(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.weatherkit.authservice")
										(require-not (entitlement-is-present com.apple.developer.weatherkit))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(debug-mode)
										(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
									(require-all
										(global-name "com.apple.merchantd.identity")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.gputools.service")
										(require-not (debug-mode))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.credential.manager")
										(require-not (entitlement-is-present com.apple.developer.secure-element-credential))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.merchantd.discovery")
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
										(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.callkit.networkextension.voip")
										(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.financed.service.coredatastore")
										(require-not (entitlement-is-present com.apple.finance.private))
										(require-not (entitlement-is-present com.apple.developer.financekit))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.MomentsUIService")
										(require-not (entitlement-is-present com.apple.developer.journal.allow))
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.assessmentagent")
										(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-not (global-name "com.apple.SharedWebCredentials"))
										(require-not (global-name "com.apple.dataaccess.dataaccessd"))
										(require-not (global-name "com.apple.exchangesyncd"))
										(require-not (xpc-service-name "com.apple.ctcategories.service"))
										(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
									(require-all
										(global-name "com.apple.ThreadNetwork.xpc")
										(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.messages.critical-messaging")
										(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.coreidvd.digital-presentment.xpc")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
												(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
									(require-all
										(global-name "com.apple.ExposureNotification")
										(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.seserviced.session")
										(require-not (entitlement-is-bool-true com.apple.developer.carkey.session))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))
									(require-all
										(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
										(require-any
											(require-all
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.iconservices"))
												(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
												(require-not (xpc-service-name "com.apple.audio.analytics.service"))
												(require-not (xpc-service-name))
												(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
												(require-not (xpc-service-name "com.apple.tonelibraryd"))
												(require-any
													(global-name "com.apple.ckdiscretionaryd.debug")
													(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
													(global-name "com.apple.cloudkit.partlycloudd")
													(require-all
														(xpc-service-name-regex #".+")
														(require-any
															(require-all
																(global-name "com.apple.system.notification_center")
																(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
															(require-all
																(global-name "com.apple.lsd.openurl")
																(global-name "com.apple.tccd")
																(global-name "com.apple.lsd.advertisingidentifiers"))))
													(require-all
														(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
														(require-not (global-name "com.apple.uikit.viewservice.")))))
											(require-all
												(debug-mode)
												(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
									(require-all
										(require-not (global-name "com.apple.sharingd.nsxpc"))
										(require-not (global-name "com.apple.vibrationmanagerd"))
										(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
										(require-not (global-name "com.apple.passd.library"))
										(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
										(require-not (global-name "com.apple.mediaserverd"))
										(require-not (global-name "com.apple.voiceservices.tts"))
										(require-not (global-name "com.apple.mobileasset.autoasset"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
										(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
										(require-not (global-name "com.apple.accessories.transport-server"))
										(require-not (global-name "com.apple.librariand"))
										(require-not (global-name "com.apple.audio.AudioConverterService"))
										(require-not (global-name "com.apple.mobileassetd"))
										(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
										(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
										(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
										(require-not (global-name "com.apple.UIKit.statusbarserver"))
										(require-not (global-name "com.apple.bird"))
										(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
										(require-not (global-name "com.apple.assistant.dictation"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
										(require-not (global-name "com.apple.nanoprefsync"))
										(require-not (global-name "com.apple.DeviceAccess.xpc"))
										(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
										(require-not (global-name "com.apple.TextInput.lexicon-server"))
										(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
										(require-not (global-name "com.apple.audio.AudioQueueServer"))
										(require-not (global-name "com.apple.mediaremoted.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
										(require-not (global-name "com.apple.backboard.display.services"))
										(require-not (global-name "com.apple.FileCoordination"))
										(require-not (global-name "com.apple.CARenderServer"))
										(require-not (global-name "com.apple.seserviced.passkit-extensions"))
										(require-not (global-name "com.apple.audio.AudioSession"))
										(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
										(require-not (global-name "com.apple.cloudasset.cloudd"))
										(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
										(require-not (global-name "com.apple.TextInput.preferences"))
										(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
										(require-not (global-name "com.apple.mobileassetd.v2"))
										(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
										(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
										(require-not (global-name "com.apple.bird.token"))
										(require-not (global-name "com.apple.assetsd.changehub"))
										(require-not (global-name "com.apple.linkd.transcript"))
										(require-not (global-name "com.apple.revisiond"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
										(require-not (global-name "com.apple.springboard.backgroundappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
										(require-not (global-name "com.apple.iconservices"))
										(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
										(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
										(require-not (global-name "com.apple.ckdiscretionaryd"))
										(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
										(require-not (global-name "com.apple.accessories.externalaccessory-server"))
										(require-not (global-name "com.apple.springboard.services"))
										(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
										(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.photos.service"))
										(require-not (global-name "com.apple.accessibility.gax.backboard"))
										(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
										(require-not (global-name "com.apple.itunesstored.xpc"))
										(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
										(require-not (global-name "com.apple.backboard.hid.services"))
										(require-not (global-name "com.apple.voiceservices.keepalive"))
										(require-not (global-name "com.apple.assistant.analytics"))
										(require-not (global-name "com.apple.coremedia.videocompositor"))
										(require-not (global-name "com.apple.FileProvider"))
										(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
										(require-not (global-name "com.apple.frontboard.workspace"))
										(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
										(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.pasteboard.pasted"))
										(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
										(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
										(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
										(require-not (global-name "com.apple.audio.AURemoteIOServer"))
										(require-not (global-name "com.apple.coremedia.admin"))
										(require-not (global-name "com.apple.cloudd"))
										(require-not (global-name "com.apple.coremedia.asset.xpc"))
										(require-not (global-name "com.apple.iohideventsystem"))
										(require-not (global-name "com.apple.pegasus"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
										(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
										(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
										(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
										(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
										(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
										(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
										(require-not (global-name "com.apple.privacyaccountingd"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
										(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
										(require-not (global-name "com.apple.iphone.axserver-systemwide"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
										(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
										(require-not (global-name "com.apple.dt.automationmode.reader"))
										(require-not (global-name "com.apple.TextInput"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
										(require-not (global-name "com.apple.TextInput.image-cache-server"))
										(require-not (global-name "com.apple.coremedia.sandboxserver"))
										(require-not (global-name "com.apple.audio.hapticd"))
										(require-not (global-name "com.apple.timesync.ptp.manager"))
										(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
										(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
										(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
										(require-not (global-name "com.apple.coremedia.player.xpc"))
										(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
										(require-not (global-name "com.apple.audioanalyticsd"))
										(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
										(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
										(require-not (global-name "com.apple.linkd.autoShortcut"))
										(require-not (global-name "com.apple.backboard.hid-services.xpc"))
										(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
										(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
										(require-not (global-name "com.apple.UIKit.pasteboardd"))
										(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
										(require-not (global-name "com.apple.usernotifications.listener"))
										(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
										(require-not (global-name "com.apple.coremedia.sts"))
										(require-not (global-name "com.apple.NPKCompanionAgent.library"))
										(require-not (global-name "com.apple.itunescloudd.xpc"))
										(require-not (global-name "com.apple.callkit.callcontrollerhost"))
										(require-not (global-name "com.apple.frontboard.systemappservices"))
										(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
										(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
										(require-not (global-name "com.apple.TextInput.rdt"))
										(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
										(require-not (local-name "com.apple.assistant.contextprovider."))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.iconservices"))
										(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
										(require-not (xpc-service-name "com.apple.audio.analytics.service"))
										(require-not (xpc-service-name))
										(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
										(require-not (xpc-service-name "com.apple.tonelibraryd"))
										(require-any
											(global-name "com.apple.ckdiscretionaryd.debug")
											(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
											(global-name "com.apple.cloudkit.partlycloudd")
											(require-all
												(xpc-service-name-regex #".+")
												(require-any
													(require-all
														(global-name "com.apple.system.notification_center")
														(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
													(require-all
														(global-name "com.apple.lsd.openurl")
														(global-name "com.apple.tccd")
														(global-name "com.apple.lsd.advertisingidentifiers"))))
											(require-all
												(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
												(require-not (global-name "com.apple.uikit.viewservice.")))))))))
					(require-all
						(global-name "com.apple.familycircle.agent")
						(require-not (entitlement-is-bool-true com.apple.private.familycircle)))
					(require-all
						(global-name "com.apple.icloud.findmydeviced")
						(require-not (entitlement-is-bool-true com.apple.icloud.findmydeviced.access))
						(require-not (entitlement-is-bool-true com.apple.aosnotification.aosnotifyd-access)))
					(require-all
						(global-name "com.apple.AOSNotification")
						(require-not (entitlement-is-bool-true com.apple.aosnotification.aosnotifyd-access)))
					(require-all
						(global-name "com.apple.mobilestoredemod")
						(require-not (entitlement-is-present com.apple.private.mobilestoredemo.enabledemo)))
					(require-all
						(global-name "com.apple.telephonyutilities.callservicesdaemon.ptt")
						(require-not (entitlement-is-bool-true com.apple.developer.push-to-talk)))
					(require-all
						(global-name "com.apple.merchantd.transaction")
						(require-not (entitlement-is-bool-true com.apple.developer.proximity-reader.payment.acceptance))
						(require-not (entitlement-is-bool-true com.apple.developer.proximity-reader.payment.acceptance-development)))
					(require-all
						(global-name "com.apple.personad.xpc")
						(require-not (entitlement-is-bool-true com.apple.private.persona.write))
						(require-not (entitlement-is-bool-true com.apple.private.persona.read))
						(require-not (entitlement-is-bool-true com.apple.private.contactsui)))
					(require-all
						(global-name "com.apple.VideoSubscriberAccount.videosubscriptionsd")
						(require-not (entitlement-is-bool-true com.apple.private.subscriptionservice.internal))
						(require-not (entitlement-is-bool-true com.apple.private.subscriptionservice.web-sources.read-write))
						(require-not (entitlement-is-bool-true com.apple.smoot.subscriptionservice))
						(require-not (entitlement-is-bool-true com.apple.developer.video-subscription-registration))
						(require-not (entitlement-is-bool-true com.apple.private.subscriptionservice.all-sources.read-only)))
					(require-all
						(global-name "com.apple.cache_delete")
						(require-not (entitlement-is-bool-true com.apple.mobile.deleted.AllowFreeSpace))
						(require-not (entitlement-is-present com.apple.private.CacheDelete)))
					(require-all
						(global-name "com.apple.powerlog.plxpclogger.xpc")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(global-name "com.apple.iokit.powerdxpc")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(global-name "com.apple.PowerManagement.control")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(global-name "com.apple.identityservicesd.embedded.auth")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(global-name "com.apple.nanoprefsync")
						(require-not (signing-identifier "com.apple.Music")))
					(require-all
						(global-name "com.apple.FileCoordination")
						(require-not (signing-identifier "com.apple.Music"))))))))
(deny mach-register
	(require-all
		(global-name "com.apple.Music.MPMusicPlayerControllerInternal")
		(require-not (signing-identifier "com.apple.Music")))
	(require-all
		(global-name "com.apple.Music.MPMusicPlayerMigServerExists")
		(require-not (signing-identifier "com.apple.Music")))
	(require-all
		(require-not (extension com.apple.security.exception.mach-register.local-name))
		(require-not (extension com.apple.security.exception.mach-register.global-name))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
				(local-name "com.apple.iphone.axserver")
				(local-name "com.apple.assistant.contextprovider.")
				(local-name "com.apple.accessibility.gax.client"))
			(require-all
				(extension com.apple.sandbox.application-group)
				(local-name "com.apple.iphone.axserver")
				(local-name "com.apple.assistant.contextprovider.")
				(local-name "com.apple.accessibility.gax.client")))))
(deny network-inbound
	(require-all
		(require-not (local ip "*:*"))
		(require-not (entitlement-is-bool-true com.apple.developer.networking.multicast))
		(require-any
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.app-sandbox.read-write)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents")))
			(require-all
				(literal "/private/var/")
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/tmp/ubiquity.socket")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/tmp/ubiquity.socket")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(subpath-prefix "${FRONT_USER_HOME}")))))))
(deny network-outbound
	(require-all
		(require-not (control-name "com.apple.flow-divert"))
		(require-any
			(remote tcp "localhost:873")
			(remote tcp "localhost:62078")
			(remote tcp "localhost:22")
			(remote tcp "localhost:23")
			(require-all
				(extension com.apple.app-sandbox.read-write)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents")))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.sandbox.container)
				(literal "/private/var/")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))))
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (literal "/private/var/run/lockdown.sock")))
			(require-all
				(require-not (control-name "com.apple.netsrc"))
				(require-not (control-name "com.apple.network.statistics"))
				(require-not (remote ip "*:*"))
				(require-not (remote udp "*:443"))
				(require-not (literal "/private/var/run/mDNSResponder"))
				(require-any
					(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
					(require-all
						(vnode-type SOCKET)
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}"))))))))
(deny process-info-codesignature
	(process-attribute is-apple-signed-executable)
	(require-all
		(target others)
		(require-not (entitlement-is-bool-true com.apple.DiagnosticExtensions.extension))))
(deny process-info-pidinfo
	(require-all
		(target others)
		(require-not (signing-identifier "com.apple.webbookmarksd"))
		(entitlement-is-bool-true com.apple.DiagnosticExtensions.extension)))
(deny signal
	(require-not (target self)))
(deny sysctl-read
	(require-all
		(require-not (sysctl-name "net.statistics"))
		(require-not (sysctl-name "net.routetable."))
		(require-all (require-not (sysctl-name "kern.nisdomainname"))
(require-not (sysctl-name "kern.ipc.maxsockbuf")))
		(require-any
			(require-all
				(sysctl-name "kern.proc.all")
				(signing-identifier "com.apple.webbookmarksd")
				(entitlement-is-bool-true com.apple.DiagnosticExtensions.extension))
			(require-all
				(sysctl-name "kern.bootsessionuuid")
				(signing-identifier "com.apple."))
			(require-all
				(require-any (sysctl-name "kern.proc.")
(sysctl-name "kern.procargs2."))
				(entitlement-is-bool-true com.apple.DiagnosticExtensions.extension)))))
(deny system-fsctl
	(require-all
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 72)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 93)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "h" 32)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "h" 31)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 32)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 3)))
		(require-any
			(require-all
				(fsctl-command-regex [UNSUPPORTED](_IO "J" 71))
				(require-all (require-not (signing-identifier "com.apple.TVMusic"))
(require-not (signing-identifier "com.apple.nowplaying")))
				(require-not (signing-identifier "com.apple.Music"))
				(require-any
					(require-all
						(fsctl-command-regex [UNSUPPORTED](_IO "J" 2))
						(signing-identifier "com.apple.FileProvider.LocalStorage"))
					(require-all
						(fsctl-command-regex [UNSUPPORTED](_IO "J" 32))
						(signing-identifier "com.apple.FileProvider.LocalStorage"))))
			(require-all
				(fsctl-command-regex [UNSUPPORTED](_IO "J" 2))
				(require-all (require-not (signing-identifier "com.apple.TVMusic"))
(require-not (signing-identifier "com.apple.nowplaying")))
				(require-not (signing-identifier "com.apple.Music"))
				(require-any
					(require-all
						(fsctl-command-regex [UNSUPPORTED](_IO "J" 2))
						(signing-identifier "com.apple.FileProvider.LocalStorage"))
					(require-all
						(fsctl-command-regex [UNSUPPORTED](_IO "J" 32))
						(signing-identifier "com.apple.FileProvider.LocalStorage"))))
			(require-all
				(fsctl-command-regex [UNSUPPORTED](_IO "J" 68))
				(require-all (require-not (signing-identifier "com.apple.TVMusic"))
(require-not (signing-identifier "com.apple.nowplaying")))
				(require-not (signing-identifier "com.apple.Music"))
				(require-any
					(require-all
						(fsctl-command-regex [UNSUPPORTED](_IO "J" 2))
						(signing-identifier "com.apple.FileProvider.LocalStorage"))
					(require-all
						(fsctl-command-regex [UNSUPPORTED](_IO "J" 32))
						(signing-identifier "com.apple.FileProvider.LocalStorage"))))
			(require-all
				(fsctl-command-regex [UNSUPPORTED](_IO "h" 24))
				(signing-identifier "com.apple.CloudDocs.FileProvider"))
			(require-all
				(fsctl-command-regex [UNSUPPORTED](_IO "h" 29))
				(signing-identifier "com.apple.camera.CameraMessagesApp"))
			(require-all
				(fsctl-command-regex [UNSUPPORTED](_IO "J" 14))
				(signing-identifier "com.apple.DocumentsApp"))
			(require-all
				(fsctl-command-regex [UNSUPPORTED](_IO "h" 28))
				(signing-identifier "com.apple.camera.CameraMessagesApp"))
			(require-all
				(fsctl-command-regex [UNSUPPORTED](_IO "J" 18))
				(signing-identifier "com.apple.camera.CameraMessagesApp"))
			(require-all
				(fsctl-command-regex [UNSUPPORTED](_IO "h" 27))
				(signing-identifier "com.apple.camera.CameraMessagesApp")))))
(deny system-info
	(require-all
		(info-type "net.link.addr")
		(require-not (entitlement-is-bool-true com.apple.system.get-hardware-identifiers))
		(require-not (entitlement-is-bool-true com.apple.wifi.manager-access))
		(entitlement-is-present fairplay-client)
		(entitlement-is-present com.apple.private.MobileGestalt.AllowedProtectedKeys)))
(deny system-kas-info)
(deny system-package-check
	(signing-identifier "com.apple.FileProvider.LocalStorage"))
(deny system-socket
	(require-all
		(require-not (socket-domain 39))
		(require-not (socket-domain AF_ROUTE))
		(require-not (signing-identifier "com.apple.TVSystemUIService"))
		(socket-domain AF_SYSTEM)
		(socket-protocol 2)))
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.dataaccess.dataaccessd"))
		(require-not (preference-domain "com.apple.appleaccount"))
		(require-all (require-not (preference-domain "mediaremote"))
(require-not (preference-domain "itdbprepserver"))
(require-not (preference-domain "com.apple.nike"))
(require-not (preference-domain "com.apple.certui"))
(require-not (preference-domain "com.apple.XCTest"))
(require-not (preference-domain "com.apple.iqagent"))
(require-not (preference-domain "com.apple.gamekit"))
(require-not (preference-domain "com.apple.voicemail"))
(require-not (preference-domain "com.apple.adtracking"))
(require-not (preference-domain "com.apple.preferences.network"))
(require-not (preference-domain "com.apple.preferences.datetime"))
(require-not (preference-domain "com.apple.messagesbadgecontroller"))
(require-not (preference-domain "com.apple.managedconfiguration.janitor"))
(require-not (preference-domain "com.apple.mobiletimer"))
(require-not (preference-domain "com.apple.mobilestoresettings"))
(require-not (preference-domain "com.apple.mobile.SyncMigrator"))
(require-not (preference-domain "com.apple.mobileme.fmf.assistant")))
		(require-not (preference-domain "com.apple.aggregated"))
		(require-not (preference-domain "com.apple.LaunchServices"))
		(require-not (preference-domain "com.apple.Metal"))
		(require-not (preference-domain "com.apple.lookup.shared"))
		(require-not (preference-domain "com.apple.corevideo"))
		(require-not (preference-domain "com.apple.persistentconnection-mcc"))
		(require-not (preference-domain "com.apple.UIKit"))
		(require-not (preference-domain "com.apple.assistant.support"))
		(require-not (preference-domain "com.apple.AdLib"))
		(require-not (preference-domain "com.apple.CoreMotion"))
		(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
		(require-not (preference-domain "com.apple.nanoprefsyncd"))
		(require-not (preference-domain "com.apple.VoiceOverTouch"))
		(require-all (require-not (preference-domain "com.apple.SwiftUI"))
(require-not (preference-domain "com.apple.morphology"))
(require-not (preference-domain "com.apple.LinearMediaKit"))
(require-not (preference-domain "com.apple.MapKit.internal"))
(require-not (preference-domain "com.apple.Accessibility.speech")))
		(require-not (preference-domain "com.apple.imessage"))
		(require-not (preference-domain "com.apple.imdsmsrecordstore"))
		(require-not (preference-domain "com.apple.apsd"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.marco"))
		(require-not (preference-domain "com.apple.mmcs"))
		(require-not (preference-domain "com.apple.mms_override"))
		(require-not (preference-domain "com.apple.WebUI"))
		(require-not (preference-domain "com.apple.videos"))
		(require-not (preference-domain "com.apple.coremedia"))
		(require-not (preference-domain "com.apple.CloudKit"))
		(require-not (preference-domain "com.apple.ConfigServer"))
		(require-not (preference-domain "com.apple.coreaudio"))
		(require-not (preference-domain "com.apple.itdbprep.server"))
		(require-not (preference-domain "com.apple.mobilenotes"))
		(require-not (preference-domain "com.apple.GEO"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.WebFoundation"))
		(require-not (preference-domain "com.apple.assistant.backedup"))
		(require-not (preference-domain "com.apple.webinspectord"))
		(require-not (preference-domain "com.apple.celestial"))
		(require-not (preference-domain "com.apple.mediaaccessibility"))
		(require-not (preference-domain "com.apple.softwareupdateservicesd"))
		(require-not (preference-domain "com.apple.avkit"))
		(require-not (preference-domain "com.apple.MobileAsset"))
		(require-not (preference-domain "com.apple.mobileipod"))
		(require-not (preference-domain "com.apple.camera"))
		(require-not (preference-domain "kCFPreferencesAnyApplication"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.DataDeliveryServices"))
		(require-not (preference-domain "com.apple.GameController"))
		(require-not (preference-domain "com.apple.mediaremote"))
		(require-not (preference-domain "com.apple.telephonyutilities.dialassist"))
		(require-not (preference-domain "com.apple.InputModePreferences"))
		(require-not (preference-domain "com.apple.airplay"))
		(require-not (preference-domain "com.apple.atc"))
		(require-not (preference-domain "com.apple.SpeakSelection"))
		(require-all (require-not (preference-domain "com.apple.mobilevpn"))
(require-not (preference-domain "com.apple.network.eapclient.tls.TrustExceptions")))
		(require-not (preference-domain "com.apple.keyboard"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.youtubeframework"))
		(require-not (preference-domain "com.apple.imagent"))
		(require-not (preference-domain "com.apple.preferences-sounds"))
		(require-not (preference-domain "com.apple.avfoundation"))
		(require-not (preference-domain "com.apple.compass"))
		(require-not (preference-domain "com.apple.ubd"))
		(require-not (preference-domain "com.apple.mobileslideshow"))
		(require-not (preference-domain "com.apple.indigo"))
		(require-not (preference-domain "com.apple.OTASyncState"))
		(require-not (preference-domain "com.apple.keyboard.preferences"))
		(require-not (preference-domain "com.apple.opengl"))
		(require-not (preference-domain "com.apple.Accessibility"))
		(require-not (preference-domain "com.apple.Wallet.public"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.mt"))
		(require-not (preference-domain "com.apple.PencilKit"))
		(require-not (preference-domain "com.apple.voiceservices"))
		(require-not (preference-domain "com.apple.iclouddrive.features"))
		(require-not (preference-domain "com.apple.TTY"))
		(require-not (preference-domain "com.apple.AOSNotification.public.notbackedup"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.GMM"))
		(require-not (preference-domain "com.apple.avfoundation.videoperformancehud"))
		(require-not (preference-domain "com.apple.preferences.sounds"))
		(require-not (preference-domain "com.apple.gamed"))
		(require-not (preference-domain "com.apple.coreanimation"))
		(require-not (preference-domain "com.apple.persistentconnection"))
		(require-not (preference-domain "com.apple.iapd"))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
				(require-any
					(require-all
						(preference-domain "com.apple.itunesstored")
						(require-any
							(require-all
								(process-attribute is-apple-signed-executable)
								(entitlement-is-bool-true com.apple.itunesstored.private))
							(require-all
								(require-not (signing-identifier "com.apple.itunesu"))
								(require-not (signing-identifier "com.apple.mobilesafari"))
								(require-not (signing-identifier "com.apple.iBooks"))
								(require-not (entitlement-is-bool-true com.apple.container2))
								(process-attribute is-apple-signed-executable)
								(require-not (entitlement-is-bool-true com.apple.itunesstored.private))
								(require-not (signing-identifier "com.apple.mobilemail"))
								(extension com.apple.tcc.kTCCServicePhotos))))
					(require-all
						(preference-domain "com.apple.DataAccess.BehaviorOptions")
						(process-attribute is-apple-signed-executable))
					(require-all
						(preference-domain "com.apple.springboard")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(require-not (entitlement-is-bool-true com.apple.system.get-wallpaper))
						(require-not (entitlement-is-bool-true com.apple.system.set-alert-tone))
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-only))
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.coreidv.public")
						(require-not (entitlement-is-bool-true com.apple.developer.proximity-reader.identity.display))
						(entitlement-is-present com.apple.developer.proximity-reader.identity.read))
					(require-all
						(preference-domain "com.apple.books")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.ids")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents")))
						(signing-identifier "com.apple.Bridge")
						(require-not (preference-domain "com.apple.logging"))
						(require-not (preference-domain "com.apple.ids"))
						(require-not (preference-domain "com.apple.conference"))
						(require-not (preference-domain "com.apple.marco")))
					(require-all
						(preference-domain "com.apple.conference")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents")))
						(signing-identifier "com.apple.Bridge")
						(require-not (preference-domain "com.apple.logging"))
						(require-not (preference-domain "com.apple.ids"))
						(require-not (preference-domain "com.apple.conference"))
						(require-not (preference-domain "com.apple.marco")))
					(require-all
						(preference-domain "com.apple.logging")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents")))
						(require-not (signing-identifier "com.apple.Bridge")))
					(require-all
						(preference-domain "com.apple.marco")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents")))
						(require-not (signing-identifier "com.apple.Bridge")))
					(require-all
						(preference-domain "com.apple.cloud.quota")
						(require-not (signing-identifier "com.apple.iCloudDriveApp"))
						(require-not (signing-identifier "com.apple.mobilemail"))
						(signing-identifier "com.apple.Bridge")
						(require-not (preference-domain "com.apple.logging"))
						(require-not (preference-domain "com.apple.ids"))
						(require-not (preference-domain "com.apple.conference"))
						(require-not (preference-domain "com.apple.marco")))
					(require-all
						(preference-domain "com.apple.morphology.internal")
						(process-attribute is-apple-signed-executable))
					(require-all
						(preference-domain "com.apple.medialibrary")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.groupactivities")
						(entitlement-is-bool-true com.apple.developer.group-session))
					(require-all
						(preference-domain "com.apple.homesharing")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (preference-domain "com.apple.purplebuddy"))
						(require-not (preference-domain "com.apple.Preferences")))
					(require-all
						(preference-domain "com.apple.youtube.dp")
						(signing-identifier "com.apple.mobilesafari"))
					(require-all
						(preference-domain "com.apple.coremedia")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coreaudio")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.itunesstored")
						(process-attribute is-apple-signed-executable)
						(require-not (entitlement-is-bool-true com.apple.itunesstored.private))
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coremedia")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.avfoundation")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coreaudio")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.corevideo")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.avfoundation")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.OTASyncState")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(signing-identifier "com.apple.Bridge")
						(require-not (preference-domain "com.apple.logging"))
						(require-not (preference-domain "com.apple.ids"))
						(require-not (preference-domain "com.apple.conference"))
						(require-not (preference-domain "com.apple.marco")))
					(require-all
						(preference-domain "com.apple.corevideo")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(require-any (preference-domain "com.apple.OTASyncAgent")
(preference-domain "com.apple.mail.composition")
(preference-domain "com.apple.MailAccount-ExtProperties"))
						(require-not (signing-identifier "com.apple.mobilemail"))
						(signing-identifier "com.apple.Bridge")
						(require-not (preference-domain "com.apple.logging"))
						(require-not (preference-domain "com.apple.ids"))
						(require-not (preference-domain "com.apple.conference"))
						(require-not (preference-domain "com.apple.marco")))))
			(require-all
				(require-not (preference-domain "com.apple.locationd"))
				(require-not (preference-domain "com.apple.CoreDuet"))
				(require-not (preference-domain "com.apple.AppSupport"))
				(require-not (preference-domain "com.apple.DataMigration"))
				(require-not (preference-domain "com.apple.icloud.findmydeviced.postwipe"))
				(require-not (preference-domain "com.apple.mobilecal.alarmengine"))
				(require-not (preference-domain "com.apple.PeoplePicker"))
				(require-not (preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
				(require-not (preference-domain "com.apple.mobilecal"))
				(require-any
					(require-all
						(preference-domain "com.apple.itunesstored")
						(require-any
							(require-all
								(process-attribute is-apple-signed-executable)
								(entitlement-is-bool-true com.apple.itunesstored.private))
							(require-all
								(require-not (signing-identifier "com.apple.itunesu"))
								(require-not (signing-identifier "com.apple.mobilesafari"))
								(require-not (signing-identifier "com.apple.iBooks"))
								(require-not (entitlement-is-bool-true com.apple.container2))
								(process-attribute is-apple-signed-executable)
								(require-not (entitlement-is-bool-true com.apple.itunesstored.private))
								(require-not (signing-identifier "com.apple.mobilemail"))
								(extension com.apple.tcc.kTCCServicePhotos))))
					(require-all
						(preference-domain "com.apple.DataAccess.BehaviorOptions")
						(process-attribute is-apple-signed-executable))
					(require-all
						(preference-domain "com.apple.springboard")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(require-not (entitlement-is-bool-true com.apple.system.get-wallpaper))
						(require-not (entitlement-is-bool-true com.apple.system.set-alert-tone))
						(require-not (entitlement-is-bool-true com.apple.media.ringtones.read-only))
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.coreidv.public")
						(require-not (entitlement-is-bool-true com.apple.developer.proximity-reader.identity.display))
						(entitlement-is-present com.apple.developer.proximity-reader.identity.read))
					(require-all
						(preference-domain "com.apple.books")
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.ids")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents")))
						(signing-identifier "com.apple.Bridge")
						(require-not (preference-domain "com.apple.logging"))
						(require-not (preference-domain "com.apple.ids"))
						(require-not (preference-domain "com.apple.conference"))
						(require-not (preference-domain "com.apple.marco")))
					(require-all
						(preference-domain "com.apple.conference")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents")))
						(signing-identifier "com.apple.Bridge")
						(require-not (preference-domain "com.apple.logging"))
						(require-not (preference-domain "com.apple.ids"))
						(require-not (preference-domain "com.apple.conference"))
						(require-not (preference-domain "com.apple.marco")))
					(require-all
						(preference-domain "com.apple.logging")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents")))
						(require-not (signing-identifier "com.apple.Bridge")))
					(require-all
						(preference-domain "com.apple.marco")
						(require-not (signing-identifier "com.apple.shortcuts"))
						(require-not (signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner"))
						(require-all (require-not (signing-identifier "com.apple.shortcuts.watch"))
(require-not (signing-identifier "com.apple.WorkflowKit.ShortcutsIntents")))
						(require-not (signing-identifier "com.apple.Bridge")))
					(require-all
						(preference-domain "com.apple.cloud.quota")
						(require-not (signing-identifier "com.apple.iCloudDriveApp"))
						(require-not (signing-identifier "com.apple.mobilemail"))
						(signing-identifier "com.apple.Bridge")
						(require-not (preference-domain "com.apple.logging"))
						(require-not (preference-domain "com.apple.ids"))
						(require-not (preference-domain "com.apple.conference"))
						(require-not (preference-domain "com.apple.marco")))
					(require-all
						(preference-domain "com.apple.morphology.internal")
						(process-attribute is-apple-signed-executable))
					(require-all
						(preference-domain "com.apple.medialibrary")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.groupactivities")
						(entitlement-is-bool-true com.apple.developer.group-session))
					(require-all
						(preference-domain "com.apple.homesharing")
						(require-not (signing-identifier "com.apple.mobilesafari"))
						(require-not (signing-identifier "com.apple.itunesu"))
						(require-not (signing-identifier "com.apple.iBooks"))
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (preference-domain "com.apple.purplebuddy"))
						(require-not (preference-domain "com.apple.Preferences")))
					(require-all
						(preference-domain "com.apple.youtube.dp")
						(signing-identifier "com.apple.mobilesafari"))
					(require-all
						(preference-domain "com.apple.coremedia")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coreaudio")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.itunesstored")
						(process-attribute is-apple-signed-executable)
						(require-not (entitlement-is-bool-true com.apple.itunesstored.private))
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coremedia")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.avfoundation")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coreaudio")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.corevideo")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.avfoundation")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.OTASyncState")
						(require-not (signing-identifier "com.apple.mobilemail"))
						(signing-identifier "com.apple.Bridge")
						(require-not (preference-domain "com.apple.logging"))
						(require-not (preference-domain "com.apple.ids"))
						(require-not (preference-domain "com.apple.conference"))
						(require-not (preference-domain "com.apple.marco")))
					(require-all
						(preference-domain "com.apple.corevideo")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(require-any (preference-domain "com.apple.OTASyncAgent")
(preference-domain "com.apple.mail.composition")
(preference-domain "com.apple.MailAccount-ExtProperties"))
						(require-not (signing-identifier "com.apple.mobilemail"))
						(signing-identifier "com.apple.Bridge")
						(require-not (preference-domain "com.apple.logging"))
						(require-not (preference-domain "com.apple.ids"))
						(require-not (preference-domain "com.apple.conference"))
						(require-not (preference-domain "com.apple.marco"))))))))
(deny managed-preference-read
	(require-all
		(preference-domain "com.apple.ist.AppleConnect")
		(require-not (signing-identifier "com.apple.ist.AppleConnect.extension"))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
				(require-any
					(require-all
						(preference-domain "com.apple.itunesstored")
						(require-any
							(require-all
								(process-attribute is-apple-signed-executable)
								(entitlement-is-bool-true com.apple.itunesstored.private))
							(require-all
								(signing-identifier "com.apple.itunesu")
								(signing-identifier "com.apple.mobilesafari")
								(signing-identifier "com.apple.iBooks")
								(entitlement-is-bool-true com.apple.container2)
								(process-attribute is-apple-signed-executable)
								(entitlement-is-bool-true com.apple.itunesstored.private)
								(signing-identifier "com.apple.mobilemail")
								(extension com.apple.tcc.kTCCServicePhotos))))
					(require-all
						(preference-domain "com.apple.DataAccess.BehaviorOptions")
						(process-attribute is-apple-signed-executable))
					(require-all
						(preference-domain "com.apple.springboard")
						(signing-identifier "com.apple.mobilemail")
						(entitlement-is-bool-true com.apple.system.get-wallpaper)
						(entitlement-is-bool-true com.apple.system.set-alert-tone)
						(entitlement-is-bool-true com.apple.media.ringtones.read-only)
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.coreidv.public")
						(entitlement-is-bool-true com.apple.developer.proximity-reader.identity.display)
						(entitlement-is-present com.apple.developer.proximity-reader.identity.read))
					(require-all
						(preference-domain "com.apple.books")
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.ids")
						(signing-identifier "com.apple.shortcuts")
						(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
						(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
						(signing-identifier "com.apple.Bridge")
						(preference-domain "com.apple.logging")
						(preference-domain "com.apple.ids")
						(preference-domain "com.apple.conference")
						(preference-domain "com.apple.marco"))
					(require-all
						(preference-domain "com.apple.conference")
						(signing-identifier "com.apple.shortcuts")
						(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
						(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
						(signing-identifier "com.apple.Bridge")
						(preference-domain "com.apple.logging")
						(preference-domain "com.apple.ids")
						(preference-domain "com.apple.conference")
						(preference-domain "com.apple.marco"))
					(require-all
						(preference-domain "com.apple.logging")
						(signing-identifier "com.apple.shortcuts")
						(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
						(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
						(signing-identifier "com.apple.Bridge"))
					(require-all
						(preference-domain "com.apple.marco")
						(signing-identifier "com.apple.shortcuts")
						(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
						(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
						(signing-identifier "com.apple.Bridge"))
					(require-all
						(preference-domain "com.apple.cloud.quota")
						(signing-identifier "com.apple.iCloudDriveApp")
						(signing-identifier "com.apple.mobilemail")
						(signing-identifier "com.apple.Bridge")
						(preference-domain "com.apple.logging")
						(preference-domain "com.apple.ids")
						(preference-domain "com.apple.conference")
						(preference-domain "com.apple.marco"))
					(require-all
						(preference-domain "com.apple.morphology.internal")
						(process-attribute is-apple-signed-executable))
					(require-all
						(preference-domain "com.apple.medialibrary")
						(signing-identifier "com.apple.mobilesafari")
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.groupactivities")
						(entitlement-is-bool-true com.apple.developer.group-session))
					(require-all
						(preference-domain "com.apple.homesharing")
						(signing-identifier "com.apple.mobilesafari")
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(process-attribute is-apple-signed-executable)
						(preference-domain "com.apple.purplebuddy")
						(preference-domain "com.apple.Preferences"))
					(require-all
						(preference-domain "com.apple.itunesstored")
						(process-attribute is-apple-signed-executable)
						(entitlement-is-bool-true com.apple.itunesstored.private)
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coremedia")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.youtube.dp")
						(signing-identifier "com.apple.mobilesafari"))
					(require-all
						(preference-domain "com.apple.coremedia")
						(signing-identifier "com.apple.mobilemail")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coreaudio")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coreaudio")
						(signing-identifier "com.apple.mobilemail")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.avfoundation")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.avfoundation")
						(signing-identifier "com.apple.mobilemail")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.corevideo")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.corevideo")
						(signing-identifier "com.apple.mobilemail")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.OTASyncState")
						(signing-identifier "com.apple.mobilemail")
						(signing-identifier "com.apple.Bridge")
						(preference-domain "com.apple.logging")
						(preference-domain "com.apple.ids")
						(preference-domain "com.apple.conference")
						(preference-domain "com.apple.marco"))
					(require-all
						(require-any (preference-domain "com.apple.OTASyncAgent")
(preference-domain "com.apple.mail.composition")
(preference-domain "com.apple.MailAccount-ExtProperties"))
						(signing-identifier "com.apple.mobilemail")
						(signing-identifier "com.apple.Bridge")
						(preference-domain "com.apple.logging")
						(preference-domain "com.apple.ids")
						(preference-domain "com.apple.conference")
						(preference-domain "com.apple.marco"))))
			(require-all
				(preference-domain "com.apple.locationd")
				(preference-domain "com.apple.CoreDuet")
				(preference-domain "com.apple.AppSupport")
				(preference-domain "com.apple.DataMigration")
				(preference-domain "com.apple.icloud.findmydeviced.postwipe")
				(preference-domain "com.apple.mobilecal.alarmengine")
				(preference-domain "com.apple.PeoplePicker")
				(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
				(preference-domain "com.apple.mobilecal")
				(require-any
					(require-all
						(preference-domain "com.apple.itunesstored")
						(require-any
							(require-all
								(process-attribute is-apple-signed-executable)
								(entitlement-is-bool-true com.apple.itunesstored.private))
							(require-all
								(signing-identifier "com.apple.itunesu")
								(signing-identifier "com.apple.mobilesafari")
								(signing-identifier "com.apple.iBooks")
								(entitlement-is-bool-true com.apple.container2)
								(process-attribute is-apple-signed-executable)
								(entitlement-is-bool-true com.apple.itunesstored.private)
								(signing-identifier "com.apple.mobilemail")
								(extension com.apple.tcc.kTCCServicePhotos))))
					(require-all
						(preference-domain "com.apple.DataAccess.BehaviorOptions")
						(process-attribute is-apple-signed-executable))
					(require-all
						(preference-domain "com.apple.springboard")
						(signing-identifier "com.apple.mobilemail")
						(entitlement-is-bool-true com.apple.system.get-wallpaper)
						(entitlement-is-bool-true com.apple.system.set-alert-tone)
						(entitlement-is-bool-true com.apple.media.ringtones.read-only)
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.coreidv.public")
						(entitlement-is-bool-true com.apple.developer.proximity-reader.identity.display)
						(entitlement-is-present com.apple.developer.proximity-reader.identity.read))
					(require-all
						(preference-domain "com.apple.books")
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.ids")
						(signing-identifier "com.apple.shortcuts")
						(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
						(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
						(signing-identifier "com.apple.Bridge")
						(preference-domain "com.apple.logging")
						(preference-domain "com.apple.ids")
						(preference-domain "com.apple.conference")
						(preference-domain "com.apple.marco"))
					(require-all
						(preference-domain "com.apple.conference")
						(signing-identifier "com.apple.shortcuts")
						(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
						(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
						(signing-identifier "com.apple.Bridge")
						(preference-domain "com.apple.logging")
						(preference-domain "com.apple.ids")
						(preference-domain "com.apple.conference")
						(preference-domain "com.apple.marco"))
					(require-all
						(preference-domain "com.apple.logging")
						(signing-identifier "com.apple.shortcuts")
						(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
						(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
						(signing-identifier "com.apple.Bridge"))
					(require-all
						(preference-domain "com.apple.marco")
						(signing-identifier "com.apple.shortcuts")
						(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
						(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
						(signing-identifier "com.apple.Bridge"))
					(require-all
						(preference-domain "com.apple.cloud.quota")
						(signing-identifier "com.apple.iCloudDriveApp")
						(signing-identifier "com.apple.mobilemail")
						(signing-identifier "com.apple.Bridge")
						(preference-domain "com.apple.logging")
						(preference-domain "com.apple.ids")
						(preference-domain "com.apple.conference")
						(preference-domain "com.apple.marco"))
					(require-all
						(preference-domain "com.apple.morphology.internal")
						(process-attribute is-apple-signed-executable))
					(require-all
						(preference-domain "com.apple.medialibrary")
						(signing-identifier "com.apple.mobilesafari")
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(preference-domain "com.apple.groupactivities")
						(entitlement-is-bool-true com.apple.developer.group-session))
					(require-all
						(preference-domain "com.apple.homesharing")
						(signing-identifier "com.apple.mobilesafari")
						(signing-identifier "com.apple.itunesu")
						(signing-identifier "com.apple.iBooks")
						(entitlement-is-bool-true com.apple.container2))
					(require-all
						(process-attribute is-apple-signed-executable)
						(preference-domain "com.apple.purplebuddy")
						(preference-domain "com.apple.Preferences"))
					(require-all
						(preference-domain "com.apple.itunesstored")
						(process-attribute is-apple-signed-executable)
						(entitlement-is-bool-true com.apple.itunesstored.private)
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coremedia")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.youtube.dp")
						(signing-identifier "com.apple.mobilesafari"))
					(require-all
						(preference-domain "com.apple.coremedia")
						(signing-identifier "com.apple.mobilemail")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coreaudio")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.coreaudio")
						(signing-identifier "com.apple.mobilemail")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.avfoundation")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.avfoundation")
						(signing-identifier "com.apple.mobilemail")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.corevideo")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.corevideo")
						(signing-identifier "com.apple.mobilemail")
						(extension com.apple.tcc.kTCCServicePhotos))
					(require-all
						(preference-domain "com.apple.OTASyncState")
						(signing-identifier "com.apple.mobilemail")
						(signing-identifier "com.apple.Bridge")
						(preference-domain "com.apple.logging")
						(preference-domain "com.apple.ids")
						(preference-domain "com.apple.conference")
						(preference-domain "com.apple.marco"))
					(require-all
						(require-any (preference-domain "com.apple.OTASyncAgent")
(preference-domain "com.apple.mail.composition")
(preference-domain "com.apple.MailAccount-ExtProperties"))
						(signing-identifier "com.apple.mobilemail")
						(signing-identifier "com.apple.Bridge")
						(preference-domain "com.apple.logging")
						(preference-domain "com.apple.ids")
						(preference-domain "com.apple.conference")
						(preference-domain "com.apple.marco")))))))
(deny user-preference-write
	(require-all
		(preference-domain "com.apple.mobileipod")
		(require-not (signing-identifier "com.apple.itunesu"))
		(require-not (signing-identifier "com.apple.mobilesafari"))
		(signing-identifier "com.apple.iBooks")
		(entitlement-is-bool-true com.apple.container2))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-not (signing-identifier "com.apple.itunesu"))
		(require-not (signing-identifier "com.apple.mobilesafari"))
		(signing-identifier "com.apple.iBooks")
		(entitlement-is-bool-true com.apple.container2))
	(require-all
		(preference-domain "com.apple.springboard")
		(entitlement-is-bool-true com.apple.system.set-alert-tone))
	(require-all
		(preference-domain "com.apple.cloud.quota")
		(require-not (signing-identifier "com.apple.iCloudDriveApp"))
		(signing-identifier "com.apple.mobilemail"))
	(require-all
		(preference-domain "com.apple.youtube.dp")
		(signing-identifier "com.apple.mobilesafari"))
	(require-all
		(preference-domain "com.apple.OTASyncState")
		(signing-identifier "com.apple.mobilemail"))
	(require-all
		(require-any (preference-domain "com.apple.OTASyncAgent")
(preference-domain "com.apple.mail.composition")
(preference-domain "com.apple.MailAccount-ExtProperties"))
		(signing-identifier "com.apple.mobilemail")))
(deny storage-class-map)
