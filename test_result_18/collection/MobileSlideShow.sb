(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (literal-prefix "${HOME}/Library/SpringBoard"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-not (subpath "/private/var/tmp"))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
		(require-not (subpath "/private/var/MobileAsset/AssetsV2"))
		(require-not (subpath "/private/var/MobileAsset/Assets")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath "/private/var/MobileAsset/AssetsV2"))
		(require-not (subpath "/private/var/MobileAsset/Assets")))
	(require-all
		(subpath-prefix "${HOME}/Library/Cookies")
		(require-not (extension-class "com.apple.app-sandbox.read-write"))
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.aned.read-only"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath "/private/var/tmp/MediaCache"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache"))
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
	(require-all
		(extension com.apple.sandbox.application-group)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")))
		(require-not (subpath-prefix "${HOME}/Library/Cookies"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-not (subpath-prefix "${HOME}/Media/DCIM"))
				(require-not (subpath-prefix "${HOME}/Media/Photos"))
				(require-any
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")))
		(require-not (subpath-prefix "${HOME}/Library/Cookies"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-not (subpath-prefix "${HOME}/Media/DCIM"))
				(require-not (subpath-prefix "${HOME}/Media/Photos"))
				(require-any
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")))
		(require-not (subpath-prefix "${HOME}/Library/Cookies"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-not (subpath-prefix "${HOME}/Media/DCIM"))
				(require-not (subpath-prefix "${HOME}/Media/Photos"))
				(require-any
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")))
		(require-not (subpath-prefix "${HOME}/Library/Cookies"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-not (subpath-prefix "${HOME}/Media/DCIM"))
				(require-not (subpath-prefix "${HOME}/Media/Photos"))
				(require-any
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath-prefix "${HOME}/Media/Debug"))
		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache"))
		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
		(require-not (subpath-prefix "${HOME}/Media/Memories"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")))
		(require-not (subpath-prefix "${HOME}/Library/Cookies"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-not (subpath-prefix "${HOME}/Media/DCIM"))
				(require-not (subpath-prefix "${HOME}/Media/Photos"))
				(require-any
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(extension com.apple.sandbox.application-group)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension com.apple.sandbox.application-group)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))
			(require-all
				(require-not (subpath-prefix "${HOME}/Library/Cookies"))
				(require-any
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(require-all
								(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
								(require-not (extension com.apple.odr-assets)))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
								(require-any
									(require-all
										(extension com.apple.assets.read)
										(require-not (subpath "/private/var/MobileAsset"))
										(require-not (subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(require-not (subpath "/private/var/tmp/MediaCache"))
										(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")))
									(require-all
										(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(extension com.apple.librarian.ubiquity-container)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
								(require-not (extension com.apple.odr-assets)))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
								(require-any
									(require-all
										(extension com.apple.assets.read)
										(require-not (subpath "/private/var/MobileAsset"))
										(require-not (subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(require-not (subpath "/private/var/tmp/MediaCache"))
										(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")))
									(require-all
										(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(extension com.apple.librarian.ubiquity-container)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension com.apple.sandbox.application-group)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(extension-class "com.apple.wcd.readonly")
		(extension com.apple.sandbox.application-group)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(require-not (subpath-prefix "${HOME}/Library/Cookies"))
				(require-any
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(require-all
								(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
								(require-not (extension com.apple.odr-assets)))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
								(require-any
									(require-all
										(extension com.apple.assets.read)
										(require-not (subpath "/private/var/MobileAsset"))
										(require-not (subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(require-not (subpath "/private/var/tmp/MediaCache"))
										(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")))
									(require-all
										(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(extension com.apple.librarian.ubiquity-container)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
								(require-not (extension com.apple.odr-assets)))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
								(require-any
									(require-all
										(extension com.apple.assets.read)
										(require-not (subpath "/private/var/MobileAsset"))
										(require-not (subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(require-not (subpath "/private/var/tmp/MediaCache"))
										(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")))
									(require-all
										(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(extension com.apple.librarian.ubiquity-container)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
			(require-all
				(literal "/private/var/")
				(extension com.apple.sandbox.application-group)
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(require-not (subpath-prefix "${HOME}/Library/Cookies"))
				(require-any
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(require-all
								(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
								(require-not (extension com.apple.odr-assets)))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
								(require-any
									(require-all
										(extension com.apple.assets.read)
										(require-not (subpath "/private/var/MobileAsset"))
										(require-not (subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(require-not (subpath "/private/var/tmp/MediaCache"))
										(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")))
									(require-all
										(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(extension com.apple.librarian.ubiquity-container)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-all
								(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
								(require-not (extension com.apple.odr-assets)))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
								(require-any
									(require-all
										(extension com.apple.assets.read)
										(require-not (subpath "/private/var/MobileAsset"))
										(require-not (subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(require-not (subpath "/private/var/tmp/MediaCache"))
										(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")))
									(require-all
										(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(extension com.apple.librarian.ubiquity-container)
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
										(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
			(require-all
				(literal "/private/var/")
				(extension com.apple.sandbox.application-group)
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))
	(require-all
		(extension-class "com.apple.spotlight-indexable")
		(extension com.apple.sandbox.application-group)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(extension com.apple.app-sandbox.read-write)
		(require-not (extension-class "com.apple.app-sandbox.read-write"))
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.sharing.airdrop.readonly"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(require-not (extension com.apple.sandbox.executable)))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(extension com.apple.security.exception.files.home-relative-path.read-write)
				(require-not (extension com.apple.tcc.kTCCServicePhotos)))
			(require-all
				(extension com.apple.security.exception.files.absolute-path.read-write)
				(require-not (extension com.apple.tcc.kTCCServicePhotos)))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath "/private/var/tmp/MediaCache"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(extension com.apple.tcc.kTCCServicePhotos)
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
			(require-all
				(subpath-prefix "${HOME}/Media")
				(extension com.apple.avasset.read-only)
				(require-not (extension com.apple.tcc.kTCCServicePhotos)))))
	(require-all
		(subpath "/private/var/tmp")
		(require-not (extension-class "com.apple.app-sandbox.read-write"))
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(subpath-prefix "${PROCESS_TEMP_DIR}")
		(require-not (extension-class "com.apple.app-sandbox.read-write"))
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.camera"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.camera"))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-not (subpath-prefix "${HOME}/Media/Purchases"))
		(require-any
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(subpath "/Library/Ringtones")
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (subpath-prefix "${HOME}/Media/Purchases"))
		(require-any
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(subpath "/Library/Ringtones")
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath-prefix "${HOME}/Media/Purchases"))
		(require-any
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
			(require-all
				(subpath "/Library/Ringtones")
				(require-not (extension-class "com.apple.app-sandbox.read"))
				(require-not (extension-class "com.apple.aned.read-only"))
				(require-not (extension-class "com.apple.mediaserverd.read")))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-not (subpath-prefix "${HOME}/Media")))
	(require-all
		(subpath-prefix "${HOME}/Media/Debug")
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension com.apple.sandbox.container)
		(signing-identifier "com.apple.camera.lockscreen")
		(require-any
			(extension-class "com.apple.quicklook.readonly")
			(extension-class "com.apple.app-sandbox.read")
			(extension-class "com.apple.sharing.airdrop.readonly")
			(extension-class "com.apple.mediaserverd.read")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")
						(extension-class "com.apple.app-sandbox.read-write"))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$")
						(extension-class "com.apple.app-sandbox.read-write"))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$"))
							(require-all
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$"))))))
			(require-all
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$"))))
	(require-all
		(subpath-prefix "${HOME}/Media/MediaAnalysis")
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(signing-identifier "com.apple.camera.lockscreen")
		(require-any
			(require-all
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(extension-class "com.apple.quicklook.readonly")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.app-sandbox.read-write")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.nsurlsessiond.readonly")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.wcd.readonly")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
							(require-all
								(extension-class "com.apple.spotlight-indexable")
								(require-any
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))))
					(require-all
						(extension-class "com.apple.corespotlightservice.read-write")
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (subpath-prefix "${HOME}")))
					(require-all
						(extension-class "com.apple.foundation.upload-prep.read-write")
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/tmp$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (subpath-prefix "${HOME}")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork")))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?"))
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork")))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?"))
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork")))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?"))
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$")))))
			(require-all
				(process-attribute is-apple-signed-executable)
				(extension-class "com.apple.webkit.map-executable")
				(extension com.apple.sandbox.executable))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(extension com.apple.sandbox.executable))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(extension com.apple.sandbox.executable))
			(require-all
				(extension-class "com.apple.wcd.readonly")
				(extension com.apple.sandbox.executable))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(extension com.apple.sandbox.executable))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(extension com.apple.sandbox.executable))))
	(require-all
		(subpath-prefix "${HOME}/Media/PhotoData")
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(subpath-prefix "${HOME}/Media/Memories")
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(subpath-prefix "${HOME}/Media/DCIM")
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(subpath-prefix "${HOME}/Media/Photos")
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(subpath-prefix "${HOME}/Media/PhotoStreamsData")
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.aned.read-only"))
		(require-not (extension-class "com.apple.mediaserverd.read"))))
(deny file-link
	(subpath-prefix "${HOME}/Library/AddressBook"))
(deny file-map-executable
	(signing-identifier "com.apple.mobileslideshow")
	(require-any (signing-identifier "com.apple.Capture")
(signing-identifier "com.apple.camera.lockscreen")
(signing-identifier "com.apple.photos.Memoryscape"))
	(require-not (signing-identifier "com.apple.camera"))
	(require-all
		(entitlement-is-bool-true get-task-allow)
		(require-any
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(require-any
					(require-all
						(extension com.apple.sandbox.container)
						(require-any
							(require-all
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")
								(require-not (signing-identifier "com.apple.camera.lockscreen")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(require-not (signing-identifier "com.apple.camera.lockscreen")))))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")))))
			(require-all
				(literal "/private/var/")
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")
						(require-not (signing-identifier "com.apple.camera.lockscreen")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
						(require-not (signing-identifier "com.apple.camera.lockscreen")))))))
	(require-all
		(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
		(require-any
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(require-any
					(require-all
						(extension com.apple.sandbox.container)
						(require-any
							(require-all
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")
								(require-not (signing-identifier "com.apple.camera.lockscreen")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(require-not (signing-identifier "com.apple.camera.lockscreen")))))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")))))
			(require-all
				(literal "/private/var/")
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")
						(require-not (signing-identifier "com.apple.camera.lockscreen")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
						(require-not (signing-identifier "com.apple.camera.lockscreen"))))))))
(deny file-mount
	(require-all
		(signing-identifier "com.apple.camera.lockscreen")
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?")
			(require-all
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$")))))
(deny file-read*
	(require-all
		(require-not (literal "/AppleInternal/Library/Preferences/com.apple.airplay.dashboard.plist"))
		(require-not (literal-prefix "${HOME}/Library/SpringBoard"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Siri"))
(require-not (subpath-prefix "${HOME}/Library/Application Support/MobileSlideShow"))
(require-not (subpath-prefix "${HOME}/Library/Application Support/iLifePageLayout"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.legacycamera"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.springboard.sharedimagecache/Wallpaper"))
(require-not (literal-prefix "${HOME}/Library/Logs/MobileSlideShow.log"))
(require-not (literal-prefix "${HOME}/Library/Logs/awd/awdComponent0x19.log"))
(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-Camera.log"))
(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-MobileSlideShow.log")))
		(require-not (subpath-prefix "${HOME}/Library/SMS"))
		(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CloudPhotoLibrary.aslgroup"))
		(require-not (literal-prefix "${HOME}/Library/Logs/awd"))
		(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/Photos"))
		(require-not (subpath-prefix "${HOME}/Library/Cookies"))
		(require-any
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServiceMediaLibrary)
						(require-any
							(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
							(require-all
								(vnode-type DIRECTORY)
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
					(require-all
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp$"))
						(require-not (regex #"^/private/var/mobile/Library/SpringBoard/Lock.+" #"^/private/var/mobile/Library/SpringBoard/.+Lock.+" #"^/private/var/mobile/Library/SpringBoard/Home.+" #"^/private/var/mobile/Library/SpringBoard/.+Home.+" #"^/private/var/euser[0-9]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+" #"^/private/var/[-0-9A-F]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+" #"^/private/var/Users/[^/]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+")))))
			(require-all
				(entitlement-is-bool-true com.apple.Contacts.database-allow)
				(extension com.apple.tcc.kTCCServiceAddressBook)
				(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
				(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
				(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.pep.configuration.plist"))
						(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
						(require-not (literal "/private/var/preferences/com.apple.security.plist"))
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache"))
						(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
						(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
						(require-not (subpath-prefix "${HOME}/Library/Cookies"))
						(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
						(require-any
							(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
							(require-all
								(extension com.apple.sandbox.application-group)
								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
								(literal "/private/var/")
								(require-any
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
								(require-not (process-attribute is-apple-signed-executable)))
							(require-all
								(entitlement-is-present com.apple.private.networkextension.configuration)
								(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))
							(require-all
								(vnode-type REGULAR-FILE)
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache")))
							(require-all
								(vnode-type DIRECTORY)
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache")))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(extension com.apple.tcc.kTCCServiceMediaLibrary)
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$"))
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
								(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
							(require-all
								(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
								(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
								(require-not (literal "/private/var/preferences/com.apple.security.plist"))
								(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
								(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
								(require-all (require-not (subpath "/Library/Dictionaries"))
(require-not (subpath-prefix "${HOME}/Library/Dictionaries")))
								(require-not (literal-prefix "${HOME}/Library/Caches/DateFormats.plist"))
								(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
								(require-any
									(require-all
										(literal "/private/var/")
										(require-any
											(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
											(require-all
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
												(require-not (subpath-prefix "${FRONT_USER_HOME}")))
											(require-all
												(literal "/private/var/preferences/com.apple.networkextension.plist")
												(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))))
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist")))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Fonts"))
										(require-not (subpath "/Library/Audio/Tunings/Generic/Haptics"))
										(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar"))
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
										(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache"))
										(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist"))
										(require-all (require-not (subpath-prefix "${HOME}/Library/VoiceServices/Assets"))
(require-not (subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice")))
										(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd"))
										(require-not (subpath "/private/var/db/com.apple.naturallanguaged"))
										(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
										(require-any
											(require-all
												(extension com.apple.assets.read)
												(require-not (subpath "/private/var/MobileAsset"))
												(require-not (subpath-prefix "${HOME}/Library/Assets")))
											(require-all
												(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
												(require-any
													(subpath "/System/Library/Carrier Bundles")
													(subpath-prefix "${HOME}/Library/Carrier Bundles")
													(require-all
														(subpath-prefix "${HOME}/Library/ReplayKit")
														(require-not (extension com.apple.replayd.read-only)))
													(require-all
														(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
														(require-not (extension com.apple.Pasteboard-readonly)))
													(require-all
														(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
														(require-not (extension com.apple.odr-assets)))
													(require-all
														(extension com.apple.fileprovider.read-write)
														(require-all (require-not (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?")))
														(literal "/private/var/")
														(require-any
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}")
																(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
																(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$"))
																(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
																(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
															(require-all
																(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
																(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
														(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$"))
														(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
														(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
													(require-all
														(extension com.apple.classkit.read-write)
														(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?"))
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
														(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
													(require-all
														(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
														(require-not (extension com.apple.librarian.ubiquity-revision)))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
														(require-not (extension com.apple.librarian.ubiquity-revision)))
													(require-all
														(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
														(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
														(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
														(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
														(require-not (subpath-prefix "${FRONT_USER_HOME}")))
													(require-all
														(extension com.apple.librarian.ubiquity-container)
														(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
														(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
														(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
														(require-not (subpath-prefix "${FRONT_USER_HOME}")))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
														(require-not (extension com.apple.clouddocs.version)))
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
														(require-not (extension com.apple.clouddocs.version)))
													(require-all
														(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
														(vnode-type REGULAR-FILE)
														(require-not (extension com.apple.clouddocs.version)))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
														(vnode-type REGULAR-FILE)
														(require-not (extension com.apple.clouddocs.version)))
													(require-all
														(literal "/System/Library/Carrier Bundles/")
														(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
														(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
													(require-all
														(process-attribute is-apple-signed-executable)
														(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
													(require-all
														(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
														(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
														(require-not (literal "/private/var/preferences/com.apple.security.plist"))
														(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
														(require-not (subpath "/private/var/tmp/MediaCache"))
														(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
														(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache"))
														(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
														(require-any
															(require-all
																(entitlement-is-present com.apple.private.networkextension.configuration)
																(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))
															(require-all
																(subpath-prefix "${HOME}/Media")
																(require-any
																	(require-all
																		(extension com.apple.tcc.kTCCServicePhotos)
																		(require-not (subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData"))
																		(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Metadata")))
																		(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
																		(require-not (subpath-prefix "${HOME}/Media/DCIM"))
																		(require-not (literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist"))
																		(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Sync"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Mutations")))
																		(require-not (extension com.apple.avasset.read-only)))
																	(require-all
																		(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")
																		(process-attribute is-platform-binary)
																		(extension com.apple.tcc.kTCCServicePhotos))
																	(require-all
																		(require-not (subpath-prefix "${HOME}/Media/Safari"))
																		(require-not (subpath-prefix "${HOME}/Media/Debug")))))
															(require-all
																(require-not (subpath-prefix "${HOME}/Library/Fonts"))
																(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
																(require-all (require-not (subpath "/AppleInternal/Library/Frameworks/RadarCompose.framework"))
(require-not (literal-prefix "${HOME}/Library/SyncedPreferences/com.apple.camera.plist"))
(require-not (literal-prefix "${HOME}/Library/SyncedPreferences/com.apple.mobileslideshow.plist")))
																(require-all (require-not (subpath-prefix "${HOME}/Documents/com.apple.camera.settings"))
(require-not (subpath-prefix "${HOME}/Documents/com.apple.mobileslideshow.settings"))
(require-not (subpath-prefix "${HOME}/Library/WebKit"))
(require-not (literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera-"))
(require-not (literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow-"))
(require-not (subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow"))
(require-not (regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState/"))
(require-not (regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState/")))
																(require-any
																	(require-all
																		(vnode-type REGULAR-FILE)
																		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera"))))
																	(require-all
																		(vnode-type DIRECTORY)
																		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera"))))
																	(require-all
																		(require-not (subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera"))
																		(require-not (literal-prefix "${HOME}/Library/Caches/Checkpoint.plist"))
																		(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
																		(require-not (subpath "/private/var/tmp"))
																		(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
																		(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist"))
																		(require-not (subpath-prefix "${HOME}/Media/Memories"))
																		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera")))
																		(require-all (require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo")))
																		(require-not (subpath-prefix "${HOME}/Media/Photos"))
																		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
																		(require-not (subpath "/Library/Ringtones"))
																		(require-not (subpath-prefix "${HOME}/Library/WebClips"))
																		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist"))
																		(require-any
																			(require-all
																				(literal "/System/Library/Carrier Bundles/")
																				(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
																				(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
																			(require-all
																				(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")))
																				(require-not (subpath-prefix "${HOME}/Library/Cookies"))
																				(require-not (subpath-prefix "${HOME}/Media/DCIM"))
																				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
																				(require-any
																					(require-all
																						(literal "/private/var/")
																						(require-any
																							(require-all
																								(subpath-prefix "${HOME}")
																								(require-not (regex #"^/private/var/mobile/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/euser[0-9]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/[-0-9A-F]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/Users/[^/]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist"))
																								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
																								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
																								(require-not (regex #"^/private/var/mobile/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/euser[0-9]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/[-0-9A-F]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/Users/[^/]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist")))
																							(require-all
																								(subpath-prefix "${FRONT_USER_HOME}")
																								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
																								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
																								(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))
																								(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))))
																					(require-all
																						(require-not (literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
																						(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
																						(require-not (subpath-prefix "${HOME}/Media/Purchases"))
																						(require-any
																							(require-any (literal "/usr/sbin/fairplayd")
(subpath-prefix "${HOME}/Library/FairPlay"))
																							(require-all
																								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
																								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
																								(require-any
																									(require-all
																										(signing-identifier "com.apple.camera.lockscreen")
																										(extension com.apple.sandbox.container)
																										(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork")))
																										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?"))
																										(require-not (literal))
																										(literal "/private/var/")
																										(require-any
																											(require-all
																												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																												(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/"))
																												(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+$"))
																												(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$"))
																												(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$"))
																												(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))
																											(require-all
																												(literal "/private/var/PersonaVolumes/")
																												(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
																												(subpath-prefix "${FRONT_USER_HOME}")
																												(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")))))
																									(require-all
																										(literal "/private/var/")
																										(subpath-prefix "${FRONT_USER_HOME}")
																										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")))
																									(require-all
																										(literal "/System/Library/Carrier Bundles/")
																										(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
																										(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
																									(require-all
																										(literal "/private/var/")
																										(require-any
																											(require-all
																												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
																												(require-not (subpath-prefix "${FRONT_USER_HOME}")))
																											(require-all
																												(subpath-prefix "${FRONT_USER_HOME}")
																												(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))))
																									(require-all
																										(debug-mode)
																										(require-not (subpath "/AppleInternal"))
																										(require-not (subpath "/usr/local/lib")))
																									(require-all
																										(require-not (extension com.apple.app-sandbox.read))
																										(require-any
																											(require-all
																												(extension com.apple.security.exception.files.home-relative-path.read-only)
																												(extension com.apple.app-sandbox.read-write))
																											(require-all
																												(extension com.apple.security.exception.files.home-relative-path.read-write)
																												(extension com.apple.app-sandbox.read-write))
																											(require-all
																												(require-not (extension com.apple.app-sandbox.read-write))
																												(require-any
																													(extension com.apple.sandbox.executable)
																													(require-all
																														(extension com.apple.security.exception.files.absolute-path.read-only)
																														(extension com.apple.security.exception.files.absolute-path.read-write)
																														(require-any
																															(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
																															(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))))
																													(require-all
																														(subpath-prefix "${ANY_USER_HOME}/Library")
																														(require-any
																															(require-not (extension com.apple.sandbox.oopjit))
																															(require-not (subpath "/private/var/OOPJit"))
																															(entitlement-is-present com.apple.private.oop-jit.loader)
																															(require-all
																																(extension com.apple.app-sandbox.read)
																																(extension com.apple.app-sandbox.read-write))))
																													(require-all
																														(subpath-prefix "${ANY_USER_HOME}/Containers")
																														(require-any
																															(require-not (extension com.apple.sandbox.oopjit))
																															(require-not (subpath "/private/var/OOPJit"))
																															(entitlement-is-present com.apple.private.oop-jit.loader)
																															(require-all
																																(extension com.apple.app-sandbox.read)
																																(extension com.apple.app-sandbox.read-write))))
																													(require-all
																														(subpath "/private/var/containers")
																														(require-any
																															(require-not (extension com.apple.sandbox.oopjit))
																															(require-not (subpath "/private/var/OOPJit"))
																															(entitlement-is-present com.apple.private.oop-jit.loader)
																															(require-all
																																(extension com.apple.app-sandbox.read)
																																(extension com.apple.app-sandbox.read-write))))))))))))))))))))))))))))))
			(require-all
				(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
				(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.pep.configuration.plist"))
				(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
				(require-not (literal "/private/var/preferences/com.apple.security.plist"))
				(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache"))
				(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
				(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
				(require-not (subpath-prefix "${HOME}/Library/Cookies"))
				(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
						(require-not (process-attribute is-apple-signed-executable)))
					(require-all
						(entitlement-is-present com.apple.private.networkextension.configuration)
						(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache")))
					(require-all
						(vnode-type DIRECTORY)
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(extension com.apple.tcc.kTCCServiceMediaLibrary)
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
						(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
					(require-all
						(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
						(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
						(require-not (literal "/private/var/preferences/com.apple.security.plist"))
						(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
						(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
						(require-all (require-not (subpath "/Library/Dictionaries"))
(require-not (subpath-prefix "${HOME}/Library/Dictionaries")))
						(require-not (literal-prefix "${HOME}/Library/Caches/DateFormats.plist"))
						(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
						(require-any
							(require-all
								(literal "/private/var/")
								(require-any
									(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
									(require-all
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension.plist")
										(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))))
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist")))
							(require-all
								(require-not (subpath-prefix "${HOME}/Library/Fonts"))
								(require-not (subpath "/Library/Audio/Tunings/Generic/Haptics"))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar"))
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
								(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache"))
								(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist"))
								(require-all (require-not (subpath-prefix "${HOME}/Library/VoiceServices/Assets"))
(require-not (subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice")))
								(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd"))
								(require-not (subpath "/private/var/db/com.apple.naturallanguaged"))
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
								(require-any
									(require-all
										(extension com.apple.assets.read)
										(require-not (subpath "/private/var/MobileAsset"))
										(require-not (subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
										(require-any
											(subpath "/System/Library/Carrier Bundles")
											(subpath-prefix "${HOME}/Library/Carrier Bundles")
											(require-all
												(subpath-prefix "${HOME}/Library/ReplayKit")
												(require-not (extension com.apple.replayd.read-only)))
											(require-all
												(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
												(require-not (extension com.apple.Pasteboard-readonly)))
											(require-all
												(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
												(require-not (extension com.apple.odr-assets)))
											(require-all
												(extension com.apple.fileprovider.read-write)
												(require-all (require-not (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?")))
												(literal "/private/var/")
												(require-any
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
														(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$"))
														(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
														(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
													(require-all
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
														(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
												(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$"))
												(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))
												(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
											(require-all
												(extension com.apple.classkit.read-write)
												(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?"))
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
												(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
												(require-not (extension com.apple.librarian.ubiquity-revision)))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
												(require-not (extension com.apple.librarian.ubiquity-revision)))
											(require-all
												(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
												(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
												(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
												(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
												(require-not (subpath-prefix "${FRONT_USER_HOME}")))
											(require-all
												(extension com.apple.librarian.ubiquity-container)
												(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
												(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
												(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
												(require-not (subpath-prefix "${FRONT_USER_HOME}")))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
												(require-not (extension com.apple.clouddocs.version)))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
												(require-not (extension com.apple.clouddocs.version)))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
												(vnode-type REGULAR-FILE)
												(require-not (extension com.apple.clouddocs.version)))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
												(vnode-type REGULAR-FILE)
												(require-not (extension com.apple.clouddocs.version)))
											(require-all
												(literal "/System/Library/Carrier Bundles/")
												(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
												(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
											(require-all
												(process-attribute is-apple-signed-executable)
												(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
											(require-all
												(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
												(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
												(require-not (literal "/private/var/preferences/com.apple.security.plist"))
												(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
												(require-not (subpath "/private/var/tmp/MediaCache"))
												(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
												(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache"))
												(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
												(require-any
													(require-all
														(entitlement-is-present com.apple.private.networkextension.configuration)
														(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))
													(require-all
														(subpath-prefix "${HOME}/Media")
														(require-any
															(require-all
																(extension com.apple.tcc.kTCCServicePhotos)
																(require-not (subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData"))
																(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Metadata")))
																(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
																(require-not (subpath-prefix "${HOME}/Media/DCIM"))
																(require-not (literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist"))
																(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Sync"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Mutations")))
																(require-not (extension com.apple.avasset.read-only)))
															(require-all
																(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")
																(process-attribute is-platform-binary)
																(extension com.apple.tcc.kTCCServicePhotos))
															(require-all
																(require-not (subpath-prefix "${HOME}/Media/Safari"))
																(require-not (subpath-prefix "${HOME}/Media/Debug")))))
													(require-all
														(require-not (subpath-prefix "${HOME}/Library/Fonts"))
														(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
														(require-all (require-not (subpath "/AppleInternal/Library/Frameworks/RadarCompose.framework"))
(require-not (literal-prefix "${HOME}/Library/SyncedPreferences/com.apple.camera.plist"))
(require-not (literal-prefix "${HOME}/Library/SyncedPreferences/com.apple.mobileslideshow.plist")))
														(require-all (require-not (subpath-prefix "${HOME}/Documents/com.apple.camera.settings"))
(require-not (subpath-prefix "${HOME}/Documents/com.apple.mobileslideshow.settings"))
(require-not (subpath-prefix "${HOME}/Library/WebKit"))
(require-not (literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera-"))
(require-not (literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow-"))
(require-not (subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow"))
(require-not (regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState/"))
(require-not (regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState/")))
														(require-any
															(require-all
																(vnode-type REGULAR-FILE)
																(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera"))))
															(require-all
																(vnode-type DIRECTORY)
																(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera"))))
															(require-all
																(require-not (subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera"))
																(require-not (literal-prefix "${HOME}/Library/Caches/Checkpoint.plist"))
																(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
																(require-not (subpath "/private/var/tmp"))
																(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
																(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist"))
																(require-not (subpath-prefix "${HOME}/Media/Memories"))
																(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera")))
																(require-all (require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo")))
																(require-not (subpath-prefix "${HOME}/Media/Photos"))
																(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
																(require-not (subpath "/Library/Ringtones"))
																(require-not (subpath-prefix "${HOME}/Library/WebClips"))
																(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist"))
																(require-any
																	(require-all
																		(literal "/System/Library/Carrier Bundles/")
																		(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
																		(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
																	(require-all
																		(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")))
																		(require-not (subpath-prefix "${HOME}/Library/Cookies"))
																		(require-not (subpath-prefix "${HOME}/Media/DCIM"))
																		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
																		(require-any
																			(require-all
																				(literal "/private/var/")
																				(require-any
																					(require-all
																						(subpath-prefix "${HOME}")
																						(require-not (regex #"^/private/var/mobile/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/euser[0-9]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/[-0-9A-F]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/Users/[^/]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist"))
																						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
																						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
																						(require-not (regex #"^/private/var/mobile/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/euser[0-9]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/[-0-9A-F]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/Users/[^/]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist")))
																					(require-all
																						(subpath-prefix "${FRONT_USER_HOME}")
																						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
																						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
																						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))
																						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))))
																			(require-all
																				(require-not (literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
																				(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
																				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
																				(require-any
																					(require-any (literal "/usr/sbin/fairplayd")
(subpath-prefix "${HOME}/Library/FairPlay"))
																					(require-all
																						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
																						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
																						(require-any
																							(require-all
																								(signing-identifier "com.apple.camera.lockscreen")
																								(extension com.apple.sandbox.container)
																								(require-all (require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork")))
																								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?"))
																								(require-not (literal))
																								(literal "/private/var/")
																								(require-any
																									(require-all
																										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/"))
																										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+$"))
																										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$"))
																										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$"))
																										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))
																									(require-all
																										(literal "/private/var/PersonaVolumes/")
																										(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
																										(subpath-prefix "${FRONT_USER_HOME}")
																										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")))))
																							(require-all
																								(literal "/private/var/")
																								(subpath-prefix "${FRONT_USER_HOME}")
																								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")))
																							(require-all
																								(literal "/System/Library/Carrier Bundles/")
																								(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
																								(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
																							(require-all
																								(literal "/private/var/")
																								(require-any
																									(require-all
																										(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
																										(require-not (subpath-prefix "${FRONT_USER_HOME}")))
																									(require-all
																										(subpath-prefix "${FRONT_USER_HOME}")
																										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))))
																							(require-all
																								(debug-mode)
																								(require-not (subpath "/AppleInternal"))
																								(require-not (subpath "/usr/local/lib")))
																							(require-all
																								(require-not (extension com.apple.app-sandbox.read))
																								(require-any
																									(require-all
																										(extension com.apple.security.exception.files.home-relative-path.read-only)
																										(extension com.apple.app-sandbox.read-write))
																									(require-all
																										(extension com.apple.security.exception.files.home-relative-path.read-write)
																										(extension com.apple.app-sandbox.read-write))
																									(require-all
																										(require-not (extension com.apple.app-sandbox.read-write))
																										(require-any
																											(extension com.apple.sandbox.executable)
																											(require-all
																												(extension com.apple.security.exception.files.absolute-path.read-only)
																												(extension com.apple.security.exception.files.absolute-path.read-write)
																												(require-any
																													(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
																													(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))))
																											(require-all
																												(subpath-prefix "${ANY_USER_HOME}/Library")
																												(require-any
																													(require-not (extension com.apple.sandbox.oopjit))
																													(require-not (subpath "/private/var/OOPJit"))
																													(entitlement-is-present com.apple.private.oop-jit.loader)
																													(require-all
																														(extension com.apple.app-sandbox.read)
																														(extension com.apple.app-sandbox.read-write))))
																											(require-all
																												(subpath-prefix "${ANY_USER_HOME}/Containers")
																												(require-any
																													(require-not (extension com.apple.sandbox.oopjit))
																													(require-not (subpath "/private/var/OOPJit"))
																													(entitlement-is-present com.apple.private.oop-jit.loader)
																													(require-all
																														(extension com.apple.app-sandbox.read)
																														(extension com.apple.app-sandbox.read-write))))
																											(require-all
																												(subpath "/private/var/containers")
																												(require-any
																													(require-not (extension com.apple.sandbox.oopjit))
																													(require-not (subpath "/private/var/OOPJit"))
																													(entitlement-is-present com.apple.private.oop-jit.loader)
																													(require-all
																														(extension com.apple.app-sandbox.read)
																														(extension com.apple.app-sandbox.read-write)))))))))))))))))))))))))))))))
(deny file-read-data
	(signing-identifier "com.apple.mobileslideshow")
	(require-any (signing-identifier "com.apple.Capture")
(signing-identifier "com.apple.camera.lockscreen")
(signing-identifier "com.apple.photos.Memoryscape"))
	(require-not (signing-identifier "com.apple.camera"))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(signing-identifier "com.apple.camera.lockscreen")
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$")
							(require-all
								(literal-prefix "${HOME}/Library/SpringBoard")
								(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera")
								(require-any (subpath-prefix "${HOME}/Library/Siri")
(subpath-prefix "${HOME}/Library/Application Support/MobileSlideShow")
(subpath-prefix "${HOME}/Library/Application Support/iLifePageLayout")
(subpath-prefix "${HOME}/Library/Caches/com.apple.legacycamera")
(subpath-prefix "${HOME}/Library/Caches/com.apple.springboard.sharedimagecache/Wallpaper")
(literal-prefix "${HOME}/Library/Logs/MobileSlideShow.log")
(literal-prefix "${HOME}/Library/Logs/awd/awdComponent0x19.log")
(literal-prefix "${HOME}/Library/Logs/awd/awd-Camera.log")
(literal-prefix "${HOME}/Library/Logs/awd/awd-MobileSlideShow.log"))
								(subpath-prefix "${HOME}/Library/SMS")
								(subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CloudPhotoLibrary.aslgroup")
								(literal-prefix "${HOME}/Library/Logs/awd")
								(subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/Photos")
								(subpath-prefix "${HOME}/Library/Cookies")
								(require-any
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${HOME}")
										(require-any
											(require-all
												(extension com.apple.tcc.kTCCServiceMediaLibrary)
												(require-any
													(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
													(require-all
														(vnode-type DIRECTORY)
														(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp$")
												(regex #"^/private/var/mobile/Library/SpringBoard/Lock.+" #"^/private/var/mobile/Library/SpringBoard/.+Lock.+" #"^/private/var/mobile/Library/SpringBoard/Home.+" #"^/private/var/mobile/Library/SpringBoard/.+Home.+" #"^/private/var/euser[0-9]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+" #"^/private/var/[-0-9A-F]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+" #"^/private/var/Users/[^/]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+"))))
									(require-all
										(entitlement-is-bool-true com.apple.Contacts.database-allow)
										(extension com.apple.tcc.kTCCServiceAddressBook)
										(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
										(subpath-prefix "${HOME}/Library/AddressBook")
										(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))))))
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
							(require-all
								(literal-prefix "${HOME}/Library/Caches/com.apple.pep.configuration.plist")
								(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
								(literal "/private/var/preferences/com.apple.security.plist")
								(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
								(literal "/private/var/db/com.apple.networkextension.tracker-info")
								(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
								(subpath-prefix "${HOME}/Library/Cookies")
								(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
								(require-any
									(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
									(require-all
										(extension com.apple.sandbox.application-group)
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
										(literal "/private/var/")
										(require-any
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
											(require-all
												(literal "/private/var/PersonaVolumes/")
												(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
										(process-attribute is-apple-signed-executable))
									(require-all
										(entitlement-is-present com.apple.private.networkextension.configuration)
										(literal "/private/var/preferences/com.apple.networkextension.plist"))
									(require-all
										(vnode-type REGULAR-FILE)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
									(require-all
										(vnode-type DIRECTORY)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${HOME}")
										(extension com.apple.tcc.kTCCServiceMediaLibrary)
										(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
									(require-all
										(process-attribute is-apple-signed-executable)
										(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
										(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
									(require-all
										(literal "/private/var/preferences/com.apple.networkd.plist")
										(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
										(literal "/private/var/preferences/com.apple.security.plist")
										(subpath "/private/var/containers/Data/System/com.apple.geod")
										(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
										(literal "/private/var/db/com.apple.networkextension.tracker-info")
										(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
										(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
										(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
										(require-any
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
													(require-all
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.plist")
														(entitlement-is-present com.apple.private.networkextension.configuration))))
											(require-all
												(process-attribute is-apple-signed-executable)
												(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
											(require-all
												(subpath-prefix "${HOME}/Library/Fonts")
												(subpath "/Library/Audio/Tunings/Generic/Haptics")
												(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
												(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
												(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
												(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
												(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
												(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
												(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")
												(subpath "/private/var/db/com.apple.naturallanguaged")
												(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
												(require-any
													(require-all
														(extension com.apple.assets.read)
														(subpath "/private/var/MobileAsset")
														(subpath-prefix "${HOME}/Library/Assets"))
													(require-all
														(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
														(require-any
															(subpath "/System/Library/Carrier Bundles")
															(subpath-prefix "${HOME}/Library/Carrier Bundles")
															(require-all
																(subpath-prefix "${HOME}/Library/ReplayKit")
																(extension com.apple.replayd.read-only))
															(require-all
																(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
																(extension com.apple.Pasteboard-readonly))
															(require-all
																(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
																(extension com.apple.odr-assets))
															(require-all
																(extension com.apple.fileprovider.read-write)
																(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
																(literal "/private/var/")
																(require-any
																	(require-all
																		(subpath-prefix "${FRONT_USER_HOME}")
																		(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
																		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																		(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
																	(require-all
																		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
																		(subpath-prefix "${FRONT_USER_HOME}"))))
															(require-all
																(literal "/private/var/")
																(subpath-prefix "${FRONT_USER_HOME}")
																(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
																(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
															(require-all
																(extension com.apple.classkit.read-write)
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
																(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
															(require-all
																(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
																(extension com.apple.librarian.ubiquity-revision))
															(require-all
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
																(extension com.apple.librarian.ubiquity-revision))
															(require-all
																(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																(subpath-prefix "${HOME}/Library/Mobile Documents")
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																(subpath-prefix "${FRONT_USER_HOME}"))
															(require-all
																(extension com.apple.librarian.ubiquity-container)
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																(subpath-prefix "${HOME}/Library/Mobile Documents")
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																(subpath-prefix "${FRONT_USER_HOME}"))
															(require-all
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
																(extension com.apple.clouddocs.version))
															(require-all
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
																(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																(extension com.apple.clouddocs.version))
															(require-all
																(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
																(vnode-type REGULAR-FILE)
																(extension com.apple.clouddocs.version))
															(require-all
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
																(vnode-type REGULAR-FILE)
																(extension com.apple.clouddocs.version))
															(require-all
																(literal "/System/Library/Carrier Bundles/")
																(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
																(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
															(require-all
																(process-attribute is-apple-signed-executable)
																(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
															(require-all
																(literal "/private/var/preferences/com.apple.networkd.plist")
																(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
																(literal "/private/var/preferences/com.apple.security.plist")
																(literal "/private/var/db/com.apple.networkextension.tracker-info")
																(subpath "/private/var/tmp/MediaCache")
																(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
																(subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")
																(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
																(require-any
																	(require-all
																		(entitlement-is-present com.apple.private.networkextension.configuration)
																		(literal "/private/var/preferences/com.apple.networkextension.plist"))
																	(require-all
																		(subpath-prefix "${HOME}/Media")
																		(require-any
																			(require-all
																				(extension com.apple.tcc.kTCCServicePhotos)
																				(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
																				(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
																				(subpath-prefix "${HOME}/Media/PhotoStreamsData")
																				(subpath-prefix "${HOME}/Media/DCIM")
																				(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
																				(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
																				(extension com.apple.avasset.read-only))
																			(require-all
																				(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")
																				(process-attribute is-platform-binary)
																				(extension com.apple.tcc.kTCCServicePhotos))
																			(require-all
																				(subpath-prefix "${HOME}/Media/Safari")
																				(subpath-prefix "${HOME}/Media/Debug"))))
																	(require-all
																		(subpath-prefix "${HOME}/Library/Fonts")
																		(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
																		(require-any (subpath "/AppleInternal/Library/Frameworks/RadarCompose.framework")
(literal-prefix "${HOME}/Library/SyncedPreferences/com.apple.camera.plist")
(literal-prefix "${HOME}/Library/SyncedPreferences/com.apple.mobileslideshow.plist"))
																		(require-any (subpath-prefix "${HOME}/Documents/com.apple.camera.settings")
(subpath-prefix "${HOME}/Documents/com.apple.mobileslideshow.settings")
(subpath-prefix "${HOME}/Library/WebKit")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera-")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow-")
(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState/")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState/"))
																		(require-any
																			(require-all
																				(vnode-type REGULAR-FILE)
																				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera")))
																			(require-all
																				(vnode-type DIRECTORY)
																				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera")))
																			(require-all
																				(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera")
																				(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
																				(subpath-prefix "${HOME}/Media/MediaAnalysis")
																				(subpath "/private/var/tmp")
																				(subpath-prefix "${HOME}/Media/PhotoData")
																				(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
																				(subpath-prefix "${HOME}/Media/Memories")
																				(require-any (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera"))
																				(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
																				(subpath-prefix "${HOME}/Media/Photos")
																				(subpath-prefix "${PROCESS_TEMP_DIR}")
																				(subpath "/Library/Ringtones")
																				(subpath-prefix "${HOME}/Library/WebClips")
																				(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
																				(require-any
																					(require-all
																						(literal "/System/Library/Carrier Bundles/")
																						(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
																						(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
																					(require-all
																						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.camera"))
																						(subpath-prefix "${HOME}/Library/Cookies")
																						(subpath-prefix "${HOME}/Media/DCIM")
																						(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
																						(require-any
																							(require-all
																								(literal "/private/var/")
																								(require-any
																									(require-all
																										(subpath-prefix "${HOME}")
																										(regex #"^/private/var/mobile/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/euser[0-9]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/[-0-9A-F]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/Users/[^/]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist")
																										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
																										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
																										(regex #"^/private/var/mobile/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/euser[0-9]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/[-0-9A-F]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/Users/[^/]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist"))
																									(require-all
																										(subpath-prefix "${FRONT_USER_HOME}")
																										(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
																										(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
																										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")
																										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))))
																							(require-all
																								(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist")
																								(subpath-prefix "${HOME}/Media/PhotoStreamsData")
																								(subpath-prefix "${HOME}/Media/Purchases")
																								(require-any
																									(require-any (literal "/usr/sbin/fairplayd")
(subpath-prefix "${HOME}/Library/FairPlay"))
																									(require-all
																										(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
																										(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
																										(require-any
																											(require-all
																												(signing-identifier "com.apple.camera.lockscreen")
																												(extension com.apple.sandbox.container)
																												(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
																												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
																												(literal)
																												(literal "/private/var/")
																												(require-any
																													(require-all
																														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/")
																														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+$")
																														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$")
																														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$")
																														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))
																													(require-all
																														(literal "/private/var/PersonaVolumes/")
																														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
																														(subpath-prefix "${FRONT_USER_HOME}")
																														(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$"))))
																											(require-all
																												(literal "/private/var/")
																												(subpath-prefix "${FRONT_USER_HOME}")
																												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$"))
																											(require-all
																												(literal "/System/Library/Carrier Bundles/")
																												(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
																												(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
																											(require-all
																												(literal "/private/var/")
																												(require-any
																													(require-all
																														(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
																														(subpath-prefix "${FRONT_USER_HOME}"))
																													(require-all
																														(subpath-prefix "${FRONT_USER_HOME}")
																														(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))))
																											(require-all
																												(debug-mode)
																												(subpath "/AppleInternal")
																												(subpath "/usr/local/lib"))
																											(require-all
																												(extension com.apple.app-sandbox.read)
																												(require-any
																													(require-all
																														(extension com.apple.security.exception.files.home-relative-path.read-only)
																														(extension com.apple.app-sandbox.read-write))
																													(require-all
																														(extension com.apple.security.exception.files.home-relative-path.read-write)
																														(extension com.apple.app-sandbox.read-write))
																													(require-all
																														(extension com.apple.app-sandbox.read-write)
																														(require-any
																															(extension com.apple.sandbox.executable)
																															(require-all
																																(extension com.apple.security.exception.files.absolute-path.read-only)
																																(extension com.apple.security.exception.files.absolute-path.read-write)
																																(require-any
																																	(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
																																	(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))))
																															(require-all
																																(subpath-prefix "${ANY_USER_HOME}/Library")
																																(require-any
																																	(extension com.apple.sandbox.oopjit)
																																	(subpath "/private/var/OOPJit")
																																	(entitlement-is-present com.apple.private.oop-jit.loader)
																																	(require-all
																																		(extension com.apple.app-sandbox.read)
																																		(extension com.apple.app-sandbox.read-write))))
																															(require-all
																																(subpath-prefix "${ANY_USER_HOME}/Containers")
																																(require-any
																																	(extension com.apple.sandbox.oopjit)
																																	(subpath "/private/var/OOPJit")
																																	(entitlement-is-present com.apple.private.oop-jit.loader)
																																	(require-all
																																		(extension com.apple.app-sandbox.read)
																																		(extension com.apple.app-sandbox.read-write))))
																															(require-all
																																(subpath "/private/var/containers")
																																(require-any
																																	(extension com.apple.sandbox.oopjit)
																																	(subpath "/private/var/OOPJit")
																																	(entitlement-is-present com.apple.private.oop-jit.loader)
																																	(require-all
																																		(extension com.apple.app-sandbox.read)
																																		(extension com.apple.app-sandbox.read-write))))))))))))))))))))))))))))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(literal "/private/var/preferences/com.apple.networkd.plist")
						(literal-prefix "${HOME}/Library/Caches/com.apple.pep.configuration.plist")
						(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
						(literal "/private/var/preferences/com.apple.security.plist")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
						(literal "/private/var/db/com.apple.networkextension.tracker-info")
						(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
						(subpath-prefix "${HOME}/Library/Cookies")
						(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
						(require-any
							(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
							(require-all
								(extension com.apple.sandbox.application-group)
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
								(literal "/private/var/")
								(require-any
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
								(process-attribute is-apple-signed-executable))
							(require-all
								(entitlement-is-present com.apple.private.networkextension.configuration)
								(literal "/private/var/preferences/com.apple.networkextension.plist"))
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(extension com.apple.tcc.kTCCServiceMediaLibrary)
								(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
							(require-all
								(process-attribute is-apple-signed-executable)
								(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
							(require-all
								(literal "/private/var/preferences/com.apple.networkd.plist")
								(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
								(literal "/private/var/preferences/com.apple.security.plist")
								(subpath "/private/var/containers/Data/System/com.apple.geod")
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
								(literal "/private/var/db/com.apple.networkextension.tracker-info")
								(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
								(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
								(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
								(require-any
									(require-all
										(literal "/private/var/")
										(require-any
											(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
											(require-all
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(literal "/private/var/preferences/com.apple.networkextension.plist")
												(entitlement-is-present com.apple.private.networkextension.configuration))))
									(require-all
										(process-attribute is-apple-signed-executable)
										(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
									(require-all
										(subpath-prefix "${HOME}/Library/Fonts")
										(subpath "/Library/Audio/Tunings/Generic/Haptics")
										(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
										(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
										(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
										(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
										(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
										(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
										(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")
										(subpath "/private/var/db/com.apple.naturallanguaged")
										(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
										(require-any
											(require-all
												(extension com.apple.assets.read)
												(subpath "/private/var/MobileAsset")
												(subpath-prefix "${HOME}/Library/Assets"))
											(require-all
												(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
												(require-any
													(subpath "/System/Library/Carrier Bundles")
													(subpath-prefix "${HOME}/Library/Carrier Bundles")
													(require-all
														(subpath-prefix "${HOME}/Library/ReplayKit")
														(extension com.apple.replayd.read-only))
													(require-all
														(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
														(extension com.apple.Pasteboard-readonly))
													(require-all
														(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks"))
														(extension com.apple.odr-assets))
													(require-all
														(extension com.apple.fileprovider.read-write)
														(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
														(literal "/private/var/")
														(require-any
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}")
																(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
																(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
																(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
																(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
															(require-all
																(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
																(subpath-prefix "${FRONT_USER_HOME}"))))
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
														(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
													(require-all
														(extension com.apple.classkit.read-write)
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
													(require-all
														(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
														(extension com.apple.librarian.ubiquity-revision))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
														(extension com.apple.librarian.ubiquity-revision))
													(require-all
														(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
														(subpath-prefix "${HOME}/Library/Mobile Documents")
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(extension com.apple.librarian.ubiquity-container)
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
														(subpath-prefix "${HOME}/Library/Mobile Documents")
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
														(extension com.apple.clouddocs.version))
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
														(extension com.apple.clouddocs.version))
													(require-all
														(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
														(vnode-type REGULAR-FILE)
														(extension com.apple.clouddocs.version))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
														(vnode-type REGULAR-FILE)
														(extension com.apple.clouddocs.version))
													(require-all
														(literal "/System/Library/Carrier Bundles/")
														(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
														(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
													(require-all
														(process-attribute is-apple-signed-executable)
														(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
													(require-all
														(literal "/private/var/preferences/com.apple.networkd.plist")
														(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
														(literal "/private/var/preferences/com.apple.security.plist")
														(literal "/private/var/db/com.apple.networkextension.tracker-info")
														(subpath "/private/var/tmp/MediaCache")
														(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
														(subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")
														(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
														(require-any
															(require-all
																(entitlement-is-present com.apple.private.networkextension.configuration)
																(literal "/private/var/preferences/com.apple.networkextension.plist"))
															(require-all
																(subpath-prefix "${HOME}/Media")
																(require-any
																	(require-all
																		(extension com.apple.tcc.kTCCServicePhotos)
																		(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
																		(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
																		(subpath-prefix "${HOME}/Media/PhotoStreamsData")
																		(subpath-prefix "${HOME}/Media/DCIM")
																		(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
																		(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
																		(extension com.apple.avasset.read-only))
																	(require-all
																		(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")
																		(process-attribute is-platform-binary)
																		(extension com.apple.tcc.kTCCServicePhotos))
																	(require-all
																		(subpath-prefix "${HOME}/Media/Safari")
																		(subpath-prefix "${HOME}/Media/Debug"))))
															(require-all
																(subpath-prefix "${HOME}/Library/Fonts")
																(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
																(require-any (subpath "/AppleInternal/Library/Frameworks/RadarCompose.framework")
(literal-prefix "${HOME}/Library/SyncedPreferences/com.apple.camera.plist")
(literal-prefix "${HOME}/Library/SyncedPreferences/com.apple.mobileslideshow.plist"))
																(require-any (subpath-prefix "${HOME}/Documents/com.apple.camera.settings")
(subpath-prefix "${HOME}/Documents/com.apple.mobileslideshow.settings")
(subpath-prefix "${HOME}/Library/WebKit")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera-")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow-")
(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState/")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState/"))
																(require-any
																	(require-all
																		(vnode-type REGULAR-FILE)
																		(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera")))
																	(require-all
																		(vnode-type DIRECTORY)
																		(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera")))
																	(require-all
																		(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera")
																		(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
																		(subpath-prefix "${HOME}/Media/MediaAnalysis")
																		(subpath "/private/var/tmp")
																		(subpath-prefix "${HOME}/Media/PhotoData")
																		(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
																		(subpath-prefix "${HOME}/Media/Memories")
																		(require-any (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera"))
																		(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
																		(subpath-prefix "${HOME}/Media/Photos")
																		(subpath-prefix "${PROCESS_TEMP_DIR}")
																		(subpath "/Library/Ringtones")
																		(subpath-prefix "${HOME}/Library/WebClips")
																		(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
																		(require-any
																			(require-all
																				(literal "/System/Library/Carrier Bundles/")
																				(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
																				(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
																			(require-all
																				(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.camera"))
																				(subpath-prefix "${HOME}/Library/Cookies")
																				(subpath-prefix "${HOME}/Media/DCIM")
																				(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
																				(require-any
																					(require-all
																						(literal "/private/var/")
																						(require-any
																							(require-all
																								(subpath-prefix "${HOME}")
																								(regex #"^/private/var/mobile/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/euser[0-9]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/[-0-9A-F]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/Users/[^/]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist")
																								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
																								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
																								(regex #"^/private/var/mobile/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/euser[0-9]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/[-0-9A-F]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/Users/[^/]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist"))
																							(require-all
																								(subpath-prefix "${FRONT_USER_HOME}")
																								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
																								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
																								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")
																								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))))
																					(require-all
																						(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist")
																						(subpath-prefix "${HOME}/Media/PhotoStreamsData")
																						(subpath-prefix "${HOME}/Media/Purchases")
																						(require-any
																							(require-any (literal "/usr/sbin/fairplayd")
(subpath-prefix "${HOME}/Library/FairPlay"))
																							(require-all
																								(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
																								(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
																								(require-any
																									(require-all
																										(signing-identifier "com.apple.camera.lockscreen")
																										(extension com.apple.sandbox.container)
																										(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
																										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
																										(literal)
																										(literal "/private/var/")
																										(require-any
																											(require-all
																												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/System/")
																												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+$")
																												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/StoreKit$")
																												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/iTunesArtwork$")
																												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))
																											(require-all
																												(literal "/private/var/PersonaVolumes/")
																												(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
																												(subpath-prefix "${FRONT_USER_HOME}")
																												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$"))))
																									(require-all
																										(literal "/private/var/")
																										(subpath-prefix "${FRONT_USER_HOME}")
																										(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$"))
																									(require-all
																										(literal "/System/Library/Carrier Bundles/")
																										(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
																										(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
																									(require-all
																										(literal "/private/var/")
																										(require-any
																											(require-all
																												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
																												(subpath-prefix "${FRONT_USER_HOME}"))
																											(require-all
																												(subpath-prefix "${FRONT_USER_HOME}")
																												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))))
																									(require-all
																										(debug-mode)
																										(subpath "/AppleInternal")
																										(subpath "/usr/local/lib"))
																									(require-all
																										(extension com.apple.app-sandbox.read)
																										(require-any
																											(require-all
																												(extension com.apple.security.exception.files.home-relative-path.read-only)
																												(extension com.apple.app-sandbox.read-write))
																											(require-all
																												(extension com.apple.security.exception.files.home-relative-path.read-write)
																												(extension com.apple.app-sandbox.read-write))
																											(require-all
																												(extension com.apple.app-sandbox.read-write)
																												(require-any
																													(extension com.apple.sandbox.executable)
																													(require-all
																														(extension com.apple.security.exception.files.absolute-path.read-only)
																														(extension com.apple.security.exception.files.absolute-path.read-write)
																														(require-any
																															(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
																															(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))))
																													(require-all
																														(subpath-prefix "${ANY_USER_HOME}/Library")
																														(require-any
																															(extension com.apple.sandbox.oopjit)
																															(subpath "/private/var/OOPJit")
																															(entitlement-is-present com.apple.private.oop-jit.loader)
																															(require-all
																																(extension com.apple.app-sandbox.read)
																																(extension com.apple.app-sandbox.read-write))))
																													(require-all
																														(subpath-prefix "${ANY_USER_HOME}/Containers")
																														(require-any
																															(extension com.apple.sandbox.oopjit)
																															(subpath "/private/var/OOPJit")
																															(entitlement-is-present com.apple.private.oop-jit.loader)
																															(require-all
																																(extension com.apple.app-sandbox.read)
																																(extension com.apple.app-sandbox.read-write))))
																													(require-all
																														(subpath "/private/var/containers")
																														(require-any
																															(extension com.apple.sandbox.oopjit)
																															(subpath "/private/var/OOPJit")
																															(entitlement-is-present com.apple.private.oop-jit.loader)
																															(require-all
																																(extension com.apple.app-sandbox.read)
																																(extension com.apple.app-sandbox.read-write))))))))))))))))))))))))))))))))
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-read-xattr
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-any
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision)))))
			(require-all
				(vnode-type SYMLINK)
				(require-any
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
						(require-not (extension com.apple.revisiond.revision))))))))
(deny file-write*
	(require-all
		(require-not (literal-prefix "${HOME}/Library/SpringBoard"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Siri"))
(require-not (subpath-prefix "${HOME}/Library/Application Support/MobileSlideShow"))
(require-not (subpath-prefix "${HOME}/Library/Application Support/iLifePageLayout"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.legacycamera"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.springboard.sharedimagecache/Wallpaper"))
(require-not (literal-prefix "${HOME}/Library/Logs/MobileSlideShow.log"))
(require-not (literal-prefix "${HOME}/Library/Logs/awd/awdComponent0x19.log"))
(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-Camera.log"))
(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-MobileSlideShow.log")))
		(require-any
			(require-all
				(literal "/private/var/")
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.mobileipod.plist")
					(require-all
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/Camera-latest.log" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/DiagnosticLogs/Camera-latest.log" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/DiagnosticLogs/Camera-latest.log" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/DiagnosticLogs/Camera-latest.log"))
						(require-not (regex #"^/private/var/mobile/Library/SpringBoard/Lock.+" #"^/private/var/mobile/Library/SpringBoard/.+Lock.+" #"^/private/var/mobile/Library/SpringBoard/Home.+" #"^/private/var/mobile/Library/SpringBoard/.+Home.+" #"^/private/var/euser[0-9]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+" #"^/private/var/[-0-9A-F]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+" #"^/private/var/Users/[^/]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+")))
					(require-all
						(vnode-type REGULAR-FILE)
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(literal-prefix "${HOME}/Library/AddressBook/")
						(require-not (extension com.apple.tcc.kTCCServiceAddressBook)))
					(require-all
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
						(require-not (extension com.apple.tcc.kTCCServiceAddressBook)))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(extension com.apple.tcc.kTCCServiceMediaLibrary)
						(require-any
							(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
							(require-all
								(vnode-type DIRECTORY)
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
								(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache")))
					(require-all
						(vnode-type DIRECTORY)
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache")))
					(require-all
						(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.pep.configuration.plist"))
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache"))
						(require-any
							(literal-prefix "${HOME}/Library/Preferences/com.apple.springboard.plist")
							(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
							(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")))
							(require-all
								(require-not (subpath-prefix "${HOME}/Media/Safari"))
								(require-not (subpath-prefix "${HOME}/Media/Debug"))
								(require-all (require-not (subpath-prefix "${HOME}/Documents/com.apple.camera.settings"))
(require-not (subpath-prefix "${HOME}/Documents/com.apple.mobileslideshow.settings"))
(require-not (subpath-prefix "${HOME}/Library/WebKit"))
(require-not (literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera-"))
(require-not (literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow-"))
(require-not (subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow"))
(require-not (regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState/"))
(require-not (regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState/")))
								(require-any
									(require-all
										(extension com.apple.fileprovider.read-write)
										(require-all (require-not (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?")))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
										(require-not (subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera"))
										(require-any
											(require-all
												(vnode-type REGULAR-FILE)
												(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera"))))
											(require-all
												(vnode-type DIRECTORY)
												(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera"))))
											(require-all
												(require-not (subpath-prefix "${HOME}/Media/MediaAnalysis"))
												(require-not (subpath "/private/var/tmp"))
												(require-not (subpath-prefix "${HOME}/Media/PhotoData"))
												(require-not (subpath-prefix "${HOME}/Media/Memories"))
												(require-all (require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")))
												(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd"))
												(require-not (subpath-prefix "${HOME}/Library/Cookies"))
												(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow"))
(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera")))
												(require-not (subpath-prefix "${HOME}/Media/DCIM"))
												(require-not (subpath-prefix "${HOME}/Media/Photos"))
												(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
												(require-not (subpath-prefix "${HOME}/Library/WebClips"))
												(require-any
													(require-all
														(extension com.apple.classkit.read-write)
														(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?"))
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
														(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
													(require-all
														(subpath-prefix "${HOME}/Library/Mobile Documents")
														(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
														(require-not (extension com.apple.librarian.ubiquity-container)))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
														(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
														(require-not (extension com.apple.librarian.ubiquity-container)))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
														(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
														(require-not (extension com.apple.librarian.ubiquity-container)))
													(require-all
														(vnode-type REGULAR-FILE)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension com.apple.revisiond.staging)))
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-not (entitlement-is-bool-true com.apple.private.librarian.container-proxy))
														(require-not (extension com.apple.librarian.ubiquity-container)))
													(require-all
														(vnode-type DIRECTORY)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension com.apple.revisiond.staging)))
													(require-all
														(signing-identifier "com.apple.camera.lockscreen")
														(extension com.apple.sandbox.container)
														(require-any
															(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
															(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/SyncedPreferences/?")
															(require-all
																(literal "/private/var/")
																(require-any
																	(require-all
																		(literal "/private/var/PersonaVolumes/")
																		(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$"))
																	(require-all
																		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																		(require-any
																			(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$")
																			(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$")
																			(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))
																	(require-all
																		(signing-identifier "com.apple.camera.lockscreen")
																		(literal "/private/var/")
																		(extension com.apple.sandbox.container)
																		(require-any
																			(require-all
																				(literal "/private/var/PersonaVolumes/")
																				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
																			(require-all
																				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))))))
													(require-all
														(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
														(require-not (extension com.apple.app-sandbox.read))
														(require-not (extension com.apple.app-sandbox.read-write))
														(require-not (extension com.apple.sandbox.executable))
														(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
														(require-any
															(subpath-prefix "${ANY_USER_HOME}/Containers")
															(subpath "/private/var/containers")))
													(require-all
														(vnode-type SYMLINK)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension com.apple.revisiond.staging)))))))))))))
			(require-all
				(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CloudPhotoLibrary.aslgroup"))
				(require-not (subpath-prefix "${HOME}/Library/SMS"))
				(require-not (subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/Photos"))
				(require-not (subpath-prefix "${HOME}/Library/Cookies"))
				(require-any
					(require-all
						(vnode-type REGULAR-FILE)
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(literal-prefix "${HOME}/Library/AddressBook/")
						(require-not (extension com.apple.tcc.kTCCServiceAddressBook)))
					(require-all
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
						(require-not (extension com.apple.tcc.kTCCServiceAddressBook)))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(extension com.apple.tcc.kTCCServiceMediaLibrary)
						(require-any
							(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
							(require-all
								(vnode-type DIRECTORY)
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache")))
					(require-all
						(vnode-type DIRECTORY)
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))))))))
(deny file-write-create
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/awd"))
		(require-any
			(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
			(require-any (literal-prefix "${HOME}/Library/Preferences/com.apple.UIKit.plist")
(literal-prefix "${HOME}/Library/Preferences/com.apple.Accessibility.plist"))
			(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
			(require-all
				(vnode-type DIRECTORY)
				(require-all (require-not (literal-prefix "${HOME}/Library/Siri"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CloudPhotoLibrary.aslgroup")))
				(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
				(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter"))
				(process-attribute is-apple-signed-executable)
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(literal "/private/var/")
				(extension com.apple.sandbox.application-group)
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Preferences$"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Preferences$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$"))))
			(require-all
				(vnode-type DIRECTORY)
				(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices"))
				(require-not (literal-prefix "${HOME}/Library/Caches")))
			(require-all
				(vnode-type DIRECTORY)
				(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")))
			(require-all
				(vnode-type DIRECTORY)
				(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
				(require-all (require-not (literal-prefix "${HOME}/Library/Caches/Snapshots"))
(require-not (literal-prefix "${HOME}/Library/Saved Application State"))
(require-not (regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState"))
(require-not (regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState")))
				(require-all (require-not (literal-prefix "${HOME}/Media/Memories"))
(require-not (literal-prefix "${HOME}/Media/MediaAnalysis")))
				(require-not (literal-prefix "${HOME}/Library/Caches")))
			(require-all
				(signing-identifier "com.apple.camera.lockscreen")
				(extension com.apple.sandbox.container)
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?")
					(require-all
						(literal "/private/var/")
						(require-any
							(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.mobileipod.plist")
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-any
									(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
									(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")))
							(require-all
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$")))
							(require-all
								(vnode-type REGULAR-FILE)
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(literal-prefix "${HOME}/Library/AddressBook/")
								(extension com.apple.tcc.kTCCServiceAddressBook))
							(require-all
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
								(extension com.apple.tcc.kTCCServiceAddressBook))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(extension com.apple.tcc.kTCCServiceMediaLibrary)
								(require-any
									(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
									(require-all
										(vnode-type DIRECTORY)
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
							(require-all
								(extension com.apple.sandbox.application-group)
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
										(subpath-prefix "${FRONT_USER_HOME}"))
									(require-all
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
										(subpath-prefix "${FRONT_USER_HOME}"))))
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
							(require-all
								(literal-prefix "${HOME}/Library/Caches/com.apple.pep.configuration.plist")
								(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
								(require-any
									(literal-prefix "${HOME}/Library/Preferences/com.apple.springboard.plist")
									(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
									(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
									(require-all
										(process-attribute is-apple-signed-executable)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
									(require-all
										(subpath-prefix "${HOME}/Media/Safari")
										(subpath-prefix "${HOME}/Media/Debug")
										(require-any (subpath-prefix "${HOME}/Documents/com.apple.camera.settings")
(subpath-prefix "${HOME}/Documents/com.apple.mobileslideshow.settings")
(subpath-prefix "${HOME}/Library/WebKit")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera-")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow-")
(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState/")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState/"))
										(require-any
											(require-all
												(extension com.apple.fileprovider.read-write)
												(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera")
												(require-any
													(require-all
														(vnode-type REGULAR-FILE)
														(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera")))
													(require-all
														(vnode-type DIRECTORY)
														(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera")))
													(require-all
														(subpath-prefix "${HOME}/Media/MediaAnalysis")
														(subpath "/private/var/tmp")
														(subpath-prefix "${HOME}/Media/PhotoData")
														(subpath-prefix "${HOME}/Media/Memories")
														(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.camera"))
														(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")
														(subpath-prefix "${HOME}/Library/Cookies")
														(require-any (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera"))
														(subpath-prefix "${HOME}/Media/DCIM")
														(subpath-prefix "${HOME}/Media/Photos")
														(subpath-prefix "${PROCESS_TEMP_DIR}")
														(subpath-prefix "${HOME}/Library/WebClips")
														(require-any
															(require-all
																(extension com.apple.classkit.read-write)
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
																(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
															(require-all
																(subpath-prefix "${HOME}/Library/Mobile Documents")
																(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																(extension com.apple.librarian.ubiquity-container))
															(require-all
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
																(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																(extension com.apple.librarian.ubiquity-container))
															(require-all
																(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
																(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																(extension com.apple.librarian.ubiquity-container))
															(require-all
																(vnode-type REGULAR-FILE)
																(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
																(extension com.apple.revisiond.staging))
															(require-all
																(literal "/private/var/")
																(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
																(subpath-prefix "${FRONT_USER_HOME}")
																(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
																(extension com.apple.librarian.ubiquity-container))
															(require-all
																(signing-identifier "com.apple.camera.lockscreen")
																(extension com.apple.sandbox.container)
																(require-any
																	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
																	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/SyncedPreferences/?")
																	(require-all
																		(literal "/private/var/")
																		(require-any
																			(require-all
																				(literal "/private/var/PersonaVolumes/")
																				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$"))
																			(require-all
																				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																				(require-any
																					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$")
																					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$")
																					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))
																			(require-all
																				(signing-identifier "com.apple.camera.lockscreen")
																				(literal "/private/var/")
																				(extension com.apple.sandbox.container)
																				(require-any
																					(require-all
																						(literal "/private/var/PersonaVolumes/")
																						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
																					(require-all
																						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))))))))
															(require-all
																(extension com.apple.security.exception.files.home-relative-path.read-only)
																(extension com.apple.app-sandbox.read)
																(extension com.apple.app-sandbox.read-write)
																(extension com.apple.sandbox.executable)
																(extension com.apple.security.exception.files.home-relative-path.read-write)
																(require-any
																	(subpath-prefix "${ANY_USER_HOME}/Containers")
																	(subpath "/private/var/containers")))
															(require-all
																(vnode-type DIRECTORY)
																(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
																(extension com.apple.revisiond.staging))
															(require-all
																(vnode-type SYMLINK)
																(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
																(extension com.apple.revisiond.staging)))))))))))))))))
(deny file-write-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
	(require-all
		(signing-identifier "com.apple.camera.lockscreen")
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?")
			(require-all
				(literal "/private/var/")
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.mobileipod.plist")
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/Snapshots$"))
					(require-all
						(vnode-type REGULAR-FILE)
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(literal-prefix "${HOME}/Library/AddressBook/")
						(extension com.apple.tcc.kTCCServiceAddressBook))
					(require-all
						(entitlement-is-bool-true com.apple.Contacts.database-allow)
						(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
						(extension com.apple.tcc.kTCCServiceAddressBook))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(extension com.apple.tcc.kTCCServiceMediaLibrary)
						(require-any
							(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
							(require-all
								(vnode-type DIRECTORY)
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))))
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(vnode-type REGULAR-FILE)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
					(require-all
						(vnode-type DIRECTORY)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
					(require-all
						(literal-prefix "${HOME}/Library/Caches/com.apple.pep.configuration.plist")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
						(require-any
							(literal-prefix "${HOME}/Library/Preferences/com.apple.springboard.plist")
							(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
							(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
							(require-all
								(process-attribute is-apple-signed-executable)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
							(require-all
								(subpath-prefix "${HOME}/Media/Safari")
								(subpath-prefix "${HOME}/Media/Debug")
								(require-any (subpath-prefix "${HOME}/Documents/com.apple.camera.settings")
(subpath-prefix "${HOME}/Documents/com.apple.mobileslideshow.settings")
(subpath-prefix "${HOME}/Library/WebKit")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera-")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow-")
(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState/")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState/"))
								(require-any
									(require-all
										(extension com.apple.fileprovider.read-write)
										(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
										(subpath-prefix "${FRONT_USER_HOME}"))
									(require-all
										(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera")
										(require-any
											(require-all
												(vnode-type REGULAR-FILE)
												(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera")))
											(require-all
												(vnode-type DIRECTORY)
												(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera")))
											(require-all
												(subpath-prefix "${HOME}/Media/MediaAnalysis")
												(subpath "/private/var/tmp")
												(subpath-prefix "${HOME}/Media/PhotoData")
												(subpath-prefix "${HOME}/Media/Memories")
												(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/Caches/com.apple.camera"))
												(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")
												(subpath-prefix "${HOME}/Library/Cookies")
												(require-any (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera"))
												(subpath-prefix "${HOME}/Media/DCIM")
												(subpath-prefix "${HOME}/Media/Photos")
												(subpath-prefix "${PROCESS_TEMP_DIR}")
												(subpath-prefix "${HOME}/Library/WebClips")
												(require-any
													(require-all
														(extension com.apple.classkit.read-write)
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
													(require-all
														(subpath-prefix "${HOME}/Library/Mobile Documents")
														(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
														(extension com.apple.librarian.ubiquity-container))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
														(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
														(extension com.apple.librarian.ubiquity-container))
													(require-all
														(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
														(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
														(extension com.apple.librarian.ubiquity-container))
													(require-all
														(vnode-type REGULAR-FILE)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(extension com.apple.revisiond.staging))
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
														(subpath-prefix "${FRONT_USER_HOME}")
														(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
														(extension com.apple.librarian.ubiquity-container))
													(require-all
														(vnode-type DIRECTORY)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(extension com.apple.revisiond.staging))
													(require-all
														(signing-identifier "com.apple.camera.lockscreen")
														(extension com.apple.sandbox.container)
														(require-any
															(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
															(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/SyncedPreferences/?")
															(require-all
																(literal "/private/var/")
																(require-any
																	(require-all
																		(literal "/private/var/PersonaVolumes/")
																		(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$"))
																	(require-all
																		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																		(require-any
																			(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/SyncedPreferences$")
																			(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences|Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)|Temp/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker)[.]plist$")
																			(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))
																	(require-all
																		(signing-identifier "com.apple.camera.lockscreen")
																		(literal "/private/var/")
																		(extension com.apple.sandbox.container)
																		(require-any
																			(require-all
																				(literal "/private/var/PersonaVolumes/")
																				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
																			(require-all
																				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
																				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$"))))))))
													(require-all
														(extension com.apple.security.exception.files.home-relative-path.read-only)
														(extension com.apple.app-sandbox.read)
														(extension com.apple.app-sandbox.read-write)
														(extension com.apple.sandbox.executable)
														(extension com.apple.security.exception.files.home-relative-path.read-write)
														(require-any
															(subpath-prefix "${ANY_USER_HOME}/Containers")
															(subpath "/private/var/containers")))
													(require-all
														(vnode-type SYMLINK)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(extension com.apple.revisiond.staging)))))))))))))))
(deny file-write-setugid)
(deny file-write-unlink
	(require-all
		(require-not (subpath "/private/var/mnt"))
		(require-any
			(entitlement-is-present com.apple.private.oop-jit.loader)
			(require-all
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")
								(signing-identifier "com.apple.camera.lockscreen"))
							(require-all
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/(((((((((Temp/)?Data/[^/]+/[^/]+/Library|Data/[^/]+/[^/]+/Library/Caches)|Temp/Data/[^/]+/[^/]+/Library/Caches)|Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Temp/Data/[^/]+/[^/]+/Library/Caches/Snapshots)|Data/[^/]+/[^/]+/Library/Preferences)|Temp/Data/[^/]+/[^/]+/Library/Preferences)|Data/[^/]+/[^/]+/Library/SyncedPreferences)|Temp/Data/[^/]+/[^/]+/Library/SyncedPreferences)$")
								(signing-identifier "com.apple.camera.lockscreen"))
							(require-all
								(signing-identifier "com.apple.camera.lockscreen")
								(require-any
									(require-all
										(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?"))
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$"))
									(require-all
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/[-0-9A-F]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$" #"^/private/var/Users/[^/]+/Containers/(((Temp/)?Data/[^/]+/[^/]+/Documents|Data/[^/]+/[^/]+/Documents/Inbox)|Temp/Data/[^/]+/[^/]+/Documents/Inbox)$"))))))
					(require-all
						(signing-identifier "com.apple.camera.lockscreen")
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?"))
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Documents/Inbox$")))))
			(require-all
				(extension com.apple.sandbox.oopjit)
				(require-not (subpath "/private/var/OOPJit"))))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "IOGPUDeviceUserClient"))
		(require-all (require-not (iokit-user-client-class "IOAccelDevice2"))
(require-not (iokit-user-client-class "IOAccelContext2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient2")))
		(require-not (iokit-user-client-class "AGXCommandQueue"))
		(require-all (require-not (iokit-user-client-class "IOAccelDevice"))
(require-not (iokit-user-client-class "IOAccelContext"))
(require-not (iokit-user-client-class "IOAccelSubmitter2"))
(require-not (iokit-user-client-class "IOAccelSharedUserClient")))
		(require-not (iokit-user-client-class "AGXSharedUserClient"))
		(require-not (iokit-user-client-class "AGXDevice"))
		(require-all (require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient")))
		(require-not (iokit-user-client-class "RootDomainUserClient"))
		(require-any
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (iokit-user-client-class "IOHIDLibUserClient")))
			(require-all
				(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
				(require-not (iokit-user-client-class "IOSurfaceSendRight"))
				(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
				(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
				(require-not (iokit-user-client-class "AppleKeyStoreUserClient"))
				(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
				(require-any
					(require-all
						(iokit-user-client-class "ANEClientHintsUserClient")
						(require-not (entitlement-is-bool-true com.apple.private.ane.allow-set-client-hints)))
					(require-all
						(require-all (require-not (iokit-connection "IOGPU"))
(require-not (iokit-connection "IOGraphicsAccelerator2")))
						(require-not (extension com.apple.security.exception.iokit-user-client-class))
						(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")))))))
(deny iokit-open-service
	(require-all
		(require-not (iokit-user-client-class "AppleKeyStore"))
		(require-not (iokit-user-client-class "AppleJPEGDriver"))
		(require-not (iokit-user-client-class "AGXAcceleratorG"))
		(require-not (iokit-user-client-class "IOSurfaceRoot"))
		(require-all (require-not (iokit-user-client-class "AppleCLCD"))
(require-not (iokit-user-client-class "AppleParavirtDisplay")))
		(require-all (require-not (iokit-user-client-class "H11ANEIn"))
(require-not (iokit-user-client-class "AppleVirtIONeuralEngineDevice")))
		(require-not (iokit-user-client-class "AppleParavirtGPU"))
		(require-not (iokit-user-client-class "IOPMrootDomain"))))
(deny iokit-set-properties
	(require-all
		(iokit-user-client-class "ANEClientHintsUserClient")
		(entitlement-is-bool-true com.apple.private.ane.allow-set-client-hints)
		(require-all (require-not (iokit-property "ANEHintClientSessionStop"))
(require-not (iokit-property "ANEHintClientSessionStart"))))
	(require-all
		(require-any (iokit-property "mode")
(iokit-property "useMag")
(iokit-property "interval"))
		(iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
	(require-all
		(iokit-property "QueueSize")
		(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")))
(deny ipc-posix-shm-read-data
	(require-all
		(require-not (ipc-posix-name "/com.apple.AppSSO.version"))
		(require-not (ipc-posix-name))
		(ipc-posix-name "apple.shm.notification_center")
		(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))
(deny ipc-posix-shm-write-data
	(require-not (ipc-posix-name)))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (xpc-service-name "com.apple.WebKit.WebAuthn"))
		(require-not (xpc-service-name "com.apple.WebKit.GPU"))
		(require-all (require-not (xpc-service-name "com.apple.WebKit.Networking"))
(require-not (xpc-service-name "com.apple.WebKit.WebContent")))
		(require-not (xpc-service-name "com.apple.WebKit.WebContent.CaptivePortal"))
		(require-not (extension com.apple.security.exception.mach-lookup.local-name))
		(require-not (extension com.apple.security.exception.mach-lookup.global-name))
		(require-any
			(require-any (signing-identifier "com.apple.Capture")
(signing-identifier "com.apple.camera.lockscreen")
(signing-identifier "com.apple.photos.Memoryscape"))
			(require-not (signing-identifier "com.apple.camera"))
			(signing-identifier "com.apple.mobileslideshow")
			(require-all
				(require-not (global-name "com.apple.securityd"))
				(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
				(require-not (global-name "com.apple.networkscored"))
				(require-not (global-name "com.apple.fairplayd.versioned"))
				(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
				(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
				(require-not (global-name "com.apple.coremedia.compressionsession"))
				(require-not (global-name "com.apple.sessionservices"))
				(require-not (global-name "com.apple.mediaserverd"))
				(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
				(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
				(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
				(require-not (global-name "com.apple.accessories.transport-server"))
				(require-not (global-name "com.apple.nearbyd.xpc.nearbyinteraction"))
				(require-not (global-name "com.apple.cvhwa.xpc"))
				(require-all (require-not (global-name "com.apple.inputanalyticsd"))
(require-not (global-name "com.apple.CameraOverlayAngel.application-service")))
				(require-not (global-name "com.apple.sociallayerd"))
				(require-not (global-name "com.apple.coreduetd.context"))
				(require-not (global-name "com.apple.surfboard.applicationservice"))
				(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
				(require-not (global-name "com.apple.icloud.fmfd"))
				(require-not (global-name "com.apple.SystemConfiguration.helper"))
				(require-not (global-name "com.apple.filesystems.userfsd"))
				(require-not (global-name "com.apple.coremedia.decompressionsession"))
				(require-not (global-name "com.apple.commcenter.xpc"))
				(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
				(require-not (global-name "com.apple.lsd.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
				(require-not (global-name "com.apple.contactsd"))
				(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
				(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
				(require-not (global-name "com.apple.tipsd"))
				(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
				(require-not (global-name "com.apple.coreidvd.proofing"))
				(require-not (global-name "com.apple.SystemConfiguration.configd"))
				(require-not (global-name "com.apple.calaccessd"))
				(require-all (require-not (global-name "com.apple.shazamd"))
(require-not (global-name "com.apple.SiriTTSService.TrialProxy")))
				(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
				(require-not (global-name "com.apple.accountsd.accountmanager"))
				(require-not (global-name "com.apple.mediaremoted.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
				(require-not (global-name "com.apple.mobilemail.services.xpc"))
				(require-not (global-name "com.apple.audio.AudioSession"))
				(require-not (global-name "com.apple.mediaanalysisd.analysis"))
				(require-not (global-name "com.apple.internal.studylogd"))
				(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
				(require-not (global-name "com.apple.GSSCred"))
				(require-not (global-name "com.apple.mediaanalysisd.service.public"))
				(require-not (global-name "com.apple.CellularPlanDaemon.xpc"))
				(require-not (global-name "com.apple.dmd.policy"))
				(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
				(require-not (global-name "com.apple.cloudphotod"))
				(require-not (global-name "com.apple.asd.scoring"))
				(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
				(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
				(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
				(require-not (global-name "com.apple.naturallanguaged"))
				(require-not (global-name "com.apple.nehelper"))
				(require-not (global-name "com.apple.nesessionmanager"))
				(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
				(require-not (global-name "com.apple.backgroundassets.user"))
				(require-not (global-name "PurplePPTServer"))
				(require-not (global-name "com.apple.fontservicesd"))
				(require-not (global-name "com.apple.parsecd"))
				(require-not (global-name "com.apple.springboard.backgroundappservices"))
				(require-not (global-name "com.apple.syncdefaultsd"))
				(require-not (global-name "com.apple.dnssd.service"))
				(require-not (global-name "com.apple.backlightd"))
				(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
				(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
				(require-not (global-name "com.apple.marco"))
				(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
				(require-not (global-name "com.apple.usymptomsd"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.videoqueue"))
				(require-not (global-name "com.apple.trustd"))
				(require-not (global-name "com.apple.kvsd"))
				(require-not (global-name "com.apple.siri.vocabularyupdates"))
				(require-not (global-name "com.apple.backupd"))
				(require-not (global-name "com.apple.mediastream.mstreamd"))
				(require-not (global-name "com.apple.accessories.externalaccessory-server"))
				(require-not (global-name "com.apple.accessibility.AXSpringBoardServer"))
				(require-not (global-name "com.apple.ClipServices.clipserviced"))
				(require-all (require-not (global-name "AccessibilityDebuggerServices"))
(require-not (global-name "com.apple.t686.actuationd"))
(require-not (global-name "com.apple.companion.camera"))
(require-not (global-name "com.apple.contacts.CNContactsTestsEnvironmentServer"))
(require-not (global-name "com.apple.xpc.amsengagementd"))
(require-not (global-name "com.apple.mediaanalysisd.photos"))
(require-not (global-name "com.apple.sharing.remote-text-editing"))
(require-not (global-name "com.apple.adid"))
(require-not (global-name "com.apple.assetsd.nebulad"))
(require-not (global-name "com.apple.assetsd.keepDaemonAlive"))
(require-not (global-name "com.apple.rapport.remote-text-input"))
(require-not (global-name "com.apple.remote-text-editing"))
(require-not (global-name "com.apple.remote-text-editing-legacy"))
(require-not (global-name "com.apple.pearld"))
(require-not (global-name "com.apple.paperboard.services"))
(require-not (global-name "com.apple.photos.VideoConversionService"))
(require-not (global-name "com.apple.photos.ImageConversionService"))
(require-not (global-name "com.apple.proactive.PersonalizationPortrait.SocialHighlight"))
(require-not (global-name "com.apple.proactive.PersonalizationPortrait.NamedEntity.readWrite")))
				(require-all (require-not (global-name "com.apple.coremedia.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mutablecomposition.xpc"))
(require-not (global-name "com.apple.coremedia.mediaparserd.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.mutablemovie.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.mutablecomposition.xpc")))
				(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
				(require-not (global-name "com.apple.inputservice.input-ui-host"))
				(require-not (global-name "com.apple.BarcodeSupport.BarcodeNotificationService"))
				(require-all (require-not (global-name "com.apple.cvmsServ"))
(require-not (global-name "com.apple.gpumemd.source")))
				(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
				(require-not (global-name "com.apple.FSEvents"))
				(require-not (global-name "com.apple.storekitd"))
				(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
				(require-not (global-name "com.apple.PointerUI.pointeruid.service"))
				(require-not (global-name "com.apple.remindd"))
				(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
				(require-not (global-name "com.apple.itunesstored.xpc"))
				(require-not (global-name "com.apple.cache_delete"))
				(require-not (global-name "com.apple.nsurlsessiond"))
				(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callstatecontroller"))
				(require-not (global-name "com.apple.coremedia.videocompositor"))
				(require-not (global-name "com.apple.awdd"))
				(require-not (global-name "com.apple.ak.authorizationservices.xpc"))
				(require-not (global-name "com.apple.suggestd.contacts"))
				(require-not (global-name "com.apple.ScreenTimeAgent"))
				(require-not (global-name "com.apple.symptomsd"))
				(require-not (global-name "com.apple.businessservicesd"))
				(require-not (global-name "com.apple.AppSSO.service-xpc"))
				(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
				(require-not (global-name "com.apple.coremedia.videoqueue"))
				(require-not (global-name "com.apple.synapse.backlink-service"))
				(require-all (require-not (global-name "com.apple.ptpcamerad"))
(require-not (global-name "com.apple.widget.pushkit"))
(require-not (global-name "com.apple.gputools.producer"))
(require-not (global-name "com.apple.VoiceOverTouch.drag.xpc"))
(require-not (global-name "com.apple.FontServices.FontProviderLoader"))
(require-not (global-name "com.apple.relatived.public"))
(require-not (global-name "com.apple.relatived.status"))
(require-not (global-name "com.apple.testmanagerd"))
(require-not (global-name "com.apple.translation.text"))
(require-not (global-name "com.apple.DragUI.druid.source"))
(require-not (global-name "com.apple.DragUI.druid.destination"))
(require-not (global-name "com.apple.storekitservice"))
(require-not (global-name "com.apple.storekit.configuration.xpc"))
(require-not (global-name "com.apple.SpatialAudioXPCService"))
(require-not (global-name "com.apple.SensorKit.SKMediaEventsHelper"))
(require-not (global-name "com.apple.uikit.eyedropperd.service"))
(require-not (global-name "com.apple.uiintelligencesupport.agent"))
(require-not (global-name "com.apple.CoreMLModelSecurityService"))
(require-not (global-name "com.apple.ClockKit.CLKWatchFaceLibrary"))
(require-not (global-name "com.apple.IncomingCallNotifications.ICNotificationManagerHost"))
(require-not (global-name "com.apple.fullkeyboardaccess.drag.xpc"))
(require-not (global-name "com.apple.financed.service.financestore"))
(require-not (global-name "com.apple.icprefd-xpc"))
(require-not (global-name "com.apple.inputservice.keyboardui"))
(require-not (global-name "com.apple.iMessageAppsViewService.warmup-connection"))
(require-not (global-name "com.apple.homed.xpc.accessory-setup"))
(require-not (global-name "com.apple.handwritingd.pksettings"))
(require-not (global-name "com.apple.handwritingd.pkanalytics"))
(require-not (global-name "com.apple.managedappdistributiond.xpc"))
(require-not (global-name "com.apple.metrickit.xpc"))
(require-not (global-name "com.apple.metricmeasurement.MetricMeasurementHelper"))
(require-not (global-name "com.apple.chrono.controlcenter"))
(require-not (global-name "com.apple.chrono.widgetcenterconnection"))
(require-not (global-name "com.apple.corelocation.locationUI"))
(require-not (global-name "com.apple.commandandcontrol.drag.xpc"))
(require-not (global-name "com.apple.contactsd.support"))
(require-not (global-name "com.apple.contactsd.contact-provider"))
(require-not (global-name "com.apple.USDLib.FormatLoader"))
(require-not (global-name "com.apple.USDKit.FormatLoader"))
(require-not (global-name "com.apple.UIKit.OverlayUI.services"))
(require-not (global-name "com.apple.UIKit.SecureControlService"))
(require-not (global-name "com.apple.AccessorySetupUI"))
(require-not (global-name "com.apple.AppTrackingTransparency.EnforcementService"))
(require-not (global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent"))
(require-not (global-name "com.apple.dasd.end-prewarm"))
(require-not (global-name "com.apple.dt.xctestd.target"))
(require-not (global-name "com.apple.dt.testmanagerd.runner"))
(require-not (global-name "com.apple.dt.testmanagerd.uiprocess"))
(require-not (global-name "com.apple.donotdisturb.availability.service"))
(require-not (global-name "com.apple.donotdisturb.appconfiguration.service"))
(require-not (global-name "com.apple.assistivetouchd.drag.xpc"))
(require-not (global-name "com.apple.arkit.service.location"))
(require-not (global-name "com.apple.arkit.service.geoTracking"))
(require-not (global-name "com.apple.appprotectiond.extensioninfo"))
(require-not (global-name "com.apple.appprotectiond.extensionmonitor"))
(require-not (global-name "com.apple.ap.promotedcontent.attributionservice"))
(require-not (global-name "com.apple.ap.adprivacyd.attribution"))
(require-not (global-name "com.apple.ap.adprivacyd.trackingtransparency")))
				(require-not (global-name "com.apple.coreduetd.people"))
				(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
				(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
				(require-not (global-name "com.apple.spotlight.IndexAgent"))
				(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
				(require-not (global-name "com.apple.AccessibilityUIServer"))
				(require-not (global-name "com.apple.accessibility.heard"))
				(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
				(require-not (global-name "com.apple.coremedia.admin"))
				(require-not (global-name "com.apple.coremedia.asset.xpc"))
				(require-not (global-name "com.apple.ind.xpc"))
				(require-not (global-name "com.apple.iokit.powerdxpc"))
				(require-not (global-name "com.apple.Music.MPMusicPlayerControllerInternal"))
				(require-not (global-name "com.apple.webprivacyd"))
				(require-not (global-name "com.apple.PowerManagement.control"))
				(require-not (global-name "com.apple.pegasus"))
				(require-not (global-name "com.apple.symptom_diagnostics"))
				(require-not (global-name "com.apple.coremedia.cameraviewfinder"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
				(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
				(require-not (global-name "com.apple.identityservicesd.embedded.auth"))
				(require-not (global-name "com.apple.privacyaccountingd"))
				(require-not (global-name "com.apple.corespotlightservice"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
				(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
				(require-not (global-name "com.apple.medialibraryd.xpc"))
				(require-not (global-name "com.apple.coreduetd.knowledge"))
				(require-not (global-name "com.apple.ctkd.slot-client"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
				(require-not (global-name "com.apple.coresymbolicationd"))
				(require-not (global-name "com.apple.cache_delete.public"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
				(require-not (global-name "com.apple.networkd"))
				(require-not (global-name "com.apple.coremedia.sandboxserver"))
				(require-not (global-name "com.apple.duetactivityscheduler"))
				(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
				(require-not (global-name "com.apple.timesync.ptp.manager"))
				(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
				(require-not (global-name "com.apple.mediastream.sharing"))
				(require-not (global-name "com.apple.corerecents.recentsd"))
				(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
				(require-not (global-name "com.apple.coremedia.player.xpc"))
				(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
				(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
				(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
				(require-not (global-name "com.apple.audioanalyticsd"))
				(require-not (global-name "com.apple.ABDatabaseDoctor"))
				(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
				(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
				(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
				(require-not (global-name "com.apple.handwritingd.remoterecognition"))
				(require-not (global-name "com.apple.siri.VoiceShortcuts.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
				(require-not (global-name "com.apple.idsremoteurlconnectionagent.embedded.auth"))
				(require-not (global-name "com.apple.photoanalysisd"))
				(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
				(require-not (global-name "com.apple.ProgressReporting"))
				(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
				(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
				(require-not (global-name "com.apple.spotlight.SearchAgent"))
				(require-not (global-name "com.apple.coremedia.sts"))
				(require-not (global-name "com.apple.itunescloudd.xpc"))
				(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
				(require-not (global-name "com.apple.timed.xpc"))
				(require-not (global-name "com.apple.appleneuralengine"))
				(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
				(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
				(require-not (global-name "com.apple.Safari.SafeBrowsing.Service"))
				(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
				(require-not (global-name "com.apple.triald.namespace-management"))
				(require-all (require-not (global-name "com.apple.dockaccessoryd"))
(require-not (global-name "com.apple.relatived.tempest")))
				(require-not (global-name "com.apple.geoanalyticsd"))
				(require-not (local-name "com.apple.iphone.axserver"))
				(require-not (xpc-service-name "com.apple.siri.context.service"))
				(require-not (xpc-service-name "com.apple.intents.intents-helper"))
				(require-all (require-not (xpc-service-name "com.apple.OSLogService"))
(require-not (xpc-service-name "com.apple.mscamerad-xpc"))
(require-not (xpc-service-name "com.apple.ModelIO.AssetLoader"))
(require-not (xpc-service-name "com.apple.PrintKit.PrinterTool"))
(require-not (xpc-service-name "com.apple.WorkoutKitXPCService"))
(require-not (xpc-service-name "com.apple.avkit.SharedPreferences"))
(require-not (xpc-service-name "com.apple.DocumentManagerCore.Rename"))
(require-not (xpc-service-name "com.apple.uifoundation-bundle-helper"))
(require-not (xpc-service-name "com.apple.BarcodeSupport.ParsingService"))
(require-not (xpc-service-name "com.apple.datadetectors.AddToRecentsService"))
(require-not (xpc-service-name "com.apple.ContactsUI.ContactsButtonXPCService"))
(require-not (xpc-service-name "com.apple.StocksKitService"))
(require-not (xpc-service-name "com.apple.SafariFoundation.AutoFillHelper"))
(require-not (xpc-service-name "com.apple.SafariFoundation.CredentialProviderExtensionHelper")))
				(require-not (xpc-service-name "com.apple.AGXCompilerService"))
				(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
				(require-not (xpc-service-name "com.apple.imfoundation.IMRemoteURLConnectionAgent"))
				(require-not (xpc-service-name "com.apple.textkit.nsattributedstringagent"))
				(require-not (xpc-service-name "com.apple.accessibility.heard"))
				(require-not (xpc-service-name "com.apple.MTLCompilerService"))
				(require-not (xpc-service-name "com.apple.accessibility.AccessibilityUIServer"))
				(require-not (xpc-service-name "com.apple.coremedia.decompressionsession.xpc"))
				(require-not (xpc-service-name "com.apple.coremedia.compressionsession.xpc"))
				(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
				(require-not (extension com.apple.sandbox.application-group))
				(require-any
					(require-all
						(global-name "com.apple.ak.auth.xpc")
						(require-not (process-attribute is-apple-signed-executable))
						(require-not (entitlement-is-bool-true com.apple.authkit.client))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.private))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.internal)))
					(require-all
						(global-name "com.apple.ak.anisette.xpc")
						(require-not (process-attribute is-apple-signed-executable))
						(require-not (entitlement-is-bool-true com.apple.authkit.client))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.private))
						(require-not (entitlement-is-bool-true com.apple.authkit.client.internal)))
					(require-all
						(global-name "com.apple.networkd_privileged")
						(require-not (entitlement-is-bool-true com.apple.networkd.modify_settings))
						(require-not (entitlement-is-bool-true com.apple.networkd.disable_opportunistic))
						(require-not (entitlement-is-bool-true com.apple.networkd.advisory_socket))
						(require-not (entitlement-is-bool-true com.apple.networkd_privileged))
						(require-not (entitlement-is-bool-true com.apple.networkd.persistent_interface))
						(process-attribute is-apple-signed-executable)
						(require-not (global-name "com.apple.dataaccess.dataaccessd"))
						(require-not (global-name "com.apple.exchangesyncd"))
						(require-not (xpc-service-name "com.apple.ctcategories.service"))
						(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
					(require-all
						(global-name "com.apple.SafetyKit")
						(require-not (entitlement-is-present com.apple.developer.severe-vehicular-crash-event))
						(process-attribute is-apple-signed-executable)
						(require-not (global-name "com.apple.dataaccess.dataaccessd"))
						(require-not (global-name "com.apple.exchangesyncd"))
						(require-not (xpc-service-name "com.apple.ctcategories.service"))
						(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
					(require-all
						(global-name "com.apple.weatherkit.authservice")
						(require-not (entitlement-is-present com.apple.developer.weatherkit))
						(process-attribute is-apple-signed-executable)
						(require-not (global-name "com.apple.dataaccess.dataaccessd"))
						(require-not (global-name "com.apple.exchangesyncd"))
						(require-not (xpc-service-name "com.apple.ctcategories.service"))
						(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
					(require-all
						(global-name "com.apple.merchantd.identity")
						(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
						(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
						(process-attribute is-apple-signed-executable)
						(require-not (global-name "com.apple.dataaccess.dataaccessd"))
						(require-not (global-name "com.apple.exchangesyncd"))
						(require-not (xpc-service-name "com.apple.ctcategories.service"))
						(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
					(require-all
						(global-name "com.apple.merchantd.discovery")
						(require-not (entitlement-is-present com.apple.developer.proximity-reader.payment.acceptance))
						(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.display))
						(require-not (entitlement-is-present com.apple.developer.proximity-reader.identity.read))
						(process-attribute is-apple-signed-executable)
						(require-not (global-name "com.apple.dataaccess.dataaccessd"))
						(require-not (global-name "com.apple.exchangesyncd"))
						(require-not (xpc-service-name "com.apple.ctcategories.service"))
						(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
					(require-all
						(debug-mode)
						(require-all (require-not (global-name "com.apple.swiftuitracingsupport.xpc"))
(require-not (global-name "com.apple.EventTimingProfileService"))
(require-not (global-name "com.apple.JetTracingSupport.JetTracingService"))))
					(require-all
						(global-name "com.apple.callkit.networkextension.voip")
						(require-not (entitlement-is-present com.apple.developer.networking.networkextension))
						(process-attribute is-apple-signed-executable)
						(require-not (global-name "com.apple.dataaccess.dataaccessd"))
						(require-not (global-name "com.apple.exchangesyncd"))
						(require-not (xpc-service-name "com.apple.ctcategories.service"))
						(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
					(require-all
						(global-name "com.apple.gputools.service")
						(require-not (debug-mode)))
					(require-all
						(global-name "com.apple.MomentsUIService")
						(require-not (entitlement-is-present com.apple.developer.journal.allow))
						(process-attribute is-apple-signed-executable)
						(require-not (global-name "com.apple.dataaccess.dataaccessd"))
						(require-not (global-name "com.apple.exchangesyncd"))
						(require-not (xpc-service-name "com.apple.ctcategories.service"))
						(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
					(require-all
						(global-name "com.apple.seserviced.credential.manager")
						(require-not (entitlement-is-present com.apple.developer.secure-element-credential)))
					(require-all
						(global-name "com.apple.financed.service.coredatastore")
						(require-not (entitlement-is-present com.apple.finance.private))
						(require-not (entitlement-is-present com.apple.developer.financekit)))
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (global-name "com.apple.SharedWebCredentials"))
						(require-not (global-name "com.apple.dataaccess.dataaccessd"))
						(require-not (global-name "com.apple.exchangesyncd"))
						(require-not (xpc-service-name "com.apple.ctcategories.service"))
						(require-not (xpc-service-name "com.apple.LORemoteUIPinService")))
					(require-all
						(global-name "com.apple.assessmentagent")
						(require-not (entitlement-is-present com.apple.developer.automatic-assessment-configuration)))
					(require-all
						(global-name "com.apple.ThreadNetwork.xpc")
						(require-not (entitlement-is-bool-true com.apple.developer.networking.manage-thread-network-credentials)))
					(require-all
						(global-name "com.apple.messages.critical-messaging")
						(require-not (entitlement-is-bool-true com.apple.developer.messages.critical-messaging)))
					(require-all
						(global-name "com.apple.coreidvd.digital-presentment.xpc")
						(require-any
							(require-all
								(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(xpc-service-name "com.apple.WebKit.")
									(xpc-service-name-regex #".+")
									(require-all
										(global-name "com.apple.uikit.viewservice.")
										(require-not (global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")))
									(require-all
										(global-name "com.apple.ak.anisette.xpc")
										(process-attribute is-apple-signed-executable)
										(entitlement-is-bool-true com.apple.authkit.client)
										(entitlement-is-bool-true com.apple.authkit.client.private)
										(entitlement-is-bool-true com.apple.authkit.client.internal))
									(require-all
										(global-name "com.apple.ak.auth.xpc")
										(process-attribute is-apple-signed-executable)
										(entitlement-is-bool-true com.apple.authkit.client)
										(entitlement-is-bool-true com.apple.authkit.client.private)
										(entitlement-is-bool-true com.apple.authkit.client.internal))
									(require-all
										(global-name "com.apple.networkd_privileged")
										(entitlement-is-bool-true com.apple.networkd.modify_settings)
										(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
										(entitlement-is-bool-true com.apple.networkd.advisory_socket)
										(entitlement-is-bool-true com.apple.networkd_privileged)
										(entitlement-is-bool-true com.apple.networkd.persistent_interface))
									(require-all
										(global-name "com.apple.system.notification_center")
										(entitlement-is-bool-true com.apple.security.on-demand-install-capable))))
							(require-all
								(entitlement-is-present com.apple.developer.in-app-identity-presentment.merchant-identifiers)
								(require-not (entitlement-is-present com.apple.developer.in-app-identity-presentment)))))
					(require-all
						(global-name "com.apple.ExposureNotification")
						(require-not (entitlement-is-bool-true com.apple.developer.exposure-notification)))
					(require-all
						(global-name "com.apple.seserviced.session")
						(require-not (entitlement-is-bool-true com.apple.developer.carkey.session)))
					(require-all
						(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.CredentialExchange")
						(require-any
							(require-all
								(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.iconservices"))
								(require-not (xpc-service-name "com.apple.audio.analytics.service"))
								(require-not (xpc-service-name))
								(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
								(require-not (xpc-service-name "com.apple.tonelibraryd"))
								(require-any
									(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
									(global-name "com.apple.ckdiscretionaryd.debug")
									(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
									(global-name "com.apple.cloudkit.partlycloudd")
									(xpc-service-name "com.apple.WebKit.")
									(xpc-service-name-regex #".+")
									(require-all
										(global-name "com.apple.uikit.viewservice.")
										(require-not (global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")))
									(require-all
										(global-name "com.apple.ak.anisette.xpc")
										(process-attribute is-apple-signed-executable)
										(entitlement-is-bool-true com.apple.authkit.client)
										(entitlement-is-bool-true com.apple.authkit.client.private)
										(entitlement-is-bool-true com.apple.authkit.client.internal))
									(require-all
										(global-name "com.apple.ak.auth.xpc")
										(process-attribute is-apple-signed-executable)
										(entitlement-is-bool-true com.apple.authkit.client)
										(entitlement-is-bool-true com.apple.authkit.client.private)
										(entitlement-is-bool-true com.apple.authkit.client.internal))
									(require-all
										(global-name "com.apple.networkd_privileged")
										(entitlement-is-bool-true com.apple.networkd.modify_settings)
										(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
										(entitlement-is-bool-true com.apple.networkd.advisory_socket)
										(entitlement-is-bool-true com.apple.networkd_privileged)
										(entitlement-is-bool-true com.apple.networkd.persistent_interface))
									(require-all
										(global-name "com.apple.system.notification_center")
										(entitlement-is-bool-true com.apple.security.on-demand-install-capable))))
							(require-all
								(debug-mode)
								(require-not (entitlement-is-bool-true com.apple.developer.authentication-services.autofill-credential-provider)))))
					(require-all
						(require-not (global-name "com.apple.sharingd.nsxpc"))
						(require-not (global-name "com.apple.securityd"))
						(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
						(require-not (global-name "com.apple.networkscored"))
						(require-not (global-name "com.apple.vibrationmanagerd"))
						(require-not (global-name "com.apple.backboard.animation-fence-arbiter"))
						(require-not (global-name "com.apple.mediaserverd"))
						(require-not (global-name "com.apple.voiceservices.tts"))
						(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
						(require-not (global-name "com.apple.mobileasset.autoasset"))
						(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
						(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
						(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
						(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
						(require-not (global-name "com.apple.librariand"))
						(require-not (global-name "com.apple.audio.AudioConverterService"))
						(require-not (global-name "com.apple.mobileassetd"))
						(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
						(require-not (global-name "com.apple.audio.AudioComponentPrefs"))
						(require-not (global-name "com.apple.SystemConfiguration.helper"))
						(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
						(require-not (global-name "com.apple.WebBookmarks.webbookmarksd"))
						(require-not (global-name "com.apple.locationd.synchronous"))
						(require-not (global-name "com.apple.UIKit.statusbarserver"))
						(require-not (global-name "com.apple.commcenter.xpc"))
						(require-not (global-name "com.apple.bird"))
						(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
						(require-not (global-name "com.apple.safarifetcherd"))
						(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
						(require-not (global-name "com.apple.assistant.dictation"))
						(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
						(require-not (global-name "com.apple.nanoprefsync"))
						(require-not (global-name "com.apple.DeviceAccess.xpc"))
						(require-not (global-name "com.apple.SystemConfiguration.configd"))
						(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
						(require-not (global-name "com.apple.TextInput.lexicon-server"))
						(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
						(require-not (global-name "com.apple.accountsd.accountmanager"))
						(require-not (global-name "com.apple.audio.AudioQueueServer"))
						(require-not (global-name "com.apple.mediaremoted.xpc"))
						(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
						(require-not (global-name "com.apple.backboard.display.services"))
						(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
						(require-not (global-name "com.apple.FileCoordination"))
						(require-not (global-name "com.apple.CARenderServer"))
						(require-not (global-name "com.apple.audio.AudioSession"))
						(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
						(require-not (global-name "com.apple.cloudasset.cloudd"))
						(require-not (global-name "com.apple.GSSCred"))
						(require-not (global-name "com.apple.mobile.keybagd.xpc"))
						(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
						(require-not (global-name "com.apple.TextInput.preferences"))
						(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
						(require-not (global-name "com.apple.mobileassetd.v2"))
						(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
						(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
						(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
						(require-not (global-name "com.apple.SBUserNotification"))
						(require-not (global-name "com.apple.nehelper"))
						(require-not (global-name "com.apple.nesessionmanager"))
						(require-not (global-name "com.apple.bird.token"))
						(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
						(require-not (global-name "com.apple.assetsd.changehub"))
						(require-not (global-name "com.apple.linkd.transcript"))
						(require-all (require-not (global-name "com.apple.dictationd.recognition"))
(require-not (global-name "com.apple.speech.localspeechrecognition")))
						(require-not (global-name "com.apple.revisiond"))
						(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
						(require-not (global-name "com.apple.springboard.backgroundappservices"))
						(require-not (global-name "com.apple.dnssd.service"))
						(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
						(require-not (global-name "com.apple.iconservices"))
						(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
						(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
						(require-not (global-name "com.apple.usymptomsd"))
						(require-not (global-name "com.apple.trustd"))
						(require-not (global-name "com.apple.ckdiscretionaryd"))
						(require-not (global-name "com.apple.locationd.registration"))
						(require-all (require-not (global-name "com.apple.TextInput.emoji"))
(require-not (global-name "com.apple.TextInput.shortcuts")))
						(require-not (global-name "com.apple.accessories.externalaccessory-server"))
						(require-not (global-name "com.apple.lsd.openurl"))
						(require-not (global-name "com.apple.springboard.services"))
						(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
						(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
						(require-not (global-name "com.apple.photos.service"))
						(require-not (global-name "com.apple.accessibility.gax.backboard"))
						(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
						(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
						(require-not (global-name "com.apple.itunesstored.xpc"))
						(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
						(require-not (global-name "com.apple.backboard.hid.services"))
						(require-not (global-name "com.apple.nsurlsessiond"))
						(require-not (global-name "com.apple.voiceservices.keepalive"))
						(require-not (global-name "com.apple.assistant.analytics"))
						(require-not (global-name "com.apple.coremedia.videocompositor"))
						(require-not (global-name "com.apple.FileProvider"))
						(require-not (global-name "com.apple.symptomsd"))
						(require-not (global-name "com.apple.AppSSO.service-xpc"))
						(require-not (global-name "com.apple.accessibility.mediaaccessibilityd"))
						(require-not (global-name "com.apple.webfilterd"))
						(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
						(require-not (global-name "com.apple.frontboard.workspace"))
						(require-all (require-not (global-name "ScripterServer"))
(require-not (global-name "UIASTNotificationCenter"))
(require-not (global-name "com.apple.ondemandd.client"))
(require-not (global-name "com.apple.airplaydiagnostics.server")))
						(require-not (global-name "com.apple.pasteboard.pasted"))
						(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
						(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
						(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
						(require-not (global-name "com.apple.audio.AURemoteIOServer"))
						(require-not (global-name "com.apple.coremedia.admin"))
						(require-not (global-name "com.apple.cloudd"))
						(require-not (global-name "com.apple.coremedia.asset.xpc"))
						(require-not (global-name "com.apple.iohideventsystem"))
						(require-not (global-name "com.apple.pegasus"))
						(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
						(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
						(require-not (global-name "com.apple.privacyaccountingd"))
						(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
						(require-not (global-name "com.apple.iphone.axserver-systemwide"))
						(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
						(require-not (global-name "com.apple.webinspector"))
						(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
						(require-not (global-name "com.apple.dt.automationmode.reader"))
						(require-not (global-name "com.apple.TextInput"))
						(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
						(require-not (global-name "com.apple.networkd"))
						(require-not (global-name "com.apple.TextInput.image-cache-server"))
						(require-not (global-name "com.apple.coremedia.sandboxserver"))
						(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
						(require-not (global-name "com.apple.audio.hapticd"))
						(require-not (global-name "com.apple.timesync.ptp.manager"))
						(require-all (require-not (global-name "com.apple.hid.PencilHaptics"))
(require-not (global-name "com.apple.sharing.sharesheet"))
(require-not (global-name "com.apple.attributionkitd.xpc")))
						(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
						(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
						(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
						(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
						(require-not (global-name "com.apple.coremedia.player.xpc"))
						(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
						(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
						(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
						(require-not (global-name "com.apple.assistant.settings"))
						(require-not (global-name "com.apple.audioanalyticsd"))
						(require-not (global-name "com.apple.UIKit.KeyboardManagement.hosted"))
						(require-not (global-name "com.apple.locationd.spi"))
						(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
						(require-not (global-name "com.apple.linkd.autoShortcut"))
						(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
						(require-not (global-name "com.apple.backboard.hid-services.xpc"))
						(require-not (global-name "com.apple.backboard.TouchDeliveryPolicyServer"))
						(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
						(require-not (global-name "com.apple.tccd"))
						(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
						(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
						(require-not (global-name "com.apple.lsd.advertisingidentifiers"))
						(require-not (global-name "com.apple.UIKit.pasteboardd"))
						(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
						(require-not (global-name "com.apple.usernotifications.listener"))
						(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
						(require-not (global-name "com.apple.coremedia.sts"))
						(require-not (global-name "com.apple.itunescloudd.xpc"))
						(require-not (global-name "com.apple.callkit.callcontrollerhost"))
						(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
						(require-not (global-name "com.apple.frontboard.systemappservices"))
						(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
						(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
						(require-not (global-name "com.apple.TextInput.rdt"))
						(require-all (require-not (global-name "com.apple.progressd"))
(require-not (global-name "com.apple.KeyboardServices.TextReplacementService")))
						(require-not (local-name "com.apple.assistant.contextprovider."))))))))
(deny mach-register
	(require-all
		(require-not (extension com.apple.security.exception.mach-register.local-name))
		(require-not (extension com.apple.security.exception.mach-register.global-name))
		(require-not (extension com.apple.sandbox.application-group))
		(require-not (local-name "com.apple.iphone.axserver"))
		(require-not (local-name "com.apple.assistant.contextprovider."))
		(local-name "com.apple.accessibility.gax.client")))
(deny network-inbound
	(require-all
		(require-not (entitlement-is-bool-true com.apple.developer.networking.multicast))
		(require-any
			(require-all
				(signing-identifier "com.apple.camera.lockscreen")
				(literal "/private/var/")
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")))
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/euser[0-9]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/[-0-9A-F]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)/" #"^/private/var/Users/[^/]+/Containers/(((((Temp/)?Data/[^/]+/[^/]+/tmp|Data/[^/]+/[^/]+/Library)|Temp/Data/[^/]+/[^/]+/Library)|Data/[^/]+/[^/]+/Documents)|Temp/Data/[^/]+/[^/]+/Documents)$")))))
			(require-all
				(extension com.apple.app-sandbox.read-write)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents")))
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/tmp/ubiquity.socket")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/tmp/ubiquity.socket")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(subpath-prefix "${FRONT_USER_HOME}")))))))
(deny syscall-unix
	(require-all
		(require-not (c1 0f0e 8a76 8a79))
		(require-any
			(require-all
				(syscall-number SYS_open_dprotected_np)
				(signing-identifier "com.apple.camera.lockscreen"))
			(require-all
				(syscall-number SYS_openat_dprotected_np)
				(signing-identifier "com.apple.camera.lockscreen")))))
(deny system-fcntl
	(ce 04d2 8a74 9ce0))
(deny system-fsctl
	(require-all
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 72)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 93)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "h" 32)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "h" 31)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 71)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "h" 29)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 32)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 3)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "h" 28)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 18)))
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 27))))
(deny system-kas-info)
(deny system-mac-syscall
	(require-all
		(mac-syscall-number 5)
		(mac-policy-name "Sandbox"))
	(require-all
		(mac-syscall-number 4)
		(mac-policy-name "Sandbox")
		(signing-identifier "com.apple.camera.lockscreen")))
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-any
			(signing-identifier "com.apple.mobileslideshow")
			(require-any (signing-identifier "com.apple.Capture")
(signing-identifier "com.apple.camera.lockscreen")
(signing-identifier "com.apple.photos.Memoryscape"))
			(require-not (signing-identifier "com.apple.camera"))
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (preference-domain "com.apple.morphology.internal")))
			(require-all
				(require-all (require-not (preference-domain "com.apple.SwiftUI"))
(require-not (preference-domain "com.apple.morphology"))
(require-not (preference-domain "com.apple.LinearMediaKit"))
(require-not (preference-domain "com.apple.MapKit.internal"))
(require-not (preference-domain "com.apple.Accessibility.speech")))
				(require-not (preference-domain "com.apple.appleaccount"))
				(require-not (preference-domain "com.apple.locationd"))
				(require-not (preference-domain "com.apple.assistant.logging"))
				(require-not (preference-domain "com.apple.aggregated"))
				(require-not (preference-domain "com.apple.Metal"))
				(require-not (preference-domain "com.apple.CoreDuet"))
				(require-not (preference-domain "com.apple.MobileSMS"))
				(require-not (preference-domain "com.apple.UIKit"))
				(require-not (preference-domain "com.apple.assistant.support"))
				(require-not (preference-domain "com.apple.mobilemail"))
				(require-not (preference-domain "com.apple.AppSupport"))
				(require-not (preference-domain "com.apple.CoreMotion"))
				(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
				(require-not (preference-domain "com.apple.nanoprefsyncd"))
				(require-not (preference-domain "com.apple.VoiceOverTouch"))
				(require-not (preference-domain "com.apple.DataMigration"))
				(require-not (preference-domain "com.apple.logging"))
				(require-all (require-not (preference-domain "com.apple.act"))
(require-not (preference-domain "com.apple.WebKit")))
				(require-not (preference-domain "com.apple.mmcs"))
				(require-not (preference-domain "com.apple.mms_override"))
				(require-not (preference-domain "com.apple.WebUI"))
				(require-not (preference-domain "com.apple.coremedia"))
				(require-not (preference-domain "com.apple.CloudKit"))
				(require-not (preference-domain "com.apple.springboard"))
				(require-not (preference-domain "com.apple.ConfigServer"))
				(require-not (preference-domain "com.apple.coreaudio"))
				(require-not (preference-domain "com.apple.GEO"))
				(require-not (preference-domain "com.apple.CFNetwork"))
				(require-not (preference-domain "com.apple.WebFoundation"))
				(require-not (preference-domain "com.apple.assistant.backedup"))
				(require-not (preference-domain "com.apple.mediaaccessibility"))
				(require-not (preference-domain "com.apple.avkit"))
				(require-not (preference-domain "com.apple.mobileipod"))
				(require-not (preference-domain "com.apple.camera"))
				(require-not (preference-domain "kCFPreferencesAnyApplication"))
				(require-not (preference-domain "com.apple.DataDeliveryServices"))
				(require-not (preference-domain "com.apple.icloud.findmydeviced.postwipe"))
				(require-not (preference-domain "com.apple.mediaremote"))
				(require-not (preference-domain "com.apple.telephonyutilities.dialassist"))
				(require-not (preference-domain "com.apple.InputModePreferences"))
				(require-not (preference-domain "com.apple.itunesstored"))
				(require-not (preference-domain "com.apple.SpeakSelection"))
				(require-not (preference-domain "com.apple.keyboard"))
				(require-not (preference-domain "com.apple.youtubeframework"))
				(require-not (preference-domain "com.apple.avfoundation"))
				(require-not (preference-domain "com.apple.spotlightui"))
				(require-not (preference-domain "com.apple.Maps"))
				(require-not (preference-domain "com.apple.mobileslideshow"))
				(require-not (preference-domain "com.apple.indigo"))
				(require-not (preference-domain "com.apple.proactive.PersonalizationPortrait"))
				(require-not (preference-domain "com.apple.opengl"))
				(require-not (preference-domain "com.apple.Accessibility"))
				(require-not (preference-domain "com.apple.accountsd"))
				(require-all (require-not (preference-domain "com.apple.nanocamera"))
(require-not (preference-domain "com.apple.cloud.quota"))
(require-not (preference-domain "com.apple.legacycamera"))
(require-not (preference-domain "com.apple.videouploadplugins"))
(require-not (preference-domain "com.apple.youtubeframework.notbackedup")))
				(require-not (preference-domain "com.apple.Wallet.public"))
				(require-not (preference-domain "com.apple.carrier"))
				(require-not (preference-domain "com.apple.PencilKit"))
				(require-not (preference-domain "com.apple.voiceservices"))
				(require-not (preference-domain "com.apple.iclouddrive.features"))
				(require-not (preference-domain "com.apple.suggestions"))
				(require-not (preference-domain "com.apple.AOSNotification.public.notbackedup"))
				(require-not (preference-domain "com.apple.medialibrary"))
				(require-not (preference-domain "com.apple.imessage.bag"))
				(require-not (preference-domain "com.apple.PeoplePicker"))
				(require-not (preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
				(require-not (preference-domain "com.apple.mobilecal"))
				(require-not (preference-domain "com.apple.ids"))
				(require-not (preference-domain "com.apple.iapd"))
				(require-not (preference-domain "com.apple.coreanimation"))
				(require-not (preference-domain "com.apple.mt"))
				(require-not (preference-domain "com.apple.keyboard.preferences"))
				(require-not (preference-domain "com.apple.assistant"))
				(require-not (preference-domain "com.apple.purplebuddy"))
				(require-not (preference-domain "com.apple.videos"))
				(require-not (preference-domain "com.apple.homesharing"))
				(require-not (preference-domain "com.apple.preferences.sounds"))
				(require-not (preference-domain "com.apple.GMM"))
				(require-not (preference-domain "com.apple.conference"))
				(require-not (preference-domain "com.apple.TTY"))
				(require-not (preference-domain "com.apple.compass"))
				(require-not (preference-domain "com.apple.mediaanalysis"))
				(require-not (preference-domain "com.apple.airplay"))
				(require-not (preference-domain "com.apple.GameController"))
				(require-not (preference-domain "com.apple.MobileAsset"))
				(require-not (preference-domain "com.apple.marco"))
				(require-not (preference-domain "com.apple.ImageCaptureFramework"))
				(require-not (preference-domain "com.apple.DataAccess.BehaviorOptions"))
				(require-not (preference-domain "com.apple.Preferences"))
				(require-not (preference-domain "com.apple.corevideo"))
				(require-not (preference-domain "com.apple.lookup.shared"))
				(preference-domain "com.apple.groupactivities")
				(entitlement-is-bool-true com.apple.developer.group-session)))))
(deny user-preference-write
	(signing-identifier "com.apple.mobileslideshow")
	(require-any (signing-identifier "com.apple.Capture")
(signing-identifier "com.apple.camera.lockscreen")
(signing-identifier "com.apple.photos.Memoryscape"))
	(require-not (signing-identifier "com.apple.camera"))
	(require-all
		(require-not (preference-domain "com.apple.appleaccount"))
		(require-all (require-not (preference-domain "com.apple.nanocamera"))
(require-not (preference-domain "com.apple.cloud.quota"))
(require-not (preference-domain "com.apple.legacycamera"))
(require-not (preference-domain "com.apple.videouploadplugins"))
(require-not (preference-domain "com.apple.youtubeframework.notbackedup")))
		(require-not (preference-domain "com.apple.camera"))
		(require-not (preference-domain "kCFPreferencesAnyApplication"))
		(require-not (preference-domain "com.apple.youtubeframework"))
		(require-not (preference-domain "com.apple.Preferences"))
		(require-not (preference-domain "com.apple.keyboard.preferences"))
		(require-not (preference-domain "com.apple.mobileslideshow"))
		(preference-domain "com.apple.WebFoundation")))
(deny storage-class-map)
