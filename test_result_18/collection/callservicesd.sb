(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-all (require-not (subpath-prefix "${HOME}/Media/iTunes_Control/Ringtones"))
(require-not (subpath-prefix "${HOME}/Library/CallServices/Ringtones")))
		(require-not (subpath-prefix "${HOME}/Media/Purchases"))
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
		(require-not (subpath "/Library/Ringtones"))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
		(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
		(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
		(require-any
			(require-all
				(require-all (require-not (subpath-prefix "${HOME}/Library/CallServices/Greetings"))
(require-not (subpath-prefix "${HOME}/Library/CallServices/Recordings")))
				(require-all (require-not (subpath "/private/var/tmp/com.apple.TelephonyUtilities"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities")))
				(require-any
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-not (subpath-prefix "${HOME}/Media/Purchases"))
						(require-any
							(require-not (subpath "/Library/Ringtones"))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-not (subpath-prefix "${HOME}/Media/Purchases"))
						(require-any
							(require-not (subpath "/Library/Ringtones"))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-not (subpath-prefix "${HOME}/Media/Purchases"))
						(require-any
							(require-not (subpath "/Library/Ringtones"))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
								(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
			(require-all
				(subpath-prefix "${HOME}/Media")
				(require-any
					(require-all
						(require-all (require-not (subpath "/private/var/tmp/com.apple.TelephonyUtilities"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities")))
						(require-any
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-not (subpath-prefix "${HOME}/Media/Purchases"))
								(require-any
									(require-not (subpath "/Library/Ringtones"))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${HOME}")
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-not (subpath-prefix "${HOME}/Media/Purchases"))
								(require-any
									(require-not (subpath "/Library/Ringtones"))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${HOME}")
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (subpath-prefix "${HOME}/Media/Purchases"))
								(require-any
									(require-not (subpath "/Library/Ringtones"))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${HOME}")
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
										(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
					(require-all
						(extension com.apple.avasset.read-only)
						(require-not (extension com.apple.tcc.kTCCServicePhotos)))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-all (require-not (subpath-prefix "${HOME}/Library/CallServices/Greetings"))
(require-not (subpath-prefix "${HOME}/Library/CallServices/Recordings")))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.TelephonyUtilities"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities")))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-all (require-not (subpath-prefix "${HOME}/Library/CallServices/Greetings"))
(require-not (subpath-prefix "${HOME}/Library/CallServices/Recordings")))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.TelephonyUtilities"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities")))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-all (require-not (subpath-prefix "${HOME}/Library/CallServices/Greetings"))
(require-not (subpath-prefix "${HOME}/Library/CallServices/Recordings")))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.TelephonyUtilities"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities")))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-all (require-not (subpath-prefix "${HOME}/Library/CallServices/Greetings"))
(require-not (subpath-prefix "${HOME}/Library/CallServices/Recordings")))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.TelephonyUtilities"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities")))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (subpath-prefix "${HOME}/Media/Purchases"))
				(require-any
					(require-not (subpath "/Library/Ringtones"))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(require-not (extension com.apple.sandbox.executable)))
	(require-all
		(extension-class "com.apple.identityservices.send")
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}")))
	(require-all
		(extension com.apple.sandbox.application-group)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
				(extension-class "com.apple.quicklook.readonly")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.sharing.airdrop.readonly")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension-class "com.apple.wcd.readonly")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.spotlight-indexable")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(extension-class "com.apple.quicklook.readonly")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.sharing.airdrop.readonly")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension-class "com.apple.wcd.readonly")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.spotlight-indexable")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))))
(deny file-link
	(process-attribute is-apple-signed-executable)
	(subpath-prefix "${HOME}/Media")
	(require-all (require-not (subpath "/private/var/tmp/com.apple.TelephonyUtilities"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities"))))
(deny file-read*
	(require-all
		(require-not (literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist"))
		(require-all (require-not (subpath "/AppleInternal/Applications"))
(require-not (subpath "/System/Developer/Applications"))
(require-not (subpath "/private/var/personalized_debug/Applications"))
(require-not (subpath "/private/var/personalized_automation/Applications"))
(require-not (regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?"))
(require-not (regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?")))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.TelephonyUtilities"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities")))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Ringtones"))
(require-not (subpath-prefix "${HOME}/Library/IdentityServices/files")))
		(require-not (subpath "/private/var/containers/Bundle"))
		(require-not (subpath "/Developer/Applications"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle"))
		(require-not (subpath-prefix "${HOME}/Library/CallHistoryDB"))
		(require-not (subpath "/private/var/wireless/Library/Images"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Voicemail"))
(require-not (subpath-prefix "${HOME}/Library/CallDirectory"))
(require-not (subpath-prefix "${HOME}/Library/CallServices"))
(require-not (literal-prefix "${HOME}/Library/SMS/com.apple.messages.abcache.callservicesd.plist")))
		(require-not (literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
		(require-not (subpath-prefix "${HOME}/Media/Purchases"))
		(require-not (subpath "/Applications"))
		(require-not (subpath "/Library/Ringtones"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${HOME}")
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$"))
						(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$"))
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))))
			(require-all
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
				(require-all (require-not (literal-prefix "${HOME}/Media/PhotoData"))
(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))
(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-wal"))
(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-journal")))
				(require-all (require-not (literal-prefix "${HOME}/Library/com.apple.itunesstored"))
(require-not (literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb"))
(require-not (literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-wal"))
(require-not (literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-shm"))
(require-not (literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-journal")))
				(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
				(require-any
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
						(require-not (regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
						(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
					(require-all
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
						(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-shm"))
						(require-any
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
								(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
							(require-all
								(subpath-prefix "${HOME}/Media")
								(require-any
									(literal "/usr/sbin/fairplayd")
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData"))
										(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Metadata")))
										(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
										(require-not (subpath-prefix "${HOME}/Media/DCIM"))
										(require-not (literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist"))
										(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Sync"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Mutations")))
										(require-not (extension com.apple.avasset.read-only))
										(process-attribute is-platform-binary)
										(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")))
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
									(require-all
										(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
										(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist"))
										(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
										(require-not (literal "/private/var/preferences/com.apple.security.plist"))
										(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
										(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
										(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
										(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
										(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
										(require-any
											(require-all
												(entitlement-is-present com.apple.private.networkextension.configuration)
												(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
												(require-not (extension com.apple.identityservices.deliver)))
											(require-all
												(extension com.apple.assets.read)
												(require-not (subpath "/private/var/MobileAsset"))
												(require-not (subpath-prefix "${HOME}/Library/Assets")))
											(require-all
												(extension com.apple.sandbox.application-group)
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
														(subpath-prefix "${FRONT_USER_HOME}"))))
											(require-all
												(entitlement-is-bool-true com.apple.Contacts.database-allow)
												(extension com.apple.tcc.kTCCServiceAddressBook)
												(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
												(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
												(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
											(require-all
												(extension com.apple.sandbox.application-group)
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
												(literal "/private/var/")
												(require-any
													(extension com.apple.app-sandbox.read)
													(extension com.apple.app-sandbox.read-write)
													(extension com.apple.security.exception.files.absolute-path.read-only)
													(extension com.apple.security.exception.files.absolute-path.read-write)
													(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
													(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))))
							(require-all
								(require-not (literal-prefix "${HOME}/Library/Caches/Checkpoint.plist"))
								(require-any
									(literal "/usr/sbin/fairplayd")
									(subpath-prefix "${HOME}/Library/FairPlay")
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
									(require-all
										(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
										(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist"))
										(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
										(require-not (literal "/private/var/preferences/com.apple.security.plist"))
										(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
										(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
										(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
										(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
										(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
										(require-any
											(require-all
												(entitlement-is-present com.apple.private.networkextension.configuration)
												(require-not (literal "/private/var/preferences/com.apple.networkextension.plist")))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
												(require-not (extension com.apple.identityservices.deliver)))
											(require-all
												(extension com.apple.assets.read)
												(require-not (subpath "/private/var/MobileAsset"))
												(require-not (subpath-prefix "${HOME}/Library/Assets")))
											(require-all
												(extension com.apple.sandbox.application-group)
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
														(subpath-prefix "${FRONT_USER_HOME}"))))
											(require-all
												(entitlement-is-bool-true com.apple.Contacts.database-allow)
												(extension com.apple.tcc.kTCCServiceAddressBook)
												(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
												(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
												(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
											(require-all
												(extension com.apple.sandbox.application-group)
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
												(literal "/private/var/")
												(require-any
													(extension com.apple.app-sandbox.read)
													(extension com.apple.app-sandbox.read-write)
													(extension com.apple.security.exception.files.absolute-path.read-only)
													(extension com.apple.security.exception.files.absolute-path.read-write)
													(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
													(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))))))))))
(deny file-read-metadata
	(literal "/usr/sbin/fairplayd")
	(require-all
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/CallServices/Greetings"))
(require-not (subpath-prefix "${HOME}/Library/CallServices/Recordings")))
		(require-not (literal-prefix "${HOME}"))
		(require-any
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-all (require-not (subpath "/private/var/tmp/com.apple.TelephonyUtilities"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities")))
				(require-not (literal-prefix "${HOME}/Library/Preferences"))
				(require-any
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
						(require-any
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
								(require-not (subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
								(require-any (subpath "/private/var/tmp/com.apple.TelephonyUtilities")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities"))
								(require-any (subpath-prefix "${HOME}/Library/Ringtones")
(subpath-prefix "${HOME}/Library/IdentityServices/files"))
								(subpath "/private/var/containers/Bundle")
								(subpath "/Developer/Applications")
								(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
								(subpath-prefix "${HOME}/Library/CallHistoryDB")
								(subpath "/private/var/wireless/Library/Images")
								(require-any (subpath-prefix "${HOME}/Library/Voicemail")
(subpath-prefix "${HOME}/Library/CallDirectory")
(subpath-prefix "${HOME}/Library/CallServices")
(literal-prefix "${HOME}/Library/SMS/com.apple.messages.abcache.callservicesd.plist"))
								(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist")
								(subpath-prefix "${HOME}/Media/Purchases")
								(subpath "/Applications")
								(subpath "/Library/Ringtones")
								(require-any
									(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$"))))
									(require-all
										(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
										(require-any (literal-prefix "${HOME}/Media/PhotoData")
(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")
(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-wal")
(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-journal"))
										(require-any (literal-prefix "${HOME}/Library/com.apple.itunesstored")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-wal")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-shm")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-journal"))
										(subpath "/private/var/containers/Data/System/com.apple.geod")
										(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
										(require-any
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
												(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-shm")
												(require-any
													(require-all
														(literal "/System/Library/Carrier Bundles/")
														(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
														(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
													(require-all
														(subpath-prefix "${HOME}/Media")
														(require-any
															(require-all
																(extension com.apple.tcc.kTCCServicePhotos)
																(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
																(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
																(subpath-prefix "${HOME}/Media/PhotoStreamsData")
																(subpath-prefix "${HOME}/Media/DCIM")
																(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
																(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
																(extension com.apple.avasset.read-only)
																(process-attribute is-platform-binary)
																(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))
															(require-all
																(process-attribute is-apple-signed-executable)
																(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))))
													(require-all
														(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
														(require-any
															(subpath-prefix "${HOME}/Library/FairPlay")
															(require-all
																(process-attribute is-apple-signed-executable)
																(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))))))))))))
					(require-all
						(literal-prefix "${HOME}")
						(extension com.apple.tcc.kTCCServicePhotos))))))
	(require-all
		(literal "/private/var/preferences/com.apple.networkd.plist")
		(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
		(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
		(literal "/private/var/preferences/com.apple.security.plist")
		(literal "/private/var/db/com.apple.networkextension.tracker-info")
		(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
		(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
		(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
		(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
		(require-any
			(require-all
				(entitlement-is-present com.apple.private.networkextension.configuration)
				(literal "/private/var/preferences/com.apple.networkextension.plist"))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
				(extension com.apple.identityservices.deliver))
			(require-all
				(extension com.apple.assets.read)
				(subpath "/private/var/MobileAsset")
				(subpath-prefix "${HOME}/Library/Assets"))
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(entitlement-is-bool-true com.apple.Contacts.database-allow)
				(extension com.apple.tcc.kTCCServiceAddressBook)
				(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
				(subpath-prefix "${HOME}/Library/AddressBook")
				(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
			(require-all
				(extension com.apple.sandbox.application-group)
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
				(literal "/private/var/")
				(require-any
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
					(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
					(require-all
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))
(deny file-write*
	(require-all
		(require-all (require-not (subpath "/private/var/tmp/com.apple.TelephonyUtilities"))
(require-not (subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities")))
		(require-not (subpath-prefix "${HOME}/Library/CallHistoryDB"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/Voicemail"))
(require-not (subpath-prefix "${HOME}/Library/CallDirectory"))
(require-not (subpath-prefix "${HOME}/Library/CallServices"))
(require-not (literal-prefix "${HOME}/Library/SMS/com.apple.messages.abcache.callservicesd.plist")))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(entitlement-is-bool-true com.apple.Contacts.database-allow)
				(extension com.apple.tcc.kTCCServiceAddressBook)
				(require-any
					(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-not (literal-prefix "${HOME}/Library/AddressBook/"))))))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(vnode-type DIRECTORY)
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}")))
	(require-all
		(literal "/private/var/")
		(extension com.apple.sandbox.application-group)
		(require-any
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Preferences$"))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Preferences$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$")))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}")))
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
		(require-not (extension com.apple.identityservices.deliver)))
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(iokit-user-client-class "IOSurfaceRootUserClient"))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-not (global-name "com.apple.vibrationmanagerd"))
		(require-not (global-name "com.apple.dmd.emergency-mode"))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.mediaserverd"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.coreservices.lsbestappsuggestionmanager.xpc"))
		(require-not (global-name "com.apple.mobileasset.autoasset"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.audio.AudioConverterService"))
		(require-not (global-name "com.apple.mobileassetd"))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.lsd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.nanoprefsync"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.audio.AudioQueueServer"))
		(require-not (global-name "com.apple.mediaremoted.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
		(require-not (global-name "com.apple.FileCoordination"))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (global-name "com.apple.CARenderServer"))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
		(require-not (global-name "com.apple.SharingServices"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.audio.AudioComponentRegistrar"))
		(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
		(require-all (require-not (global-name "com.apple.RemoteDisplay"))
(require-not (global-name "com.apple.incoming-call-filter-server"))
(require-not (global-name "com.apple.voicetrigger.voicetriggerservice"))
(require-not (global-name "com.apple.coremedia.captureassertionservice"))
(require-not (global-name "com.apple.bulletinboard.serverconduitconnection")))
		(require-not (global-name "com.apple.mobileassetd.v2"))
		(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.apsd"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-not (global-name "com.apple.siri.external_request"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.imavagent.embedded.auth"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.assetsd.changehub"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.mobile.usermanagerd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-not (global-name "com.apple.marco"))
		(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.AttentionAwareness"))
		(require-not (global-name "com.apple.springboard.services"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.mobileactivationd"))
		(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
		(require-not (global-name "com.apple.photos.service"))
		(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.itunesstored.xpc"))
		(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
		(require-not (global-name "com.apple.backboard.hid.services"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.coremedia.videocompositor"))
		(require-not (global-name "com.apple.awdd"))
		(require-not (global-name "com.apple.CallHistorySyncHelper"))
		(require-not (global-name "com.apple.suggestd.contacts"))
		(require-not (global-name "com.apple.donotdisturb.service"))
		(require-not (global-name "com.apple.carkit.dnd.service"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.synapse.backlink-service"))
		(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
		(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
		(require-not (global-name "com.apple.assertiond.applicationstateconnection"))
		(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
		(require-not (global-name "com.apple.audio.AURemoteIOServer"))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.iohideventsystem"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.pegasus"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
		(require-not (global-name "com.apple.identityservicesd.embedded.auth"))
		(require-not (global-name "com.apple.privacyaccountingd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
		(require-not (global-name "com.apple.systemstatus.activityattribution"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.imagent.embedded.auth"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.coremedia.sandboxserver"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.timesync.ptp.manager"))
		(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
		(require-not (global-name "com.apple.videoconference.camera"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.coremedia.player.xpc"))
		(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
		(require-not (global-name "com.apple.corespeech.voicetriggerservice"))
		(require-not (global-name "com.apple.backboard.hid-services.xpc"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(require-not (global-name "com.apple.idsremoteurlconnectionagent.embedded.auth"))
		(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
		(require-not (global-name "com.apple.ProgressReporting"))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (global-name "com.apple.audio.SystemSoundServer-iOS"))
		(require-not (global-name "com.apple.usernotifications.listener"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
		(require-not (global-name "com.apple.voicemail.vmd"))
		(require-not (global-name "com.apple.coremedia.sts"))
		(require-not (global-name "com.apple.itunescloudd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
		(require-not (global-name "com.apple.frontboard.systemappservices"))
		(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
		(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
		(require-not (xpc-service-name "com.apple.audio.analytics.service"))
		(require-not (xpc-service-name "com.apple.tonelibraryd"))
		(require-not (extension com.apple.sandbox.application-group))
		(require-not (extension com.apple.security.exception.mach-lookup.global-name))
		(require-not (extension com.apple.security.exception.mach-lookup.local-name))
		(global-name "com.apple.contactsd")
		(global-name "com.apple.spotlight.IndexDelegateAgent")
		(global-name "com.apple.spotlight.IndexAgent")
		(global-name "com.apple.ABDatabaseDoctor")
		(global-name "com.apple.identityservicesd.idquery.embedded.auth")
		(global-name "com.apple.cmfsyncagent.embedded.auth")
		(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
		(global-name "com.apple.lsd.openurl")
		(global-name "com.apple.tccd")
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny syscall-unix
	(c1 3c07 6c97 9ce0))
(deny syscall-mach
	(cb 3c11 6c95 9ce0))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.MobileSMS"))
		(require-not (preference-domain "com.apple.assistant.support"))
		(require-not (preference-domain "com.apple.AppSupport"))
		(require-not (preference-domain "com.apple.nanoprefsyncd"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.messages"))
		(require-not (preference-domain "com.apple.coremedia"))
		(require-not (preference-domain "com.apple.avfaudio"))
		(require-not (preference-domain "com.apple.VideoConference"))
		(require-not (preference-domain "com.apple.messages.nicknames"))
		(require-not (preference-domain "com.apple.springboard"))
		(require-not (preference-domain "com.apple.coreaudio"))
		(require-not (preference-domain "com.apple.GEO"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.assistant.backedup"))
		(require-not (preference-domain "com.apple.mobileipod"))
		(require-not (preference-domain "com.apple.facetime"))
		(require-not (preference-domain "com.apple.telephonyutilities.dialassist"))
		(require-not (preference-domain "com.apple.SpeakSelection"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.mobilephone"))
		(require-not (preference-domain "com.apple.avfoundation"))
		(require-not (preference-domain "com.apple.GameKitServices"))
		(require-not (preference-domain "com.apple.voicetrigger"))
		(require-not (preference-domain "com.apple.Sharing"))
		(require-not (preference-domain "com.apple.mobileslideshow"))
		(require-not (preference-domain "com.apple.audio.virtualaudio"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.iclouddrive.features"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.imessage.bag"))
		(require-all (require-not (preference-domain "com.apple.InCallService"))
(require-not (preference-domain "com.apple.ScreenTimeAgent.conversation"))
(require-not (preference-domain "com.apple.telephonyutilities.callservicesd")))
		(require-not (preference-domain "com.apple.ids"))
		(require-not (preference-domain "com.apple.coreanimation"))
		(require-not (preference-domain "com.apple.marco"))
		(require-not (preference-domain "com.apple.ids.debug"))
		(require-not (preference-domain "com.apple.assistant"))
		(require-not (preference-domain "com.apple.facetime.bag"))
		(require-not (preference-domain "com.apple.conference"))
		(require-not (preference-domain "com.apple.TTY"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.MobileAsset"))
		(require-not (preference-domain "com.apple.TelephonyUtilities"))
		(require-not (preference-domain "com.apple.CoreDuet"))
		(require-not (preference-domain "com.apple.DataMigration"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.postwipe"))
		(require-not (preference-domain "com.apple.AOSNotification.public.notbackedup"))
		(require-not (preference-domain "com.apple.PeoplePicker"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
		(preference-domain "com.apple.corevideo")
		(process-attribute is-apple-signed-executable)
		(entitlement-is-bool-true com.apple.itunesstored.private)
		(preference-domain "com.apple.itunesstored")))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.telephonyutilities.dialassist"))
		(require-not (preference-domain "com.apple.mobilephone"))
		(require-not (preference-domain "com.apple.voicetrigger"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.imessage.bag"))
		(require-all (require-not (preference-domain "com.apple.InCallService"))
(require-not (preference-domain "com.apple.ScreenTimeAgent.conversation"))
(require-not (preference-domain "com.apple.telephonyutilities.callservicesd")))
		(require-not (preference-domain "com.apple.TelephonyUtilities"))
		(preference-domain "com.apple.facetime.bag")))
(deny storage-class-map)
