(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-not (extension com.apple.sandbox.executable)))
	(require-all
		(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.parsecd")
		(require-not (extension-class "com.apple.app-sandbox.read-write"))
		(require-not (extension-class "com.apple.app-sandbox.read"))
		(require-not (extension-class "com.apple.mediaserverd.read-write"))
		(require-not (extension-class "com.apple.aned.read-only"))
		(require-not (extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension com.apple.sandbox.application-group)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
				(extension-class "com.apple.quicklook.readonly")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.sharing.airdrop.readonly")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension-class "com.apple.wcd.readonly")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.spotlight-indexable")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(extension-class "com.apple.quicklook.readonly")
				(extension-class "com.apple.app-sandbox.read-write")
				(extension-class "com.apple.app-sandbox.read")
				(extension-class "com.apple.sharing.airdrop.readonly")
				(extension-class "com.apple.mediaserverd.read-write")
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension-class "com.apple.wcd.readonly")
				(extension-class "com.apple.aned.read-only")
				(extension-class "com.apple.spotlight-indexable")
				(extension-class "com.apple.mediaserverd.read"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd"))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))
					(require-all
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd"))
						(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger")
						(extension-class "com.apple.app-sandbox.read-write")
						(extension-class "com.apple.app-sandbox.read")
						(extension-class "com.apple.mediaserverd.read-write")
						(extension-class "com.apple.aned.read-only")
						(extension-class "com.apple.mediaserverd.read"))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))
					(require-all
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd"))
						(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger")
						(extension-class "com.apple.app-sandbox.read-write")
						(extension-class "com.apple.app-sandbox.read")
						(extension-class "com.apple.mediaserverd.read-write")
						(extension-class "com.apple.aned.read-only")
						(extension-class "com.apple.mediaserverd.read"))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd"))
		(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger")
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd"))
		(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger")
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd"))
		(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger")
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd"))
		(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger")
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd"))
		(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger")
		(extension-class "com.apple.app-sandbox.read-write")
		(extension-class "com.apple.app-sandbox.read")
		(extension-class "com.apple.mediaserverd.read-write")
		(extension-class "com.apple.aned.read-only")
		(extension-class "com.apple.mediaserverd.read")))
(deny file-read*
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-not (subpath-prefix "${HOME}/Library/DifferentialPrivacy/Reports"))
		(require-not (subpath-prefix "${HOME}/Library/CoreDuet"))
		(require-all (require-not (literal-prefix "${HOME}/Library/com.apple.itunesstored"))
(require-not (literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb"))
(require-not (literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-wal"))
(require-not (literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-shm"))
(require-not (literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-journal")))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
		(require-not (literal "/private/var/preferences/com.apple.security.plist"))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-not (subpath "/private/var/tmp"))
		(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.parsecd"))
		(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.plist")
				(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
				(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
			(require-all
				(literal "/System/Library/Carrier Bundles/")
				(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
				(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
				(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
				(require-any
					(require-all
						(extension com.apple.assets.read)
						(require-not (subpath "/private/var/MobileAsset"))
						(require-not (subpath-prefix "${HOME}/Library/Assets")))
					(require-all
						(extension com.apple.sandbox.application-group)
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger")))
						(require-any
							(extension com.apple.sandbox.application-group)
							(require-all
								(vnode-type REGULAR-FILE)
								(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.feedbacklogger"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.parsecd"))))
							(require-all
								(vnode-type DIRECTORY)
								(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.feedbacklogger"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.parsecd"))))))))))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
		(literal "/private/var/")
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.security.exception.files.absolute-path.read-only)
			(extension com.apple.app-sandbox.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-write)
			(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
			(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))
(deny file-read-metadata
	(require-all
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Caches"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (literal-prefix "${HOME}/Library/Preferences"))
		(require-any
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.parsecd"))
				(require-any
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
						(literal "/private/var/")
						(require-any
							(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
								(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(literal "/private/var/preferences/com.apple.networkd.plist")
						(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
						(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
						(subpath-prefix "${HOME}/Library/DifferentialPrivacy/Reports")
						(subpath-prefix "${HOME}/Library/CoreDuet")
						(require-any (literal-prefix "${HOME}/Library/com.apple.itunesstored")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-wal")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-shm")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-journal"))
						(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
						(literal "/private/var/preferences/com.apple.security.plist")
						(literal "/private/var/db/com.apple.networkextension.tracker-info")
						(subpath "/private/var/tmp")
						(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
						(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
						(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
						(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
						(subpath-prefix "${PROCESS_TEMP_DIR}")
						(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.parsecd")
						(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
						(require-any
							(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.plist")
								(entitlement-is-present com.apple.private.networkextension.configuration))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$"))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
								(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
								(subpath "/private/var/containers/Data/System/com.apple.geod")
								(require-any
									(require-all
										(extension com.apple.assets.read)
										(subpath "/private/var/MobileAsset")
										(subpath-prefix "${HOME}/Library/Assets"))
									(require-all
										(extension com.apple.sandbox.application-group)
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger"))
										(require-any
											(extension com.apple.sandbox.application-group)
											(require-all
												(vnode-type REGULAR-FILE)
												(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.feedbacklogger")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.parsecd")))
											(require-all
												(vnode-type DIRECTORY)
												(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.feedbacklogger")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.parsecd")))))))))))))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
		(literal "/private/var/")
		(require-any
			(extension com.apple.app-sandbox.read)
			(extension com.apple.security.exception.files.absolute-path.read-only)
			(extension com.apple.app-sandbox.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-write)
			(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
			(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")))))
(deny file-write*
	(require-all
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.parsecd"))
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
						(require-any
							(subpath-prefix "${FRONT_USER_HOME}")
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
								(subpath-prefix "${FRONT_USER_HOME}"))))))
			(require-all
				(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger")))
				(require-any
					(require-all
						(vnode-type REGULAR-FILE)
						(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.feedbacklogger"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.parsecd"))))
					(require-all
						(vnode-type DIRECTORY)
						(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.feedbacklogger"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.parsecd")))))))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Caches")))
	(require-all
		(literal "/private/var/")
		(extension com.apple.sandbox.application-group)
		(require-any
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Preferences$"))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Preferences$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$"))))
	(require-all
		(subpath-prefix "${PROCESS_TEMP_DIR}")
		(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.parsecd")
		(require-any
			(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
						(require-any
							(subpath-prefix "${FRONT_USER_HOME}")
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
								(subpath-prefix "${FRONT_USER_HOME}"))))))
			(require-all
				(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.parsecd")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.feedbacklogger"))
				(require-any
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.feedbacklogger")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.parsecd")))
					(require-all
						(vnode-type DIRECTORY)
						(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.feedbacklogger")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.parsecd"))))))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(require-all
		(iokit-user-client-class "AppleKeyStoreUserClient")
		(extension com.apple.security.exception.iokit-user-client-class)
		(iokit-user-client-class "IOMobileFramebufferUserClient")))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-all (require-not (global-name "com.apple.dprivacyd"))
(require-not (global-name "com.apple.parsec-fbf"))
(require-not (global-name "com.apple.DataDetectorsSourceAccess")))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.mobileasset.autoasset"))
		(require-not (xpc-service-name "com.apple.MTLCompilerService"))
		(require-not (global-name "com.apple.mobileassetd"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.locationd.synchronous"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.networkserviceproxy"))
		(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.routined.registration"))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.mobileassetd.v2"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.locationd.registration"))
		(require-not (global-name "com.apple.siri.vocabularyupdates"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.itunesstored.xpc"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.managedconfiguration.profiled"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.spotlight.IndexAgent"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.VideoSubscriberAccount.videosubscriptionsd"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-not (global-name "com.apple.locationd.spi"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(extension com.apple.sandbox.application-group)
		(extension com.apple.security.exception.mach-lookup.global-name)
		(extension com.apple.security.exception.mach-lookup.local-name)
		(global-name "com.apple.lsd.openurl")
		(global-name "com.apple.tccd")
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny syscall-unix
	(c1 0f0e 2a87 9ce0))
(deny system-fcntl
	(ce 04d2 2a85 9ce0))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.locationd"))
		(require-not (preference-domain "com.apple.assistant.support"))
		(require-not (preference-domain "com.apple.AppSupport"))
		(require-not (preference-domain "com.apple.itunescloud"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.GEO"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.assistant.backedup"))
		(require-not (preference-domain "com.apple.itunesstored"))
		(require-not (preference-domain "com.apple.keyboard"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.voicetrigger"))
		(require-not (preference-domain "com.apple.parsecd"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.keyboard.preferences"))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.Preferences"))
		(require-not (preference-domain "com.apple.lookup.shared"))
		(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
		(preference-domain "com.apple.MobileAsset")))
(deny user-preference-write
	(preference-domain "com.apple.parsecd"))
(deny storage-class-map)
