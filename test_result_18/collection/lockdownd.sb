(version 1)
(allow default)
(deny file-read*
	(require-all
		(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
		(require-not (process-attribute is-apple-signed-executable))
		(require-any
			(require-all
				(vnode-type REGULAR-FILE)
				(require-not (literal "/private/var/run/lockdown_first_run")))
			(require-all
				(require-not (subpath "/Developer"))
				(require-all (require-not (subpath "/AppleInternal/Lockdown"))
(require-not (subpath "/private/var/log/asl"))
(require-not (literal "/private/var/db/launchd.db/com.apple.launchd/overrides.plist"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Caches/Checkpoint.plist")))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Media"))
				(require-all (require-not (subpath "/private/var/preferences/SystemConfiguration"))
(require-not (subpath "/private/var/root/Library/Lockdown"))
(require-not (subpath "/private/var/root/Library/Preferences"))
(require-not (subpath-prefix "${HOME}/Library/Lockdown"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Preferences"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-shm"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-wal"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-journal")))
				(require-not (subpath "/private/var/personalized_factory"))
				(require-all (require-not (subpath "/private/var/factory_mount"))
(require-not (subpath "/private/var/personalized_automation"))
(require-not (subpath "/private/var/personalized_demo"))
(require-not (subpath "/private/var/personalized_debug")))
				(require-not (subpath "/Applications/Preferences.app"))
				(require-not (subpath "/private/var/logs"))
				(require-not (subpath "/System/Developer"))
				(require-any
					(require-all
						(vnode-type DIRECTORY)
						(require-not (subpath-prefix "${FRONT_USER_HOME}/tmp/MediaCache"))
						(require-not (subpath "/private/var/tmp/MediaCache")))
					(require-all
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist"))
						(require-not (literal-prefix "${HOME}/Library/Caches/Checkpoint.plist"))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
						(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
						(require-any
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$"))
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
							(require-all
								(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Notes")
(subpath-prefix "${FRONT_USER_HOME}/Library/Voicemail"))
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(require-any (subpath-prefix "${FRONT_USER_HOME}/Containers")
(subpath-prefix "${FRONT_USER_HOME}/Library/Calendar")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.WebAppCache"))
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
								(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
								(require-any
									(extension com.apple.app-sandbox.read)
									(extension com.apple.app-sandbox.read-write)
									(extension com.apple.security.exception.files.absolute-path.read-only)
									(extension com.apple.security.exception.files.absolute-path.read-write)
									(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
									(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))))
							(require-all
								(require-any (subpath "/private/var/tmp/com.apple.mediaplaybackd/MediaCache")
(subpath-prefix "${FRONT_USER_HOME}/tmp/com.apple.mediaplaybackd/MediaCache"))
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(subpath "/private/var/containers")
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Media")
								(require-not (vnode-type DIRECTORY)))))))))
	(require-all
		(literal "/private/var/preferences/com.apple.networkextension.plist")
		(require-not (entitlement-is-present com.apple.private.networkextension.configuration))
		(require-any
			(require-all
				(vnode-type REGULAR-FILE)
				(require-not (literal "/private/var/run/lockdown_first_run")))
			(require-all
				(require-not (subpath "/Developer"))
				(require-all (require-not (subpath "/AppleInternal/Lockdown"))
(require-not (subpath "/private/var/log/asl"))
(require-not (literal "/private/var/db/launchd.db/com.apple.launchd/overrides.plist"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Caches/Checkpoint.plist")))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Media"))
				(require-all (require-not (subpath "/private/var/preferences/SystemConfiguration"))
(require-not (subpath "/private/var/root/Library/Lockdown"))
(require-not (subpath "/private/var/root/Library/Preferences"))
(require-not (subpath-prefix "${HOME}/Library/Lockdown"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Preferences"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-shm"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-wal"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-journal")))
				(require-not (subpath "/private/var/personalized_factory"))
				(require-all (require-not (subpath "/private/var/factory_mount"))
(require-not (subpath "/private/var/personalized_automation"))
(require-not (subpath "/private/var/personalized_demo"))
(require-not (subpath "/private/var/personalized_debug")))
				(require-not (subpath "/Applications/Preferences.app"))
				(require-not (subpath "/private/var/logs"))
				(require-not (subpath "/System/Developer"))
				(require-any
					(require-all
						(vnode-type DIRECTORY)
						(require-not (subpath-prefix "${FRONT_USER_HOME}/tmp/MediaCache"))
						(require-not (subpath "/private/var/tmp/MediaCache")))
					(require-all
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist"))
						(require-not (literal-prefix "${HOME}/Library/Caches/Checkpoint.plist"))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
						(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
						(require-any
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$"))
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
							(require-all
								(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Notes")
(subpath-prefix "${FRONT_USER_HOME}/Library/Voicemail"))
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(require-any (subpath-prefix "${FRONT_USER_HOME}/Containers")
(subpath-prefix "${FRONT_USER_HOME}/Library/Calendar")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.WebAppCache"))
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
								(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
								(require-any
									(extension com.apple.app-sandbox.read)
									(extension com.apple.app-sandbox.read-write)
									(extension com.apple.security.exception.files.absolute-path.read-only)
									(extension com.apple.security.exception.files.absolute-path.read-write)
									(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
									(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))))
							(require-all
								(require-any (subpath "/private/var/tmp/com.apple.mediaplaybackd/MediaCache")
(subpath-prefix "${FRONT_USER_HOME}/tmp/com.apple.mediaplaybackd/MediaCache"))
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(subpath "/private/var/containers")
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Media")
								(require-not (vnode-type DIRECTORY)))))))))
	(require-all
		(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
		(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
		(require-not (literal "/private/var/preferences/com.apple.security.plist"))
		(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
		(require-not (literal "/private/var/run/lockdown.sock"))
		(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
		(require-not (subpath "/private/var/run/lockdown"))
		(require-any
			(require-all
				(vnode-type REGULAR-FILE)
				(require-not (literal "/private/var/run/lockdown_first_run")))
			(require-all
				(require-not (subpath "/Developer"))
				(require-all (require-not (subpath "/AppleInternal/Lockdown"))
(require-not (subpath "/private/var/log/asl"))
(require-not (literal "/private/var/db/launchd.db/com.apple.launchd/overrides.plist"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Caches/Checkpoint.plist")))
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Media"))
				(require-all (require-not (subpath "/private/var/preferences/SystemConfiguration"))
(require-not (subpath "/private/var/root/Library/Lockdown"))
(require-not (subpath "/private/var/root/Library/Preferences"))
(require-not (subpath-prefix "${HOME}/Library/Lockdown"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Preferences"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-shm"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-wal"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-journal")))
				(require-not (subpath "/private/var/personalized_factory"))
				(require-all (require-not (subpath "/private/var/factory_mount"))
(require-not (subpath "/private/var/personalized_automation"))
(require-not (subpath "/private/var/personalized_demo"))
(require-not (subpath "/private/var/personalized_debug")))
				(require-not (subpath "/Applications/Preferences.app"))
				(require-not (subpath "/private/var/logs"))
				(require-not (subpath "/System/Developer"))
				(require-any
					(require-all
						(vnode-type DIRECTORY)
						(require-not (subpath-prefix "${FRONT_USER_HOME}/tmp/MediaCache"))
						(require-not (subpath "/private/var/tmp/MediaCache")))
					(require-all
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist"))
						(require-not (literal-prefix "${HOME}/Library/Caches/Checkpoint.plist"))
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
						(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
						(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist"))
						(require-any
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$"))
								(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
							(require-all
								(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Notes")
(subpath-prefix "${FRONT_USER_HOME}/Library/Voicemail"))
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(require-any (subpath-prefix "${FRONT_USER_HOME}/Containers")
(subpath-prefix "${FRONT_USER_HOME}/Library/Calendar")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.WebAppCache"))
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
								(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
								(require-any
									(extension com.apple.app-sandbox.read)
									(extension com.apple.app-sandbox.read-write)
									(extension com.apple.security.exception.files.absolute-path.read-only)
									(extension com.apple.security.exception.files.absolute-path.read-write)
									(require-any (subpath "/private/var/hardware/FactoryData")
(literal "/usr/standalone/firmware/apticket.der"))
									(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))))
							(require-all
								(require-any (subpath "/private/var/tmp/com.apple.mediaplaybackd/MediaCache")
(subpath-prefix "${FRONT_USER_HOME}/tmp/com.apple.mediaplaybackd/MediaCache"))
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(subpath "/private/var/containers")
								(require-not (vnode-type DIRECTORY)))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Media")
								(require-not (vnode-type DIRECTORY))))))))))
(deny file-write*
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (literal "/private/var/run/lockdown_first_run")))
	(require-all
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Media"))
		(require-all (require-not (subpath "/private/var/preferences/SystemConfiguration"))
(require-not (subpath "/private/var/root/Library/Lockdown"))
(require-not (subpath "/private/var/root/Library/Preferences"))
(require-not (subpath-prefix "${HOME}/Library/Lockdown"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Preferences"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-shm"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-wal"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-journal")))
		(require-not (literal "/private/var/run/lockdown.sock"))
		(require-not (subpath "/private/var/run/lockdown"))
		(subpath "/private/var/logs")))
(deny file-write-mode
	(require-not (literal "/private/var/db/timezone")))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "AppleCredentialManagerUserClient"))
		(require-all (require-not (iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient"))
(require-not (iokit-user-client-class "IODPDeviceUserClient"))
(require-not (iokit-user-client-class "IOAVDeviceUserClient"))
(require-not (iokit-user-client-class "IOThunderboltFamilyUserClient"))
(require-not (iokit-user-client-class "AppleNANDFTLUserClient"))
(require-not (iokit-user-client-class "AppleH10CamInUserClient"))
(require-not (iokit-user-client-class "AppleH13CamInUserClient"))
(require-not (iokit-user-client-class "AppleKMPEndpointUserClient"))
(require-not (iokit-user-client-class "AppleGasGaugeUpdateUserClient"))
(require-not (iokit-user-client-class "AppleAstrisGpioProbeUserClient"))
(require-not (iokit-user-client-class "AppleEffaceableStorageUserClient"))
(require-not (iokit-user-client-class "AppleSSMAUserClient"))
(require-not (iokit-user-client-class "AppleSSMAEndpointUserClient"))
(require-not (iokit-user-client-class "AppleSSMAServicesUserClient")))
		(require-not (iokit-user-client-class "AppleNVMeUpdateUC"))
		(require-not (iokit-user-client-class "AppleSMCClient"))
		(require-not (iokit-user-client-class "AppleBasebandUserClient"))
		(require-not (iokit-user-client-class "AppleSEPUserClient"))
		(require-not (iokit-user-client-class "AppleARMIICUserClient"))
		(require-not (iokit-user-client-class "AppleMobileApNonceUserClient"))
		(require-not (iokit-user-client-class "ASPUserClient"))
		(require-not (iokit-user-client-class "AppleHPMUserClient"))))
(deny iokit-set-properties
	(require-all
		(iokit-user-client-class "IOUSBDeviceController")
		(iokit-property "USBDeviceCommand")))
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-not (global-name "com.apple.fairplayd.versioned"))
		(require-not (global-name "com.apple.icloud.findmydeviced"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.mobile.installd"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-all (require-not (global-name "com.apple.lockdown."))
(require-not (global-name "com.apple.remoted"))
(require-not (global-name "com.apple.amfi.lockdown"))
(require-not (global-name "com.apple.mobile.lockbot"))
(require-not (global-name "com.apple.AOSNotification"))
(require-not (global-name "com.apple.nearbyd.xpc.diagnostics"))
(require-not (global-name "com.apple.CoreRepairCoreXPCService"))
(require-not (global-name "com.apple.ULLAConcierge.xpc.diagnostics"))
(require-not (global-name "com.apple.carkit.service.lockdown"))
(require-not (global-name "com.apple.commcenter.mobile-helper-cbupdateservice")))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (extension com.apple.security.exception.mach-lookup.local-name))
		(require-not (extension com.apple.security.exception.mach-lookup.global-name))
		(require-not (global-name "com.apple.timed.xpc"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.mobileactivationd"))
		(require-not (global-name "com.apple.mobile.storage_mounter.xpc"))
		(require-not (global-name "com.apple.photos.service"))
		(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.PairingManager"))
		(require-not (global-name "com.apple.nfcd.hwmanager"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-any
			(require-all
				(global-name "com.apple.internal.")
				(require-any
					(require-not (global-name "com.apple.internal.devicecompute.CoreDeviceProxy"))
					(require-all
						(require-any (global-name "com.apple.internal.monkeybars.cameraserver")
(global-name "com.apple.internal.monkeybars.screenserver"))
						(require-not (debug-mode)))))
			(require-all
				(require-all (require-not (global-name "com.apple.hsdeviceservices"))
(require-not (global-name "com.apple.fsdhelper"))
(require-not (global-name "com.apple.fireworkservices"))
(require-not (global-name "com.apple.factorysupportd"))
(require-not (global-name "com.apple.factory.FDICommd"))
(require-not (global-name "com.apple.factorydemod"))
(require-not (global-name "com.apple.factorydemodhelper")))
				(require-any
					(require-all
						(require-any (global-name "com.apple.xdcd")
(global-name "com.apple.pgtrace")
(global-name "com.apple.fdrhelper")
(global-name "com.apple.Ancd.mobile")
(global-name "com.apple.lsd.diagnostics")
(global-name "com.apple.monkeybars")
(global-name "com.apple.mapinspectord"))
						(require-not (debug-mode)))
					(require-all
						(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
						(require-not (global-name "com.apple.misagent"))
						(require-all (require-not (global-name "com.apple.fusiond"))
(require-not (global-name "com.apple.os_trace_relay"))
(require-not (global-name "com.apple.pcapd"))
(require-not (global-name "com.apple.preboardservice"))
(require-not (global-name "com.apple.preboardservice_v2"))
(require-not (global-name "com.apple.PurpleReverseProxy.Ctrl"))
(require-not (global-name "com.apple.PurpleReverseProxy.Conn"))
(require-not (global-name "com.apple.idamd"))
(require-not (global-name "com.apple.instruments.deviceservice.lockdown"))
(require-not (global-name "com.apple.instruments.deviceservice.lockdown.secure"))
(require-not (global-name "com.apple.syslog_relay"))
(require-not (global-name "com.apple.security.tribeca"))
(require-not (global-name "com.apple.streaming_zip_conduit"))
(require-not (global-name "com.apple.bbproxy"))
(require-not (global-name "com.apple.bluetooth.BTPacketLogger"))
(require-not (global-name "com.apple.backgroundassets.lockdownservice"))
(require-not (global-name "com.apple.remotepairingdevice.tunnelmanagement"))
(require-not (global-name "com.apple.remotepairingdevice.pairingmanagement"))
(require-not (global-name "com.apple.crash_mover"))
(require-not (global-name "com.apple.crashreportcopymobile"))
(require-not (global-name "com.apple.companion_proxy"))
(require-not (global-name "com.apple.coreautomation.coreautomationd.root"))
(require-not (global-name "com.apple.coreautomation.coreautomationd.mobile"))
(require-not (global-name "com.apple.testmanagerd.lockdown"))
(require-not (global-name "com.apple.testmanagerd.lockdown.secure"))
(require-not (global-name "com.apple.testmanagerd.remote-automation.lockdown"))
(require-not (global-name "com.apple.testmanagerd.remote-automation.lockdown.secure"))
(require-not (global-name "com.apple.mobileactivationd.lockdown"))
(require-not (global-name "com.apple.mobile.MCInstall"))
(require-not (global-name "com.apple.mobile.file_relay"))
(require-not (global-name "com.apple.mobile.house_arrest"))
(require-not (global-name "com.apple.mobile.assertion_agent"))
(require-not (global-name "com.apple.mobile.notification_proxy"))
(require-not (global-name "com.apple.mobile.storage_mounter_proxy"))
(require-not (global-name "com.apple.mobile.installation_proxy"))
(require-not (global-name "com.apple.mobile.insecure_notification_proxy"))
(require-not (global-name "com.apple.atc2"))
(require-not (global-name "com.apple.afcd"))
(require-not (global-name "com.apple.accessibility.axAuditDaemon.deviceservice.lockdown"))
(require-not (global-name "com.apple.dt.devicearbitration"))
(require-not (global-name "com.apple.dt.remotepairingdeviced.lockdown")))
						(require-not (global-name "com.apple.mobile.heartbeat"))
						(require-not (global-name "com.apple.atc"))
						(require-not (global-name "com.apple.security.cryptexd"))
						(require-not (global-name "com.apple.OTATaskingAgent"))
						(require-not (global-name "com.apple.managedconfiguration.profiled"))
						(require-not (global-name "com.apple.iokit.powerdxpc"))
						(require-not (global-name "com.apple.PowerManagement.control"))
						(require-not (global-name "com.apple.coreduetd.knowledge"))
						(require-not (global-name "com.apple.webinspector"))
						(require-not (global-name "com.apple.accessibility.AXBackBoardServer"))
						(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
						(require-any
							(xpc-service-name-regex #".+")
							(require-all
								(global-name "com.apple.system.notification_center")
								(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
							(require-all
								(global-name "com.apple.lsd.openurl")
								(global-name "com.apple.tccd")
								(global-name "com.apple.lsd.advertisingidentifiers")))))))))
(deny network*
	(require-all
		(require-not (literal "/private/var/run/lockdown.sock"))
		(subpath "/private/var/run/lockdown")))
(deny network-inbound
	(require-not (local tcp "*:*")))
(deny network-outbound
	(require-all
		(require-not (control-name "com.apple.netsrc"))
		(require-not (control-name "com.apple.flow-divert"))
		(require-not (control-name "com.apple.network.statistics"))
		(require-not (literal "/private/var/run/mDNSResponder"))
		(require-not (literal "/private/var/run/lockbot"))))
(deny nvram-set
	(nvram-variable "auto-boot"))
(deny sysctl-read
	(require-all
		(require-not (sysctl-name "net.statistics"))
		(require-not (sysctl-name "kern.wakereason"))
		(require-not (sysctl-name "net.routetable."))
		(require-all (require-not (sysctl-name "kern.nisdomainname"))
(require-not (sysctl-name "kern.ipc.maxsockbuf")))
		(sysctl-name "kern.bootsessionuuid")))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.icloud.findmydeviced.postwipe"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.notbackedup"))
		(require-not (preference-domain "com.apple.purplebuddy"))
		(require-not (preference-domain "com.apple.mobile.ldpair"))
		(preference-domain "com.apple.carrier")))
(deny storage-class-map)
