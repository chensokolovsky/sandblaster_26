(version 1)
(allow default)
(deny file-issue-extension
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.homed"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-not (extension com.apple.app-sandbox.read-write))
						(require-any
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
										(require-any
											(require-all
												(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
												(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-not (extension com.apple.avasset.read-only)))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-not (extension com.apple.app-sandbox.read-write))
						(require-any
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
										(require-any
											(require-all
												(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
												(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-not (extension com.apple.avasset.read-only)))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.homed"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-not (extension com.apple.app-sandbox.read-write))
						(require-any
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
										(require-any
											(require-all
												(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
												(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-not (extension com.apple.avasset.read-only)))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-not (extension com.apple.app-sandbox.read-write))
						(require-any
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
										(require-any
											(require-all
												(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
												(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-not (extension com.apple.avasset.read-only)))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.homed"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-not (extension com.apple.app-sandbox.read-write))
						(require-any
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
										(require-any
											(require-all
												(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
												(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-not (extension com.apple.avasset.read-only)))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-not (extension com.apple.app-sandbox.read-write))
						(require-any
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
										(require-any
											(require-all
												(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
												(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-not (extension com.apple.avasset.read-only)))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.homed"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-not (extension com.apple.app-sandbox.read-write))
						(require-any
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
										(require-any
											(require-all
												(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
												(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-not (extension com.apple.avasset.read-only)))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-not (extension com.apple.app-sandbox.read-write))
						(require-any
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
										(require-any
											(require-all
												(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
												(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-not (extension com.apple.avasset.read-only)))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.homed"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-not (extension com.apple.app-sandbox.read-write))
						(require-any
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
										(require-any
											(require-all
												(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
												(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-not (extension com.apple.avasset.read-only)))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
				(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
				(require-not (extension com.apple.security.exception.files.absolute-path.read-write))
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(require-not (extension com.apple.app-sandbox.read-write))
						(require-any
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-all
										(extension com.apple.tcc.kTCCServicePhotos)
										(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
										(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
										(require-any
											(require-all
												(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
												(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-not (extension com.apple.avasset.read-only)))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
												(extension-class "com.apple.mediaserverd.read-write")
												(extension-class "com.apple.mediaserverd.read"))
											(require-all
												(extension-class "com.apple.mediaserverd.read-write")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
											(require-all
												(extension-class "com.apple.mediaserverd.read")
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
						(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-not (extension com.apple.app-sandbox.read-write))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServicePhotos)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.mediaserverd.read"))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServicePhotos)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-any
							(require-all
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
							(require-all
								(subpath-prefix "${HOME}/Media")
								(require-not (extension com.apple.avasset.read-only)))))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.mediaserverd.read"))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-not (extension com.apple.app-sandbox.read-write))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServicePhotos)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.mediaserverd.read"))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServicePhotos)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-any
							(require-all
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
							(require-all
								(subpath-prefix "${HOME}/Media")
								(require-not (extension com.apple.avasset.read-only)))))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.mediaserverd.read"))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-not (extension com.apple.app-sandbox.read-write))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServicePhotos)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.mediaserverd.read"))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServicePhotos)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-any
							(require-all
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
							(require-all
								(subpath-prefix "${HOME}/Media")
								(require-not (extension com.apple.avasset.read-only)))))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.mediaserverd.read"))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-not (extension com.apple.app-sandbox.read-write))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServicePhotos)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.mediaserverd.read"))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServicePhotos)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-any
							(require-all
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
							(require-all
								(subpath-prefix "${HOME}/Media")
								(require-not (extension com.apple.avasset.read-only)))))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.mediaserverd.read"))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-not (extension com.apple.app-sandbox.read-write))
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServicePhotos)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.mediaserverd.read"))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(extension com.apple.tcc.kTCCServicePhotos)
						(require-not (extension com.apple.security.exception.files.home-relative-path.read-only))
						(require-not (extension com.apple.security.exception.files.absolute-path.read-only))
						(require-any
							(require-all
								(require-not (extension com.apple.security.exception.files.home-relative-path.read-write))
								(require-not (extension com.apple.security.exception.files.absolute-path.read-write)))
							(require-all
								(subpath-prefix "${HOME}/Media")
								(require-not (extension com.apple.avasset.read-only)))))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
						(require-any
							(require-all
								(subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI")
								(extension-class "com.apple.mediaserverd.read-write")
								(extension-class "com.apple.mediaserverd.read"))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))))))))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension com.apple.sandbox.executable))
	(require-all
		(extension-class "com.apple.identityservices.send")
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
	(require-all
		(extension-class "com.apple.StreamingUnzipService")
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed/SoftwareUpdateDocumentation"))))
(deny file-link
	(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed"))
	(require-all
		(subpath-prefix "${HOME}/Media")
		(process-attribute is-apple-signed-executable)))
(deny file-read*
	(require-all
		(require-not (subpath-prefix "${HOME}/Library/Fonts"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HomeConfiguration"))
(require-not (subpath-prefix "${HOME}/Library/homed"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/HomeKit"))
(require-not (subpath-prefix "${HOME}/Library/Application Support/com.apple.Home"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.VideoConference/logs/homed_")))
		(require-all (require-not (literal-prefix "${HOME}/Media/PhotoData"))
(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))
(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-wal"))
(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-journal")))
		(require-not (subpath-prefix "${HOME}/Library/LanguageModeling"))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(subpath-prefix "${HOME}/Media")
				(extension com.apple.tcc.kTCCServicePhotos)
				(require-not (subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData"))
				(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Metadata")))
				(require-not (subpath-prefix "${HOME}/Media/PhotoStreamsData"))
				(require-not (subpath-prefix "${HOME}/Media/DCIM"))
				(require-not (literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist"))
				(require-all (require-not (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Sync"))
(require-not (subpath-prefix "${HOME}/Media/PhotoData/Mutations")))
				(require-not (extension com.apple.avasset.read-only)))
			(require-all
				(require-not (subpath "/private/var/tmp"))
				(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.installcoordinationd/Library/InstallCoordination/Removability"))
				(require-not (literal-prefix "${HOME}/Library/AirPlayRoutePrediction/HomeControlSuggestions/correlations.archive"))
				(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
				(require-not (literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-shm"))
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?"))
						(require-not (extension com.apple.librarian.ubiquity-revision)))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Temp/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/(Temp/)?Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")
						(require-any
							(literal "/usr/sbin/fairplayd")
							(require-all
								(process-attribute is-platform-binary)
								(require-not (extension com.apple.tcc.kTCCServicePhotos)))
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
							(require-all
								(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
								(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-homed.log"))
								(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
								(require-not (literal "/private/var/preferences/com.apple.security.plist"))
								(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
								(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
								(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
								(require-any
									(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension.plist")
										(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
										(require-not (extension com.apple.identityservices.deliver)))
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
										(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
									(require-all
										(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
										(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.homed"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.homed")))
										(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
										(require-not (literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
										(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI"))
										(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.homed"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
										(require-all (require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")))
										(require-any
											(require-all
												(vnode-type REGULAR-FILE)
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeAI"))
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeKit.configurations"))
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed")))
											(require-all
												(vnode-type DIRECTORY)
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeAI"))
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeKit.configurations"))
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed")))
											(require-all
												(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
												(require-any
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
														(require-not (subpath-prefix "${FRONT_USER_HOME}")))
													(require-all
														(literal "/System/Library/Carrier Bundles/")
														(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
														(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
													(require-all
														(literal "/private/var/")
														(require-any
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}")
																(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")))
															(require-all
																(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
																(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
													(require-all
														(entitlement-is-bool-true com.apple.Contacts.database-allow)
														(extension com.apple.tcc.kTCCServiceAddressBook)
														(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
														(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
														(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))))))))))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE)
						(require-not (extension com.apple.clouddocs.version)))
					(require-all
						(require-not (literal-prefix "${HOME}/Library/Caches/Checkpoint.plist"))
						(require-any
							(literal "/usr/sbin/fairplayd")
							(subpath-prefix "${HOME}/Library/FairPlay")
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-not (literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")))
							(require-all
								(require-not (literal "/private/var/preferences/com.apple.networkd.plist"))
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
								(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-homed.log"))
								(require-not (literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist"))
								(require-not (literal "/private/var/preferences/com.apple.security.plist"))
								(require-not (literal "/private/var/db/com.apple.networkextension.tracker-info"))
								(require-not (literal "/private/var/preferences/com.apple.NetworkStatistics.plist"))
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
								(require-not (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin"))
								(require-any
									(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension.plist")
										(require-not (entitlement-is-present com.apple.private.networkextension.configuration)))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$"))
										(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
										(require-not (extension com.apple.identityservices.deliver)))
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
										(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
									(require-all
										(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist"))
										(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.homed"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.homed")))
										(require-not (subpath "/private/var/containers/Data/System/com.apple.geod"))
										(require-not (literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
										(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices"))
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
										(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI"))
										(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.homed"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
										(require-all (require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")))
										(require-any
											(require-all
												(vnode-type REGULAR-FILE)
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeAI"))
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeKit.configurations"))
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed")))
											(require-all
												(vnode-type DIRECTORY)
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeAI"))
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeKit.configurations"))
												(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed")))
											(require-all
												(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay"))
												(require-any
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
														(require-not (subpath-prefix "${FRONT_USER_HOME}")))
													(require-all
														(literal "/System/Library/Carrier Bundles/")
														(require-not (regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$"))
														(require-not (regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
													(require-all
														(literal "/private/var/")
														(require-any
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}")
																(require-not (regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")))
															(require-all
																(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
																(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
													(require-all
														(entitlement-is-bool-true com.apple.Contacts.database-allow)
														(extension com.apple.tcc.kTCCServiceAddressBook)
														(require-not (subpath-prefix "${HOME}/Library/AddressBook/Delegates"))
														(require-not (subpath-prefix "${HOME}/Library/AddressBook"))
														(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))))))))))))))))
(deny file-read-data
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(require-not (extension com.apple.revisiond.staging)))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-not (extension com.apple.revisiond.revision)))))
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-read-metadata
	(require-all
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
		(require-not (literal-prefix "${HOME}/Library/PPTDevice"))
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
		(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
		(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI"))
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter"))
		(require-not (literal-prefix "${HOME}"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.homed"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection"))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-not (literal-prefix "${HOME}/Library/Preferences"))
				(require-not (literal-prefix "${HOME}/Library/Logs/awd"))
				(require-not (literal-prefix "${HOME}/Library"))
				(require-any
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(extension com.apple.tcc.kTCCServicePhotos)
						(require-not (literal-prefix "${HOME}"))
						(require-not (literal-prefix "${HOME}/Library/Preferences")))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
								(require-not (extension com.apple.revisiond.staging)))
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
								(require-not (extension com.apple.revisiond.revision)))))
					(require-all
						(vnode-type DIRECTORY)
						(require-any
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
								(require-not (extension com.apple.revisiond.staging)))
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
								(require-not (extension com.apple.revisiond.revision)))))
					(require-all
						(vnode-type SYMLINK)
						(require-any
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
								(require-not (extension com.apple.revisiond.staging)))
							(require-all
								(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
								(require-not (extension com.apple.revisiond.revision))))))))))
(deny file-read-xattr
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension com.apple.revisiond.revision))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension com.apple.revisiond.revision))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension com.apple.revisiond.staging))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension com.apple.revisiond.revision)))))
(deny file-write*
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/awd/awd-homed.log"))
		(require-all (require-not (subpath-prefix "${HOME}/Library/HomeConfiguration"))
(require-not (subpath-prefix "${HOME}/Library/homed"))
(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/HomeKit"))
(require-not (subpath-prefix "${HOME}/Library/Application Support/com.apple.Home"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.VideoConference/logs/homed_")))
		(require-not (subpath-prefix "${HOME}/Library/LanguageModeling"))
		(require-any
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(require-not (subpath "/private/var/tmp"))
				(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))
				(require-any
					(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(vnode-type DIRECTORY)
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(vnode-type SYMLINK)
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
						(require-not (extension com.apple.revisiond.staging)))
					(require-all
						(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.homed"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.homed")))
						(require-not (literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeKit.configurations"))
						(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.HomeAI"))
						(require-all (require-not (subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.homed"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.homed")))
						(require-all (require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist"))
(require-not (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")))
						(require-any
							(require-all
								(vnode-type REGULAR-FILE)
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeAI"))
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeKit.configurations"))
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed"))
								(vnode-type REGULAR-FILE)
								(literal-prefix "${HOME}/Library/AddressBook/")
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(extension com.apple.tcc.kTCCServiceAddressBook))
							(require-all
								(vnode-type DIRECTORY)
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeAI"))
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.HomeKit.configurations"))
								(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed"))
								(vnode-type REGULAR-FILE)
								(literal-prefix "${HOME}/Library/AddressBook/")
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(extension com.apple.tcc.kTCCServiceAddressBook))
							(require-all
								(entitlement-is-bool-true com.apple.Contacts.database-allow)
								(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
								(extension com.apple.tcc.kTCCServiceAddressBook)))))))))
(deny file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_")
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
		(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))
		(process-attribute is-apple-signed-executable)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry"))
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(require-not (subpath-prefix "${FRONT_USER_HOME}")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (literal-prefix "${HOME}/Library/HTTPStorages"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
		(require-not (literal-prefix "${HOME}/Library/Caches"))
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection"))
		(require-not (literal-prefix "${HOME}/Library/Logs/awd")))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}"))))
(deny file-write-data
	(require-all
		(vnode-type SOCKET)
		(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))))
(deny file-write-setugid)
(deny file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(vnode-type REGULAR-FILE)
		(require-not (subpath "/private/var/tmp"))
		(require-not (subpath-prefix "${PROCESS_TEMP_DIR}")))
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
		(require-not (extension com.apple.identityservices.deliver)))
	(require-all
		(extension com.apple.sandbox.oopjit)
		(require-not (subpath "/private/var/OOPJit"))))
(deny generic-issue-extension
	(require-any (extension-class "com.apple.shortcuts.access.home")
(extension-class "com.apple.shortcuts.access.location")
(extension-class "com.apple.shortcuts.access.internet")))
(deny iokit-open-user-client
	(require-all
		(require-not (iokit-user-client-class "IOSurfaceSendRight"))
		(iokit-user-client-class "AppleJPEGDriverUserClient")
		(iokit-user-client-class "IOSurfaceAcceleratorClient")
		(iokit-user-client-class "AGXDevice")
		(iokit-user-client-class "RootDomainUserClient")
		(iokit-user-client-class "IOSurfaceRootUserClient")
		(extension com.apple.security.exception.iokit-user-client-class)
		(iokit-user-client-class "AGXCommandQueue")
		(iokit-user-client-class "IOMobileFramebufferUserClient")
		(require-any (iokit-connection "IOGPU")
(iokit-connection "IOGraphicsAccelerator2"))
		(iokit-user-client-class "IOGPUDeviceUserClient")
		(require-any (iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelSharedUserClient2"))
		(require-any (iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelSubmitter2")
(iokit-user-client-class "IOAccelSharedUserClient"))
		(iokit-user-client-class "AGXSharedUserClient")
		(iokit-user-client-class "AppleKeyStoreUserClient")
		(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient"))
		(iokit-user-client-class "ANEClientHintsUserClient")
		(entitlement-is-bool-true com.apple.private.ane.allow-set-client-hints)))
(deny iokit-open-service
	(require-all
		(require-not (iokit-user-client-class "AppleJPEGDriver"))
		(require-not (iokit-user-client-class "AGXAcceleratorG"))
		(require-not (iokit-user-client-class "IOSurfaceRoot"))
		(require-all (require-not (iokit-user-client-class "AppleCLCD"))
(require-not (iokit-user-client-class "AppleParavirtDisplay")))
		(require-not (iokit-user-client-class "AppleParavirtGPU"))
		(require-not (iokit-user-client-class "IOPMrootDomain"))
		(require-not (iokit-user-client-class "AppleKeyStore"))
		(require-not (entitlement-is-present com.apple.security.exception.iokit-user-client-class))
		(iokit-user-client-class "AppleVirtIONeuralEngineDevice")
		(iokit-user-client-class "H11ANEIn")))
(deny job-creation)
(deny mach-lookup
	(require-all
		(require-not (global-name "com.apple.securityd"))
		(require-not (global-name "com.apple.SystemConfiguration.DNSConfiguration"))
		(require-not (global-name "com.apple.networkscored"))
		(require-not (global-name "com.apple.fairplayd.versioned"))
		(require-not (global-name "com.apple.passd.payment"))
		(require-all (require-not (global-name "com.apple.iapd.xpc"))
(require-not (global-name "com.apple.iap2d.xpc")))
		(require-all (require-not (global-name "com.apple.geod"))
(require-not (global-name "com.apple.nanomaps.xpc.GeoServices")))
		(require-not (global-name "com.apple.coremedia.compressionsession"))
		(require-not (global-name "com.apple.ReportMemoryException"))
		(require-not (global-name "com.apple.passd.library"))
		(require-not (global-name "com.apple.mediaserverd"))
		(require-not (global-name "com.apple.SystemConfiguration.NetworkInformation"))
		(require-not (global-name "com.apple.server.bluetooth.le.att.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession"))
		(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
		(require-not (global-name "com.apple.accessories.transport-server"))
		(require-not (global-name "com.apple.passd.assertions"))
		(require-not (global-name "com.apple.librariand"))
		(require-not (global-name "com.apple.carkit.service"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.conversationmanager"))
		(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
		(require-not (global-name "com.apple.icloud.fmfd"))
		(require-not (global-name "com.apple.SystemConfiguration.helper"))
		(require-not (global-name "com.apple.usernotifications.remotenotificationservice"))
		(require-not (global-name "com.apple.locationd.synchronous"))
		(require-not (global-name "com.apple.coremedia.decompressionsession"))
		(require-not (global-name "com.apple.commcenter.xpc"))
		(require-not (global-name "com.apple.bird"))
		(require-not (global-name "com.apple.identityservicesd.idquery.embedded.auth"))
		(require-not (global-name "com.apple.lsd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc")))
		(require-not (global-name "com.apple.contactsd"))
		(require-not (global-name "com.apple.cdp.daemon"))
		(require-not (global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession"))
		(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))
		(require-not (global-name "com.apple.SystemConfiguration.configd"))
		(require-not (global-name "com.apple.coremedia.videocodecd.compressionsession.xpc"))
		(require-not (global-name "com.apple.routined.registration"))
		(require-all (require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc")))
		(require-not (global-name "com.apple.accountsd.accountmanager"))
		(require-not (global-name "com.apple.mediaremoted.xpc"))
		(require-not (global-name "com.apple.mobile.keybagd.UserManager.xpc"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc")))
		(require-not (global-name "com.apple.FileCoordination"))
		(require-not (global-name "com.apple.wifi.manager"))
		(require-not (global-name "com.apple.CARenderServer"))
		(require-not (global-name "com.apple.seserviced.passkit-extensions"))
		(require-not (global-name "com.apple.audio.AudioSession"))
		(require-all (require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figmetriceventtimeline.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc")))
		(require-not (global-name "com.apple.SharingServices"))
		(require-not (global-name "com.apple.cloudasset.cloudd"))
		(require-not (global-name "com.apple.controlcenter.remoteservice"))
		(require-not (global-name "com.apple.GSSCred"))
		(require-not (global-name "com.apple.mobile.keybagd.xpc"))
		(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
		(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
		(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
		(require-not (global-name "com.apple.apsd"))
		(require-not (global-name "com.apple.private.corewifi.mobilewifi-xpc"))
		(require-not (global-name "com.apple.accessoryupdater.uarp"))
		(require-not (global-name "com.apple.siri.external_request"))
		(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
		(require-not (global-name "com.apple.SBUserNotification"))
		(require-not (global-name "com.apple.nehelper"))
		(require-not (global-name "com.apple.sysdiagnose.service.xpc"))
		(require-not (global-name "com.apple.nesessionmanager"))
		(require-not (global-name "com.apple.bird.token"))
		(require-not (global-name "com.apple.networkserviceproxy.fetch-token"))
		(require-not (global-name "com.apple.wirelessproxd"))
		(require-not (global-name "com.apple.assetsd.changehub"))
		(require-not (global-name "com.apple.revisiond"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
		(require-not (global-name "com.apple.springboard.backgroundappservices"))
		(require-not (global-name "com.apple.dnssd.service"))
		(require-not (global-name "com.apple.mobile.usermanagerd.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc")))
		(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
		(require-not (global-name "com.apple.marco"))
		(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
		(require-not (global-name "com.apple.usymptomsd"))
		(require-not (global-name "com.apple.trustd"))
		(require-not (global-name "com.apple.ckdiscretionaryd"))
		(require-not (global-name "com.apple.locationd.registration"))
		(require-not (global-name "com.apple.bluetooth.xpc"))
		(require-not (global-name "com.apple.accessories.externalaccessory-server"))
		(require-not (global-name "com.apple.springboard.services"))
		(require-not (global-name "com.apple.SystemConfiguration.PPPController"))
		(require-not (global-name "com.apple.server.bluetooth"))
		(require-all (require-not (global-name "com.apple.cvmsServ"))
(require-not (global-name "com.apple.gpumemd.source")))
		(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
		(require-not (global-name "com.apple.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.photos.service"))
		(require-all (require-not (global-name "com.apple.sucontrollerd"))
(require-not (global-name "com.apple.ThreadNetworkService.xpc"))
(require-not (global-name "com.apple.nexus"))
(require-not (global-name "com.apple.nfcd.homekit.field"))
(require-not (global-name "com.apple.coremedia.endpointpicker.xpc"))
(require-not (global-name "com.apple.homepodsensed"))
(require-not (global-name "com.apple.homekitevents.xpc"))
(require-not (global-name "com.apple.assistant.security"))
(require-not (global-name "com.apple.assistant.settings.remora"))
(require-not (global-name "com.apple.mediaanalysisd.homekit"))
(require-not (global-name "com.apple.mediaanalysisd.homekitsession")))
		(require-not (global-name "com.apple.PersistentURLTranslator.Gatekeeper"))
		(require-not (global-name "com.apple.commcenter.cupolicy.xpc"))
		(require-not (global-name "com.apple.itunesstored.xpc"))
		(require-not (global-name "com.apple.usernotifications.usernotificationservice"))
		(require-not (global-name "com.apple.PairingManager"))
		(require-not (global-name "com.apple.nsurlsessiond"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callstatecontroller"))
		(require-not (global-name "com.apple.assistant.analytics"))
		(require-not (global-name "com.apple.coremedia.videocompositor"))
		(require-not (global-name "com.apple.awdd"))
		(require-not (global-name "com.apple.FileProvider"))
		(require-not (global-name "com.apple.symptomsd"))
		(require-not (global-name "com.apple.AppSSO.service-xpc"))
		(require-not (global-name "com.apple.symptoms.symptomsd.managed_events"))
		(require-not (global-name "com.apple.coreduetd.people"))
		(require-not (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
		(require-not (global-name "com.apple.spotlight.IndexAgent"))
		(require-not (global-name "com.apple.identityservicesd.nsxpc"))
		(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
		(require-not (global-name "com.apple.nfcd.hwmanager"))
		(require-all (require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor")))
		(require-not (global-name "com.apple.coremedia.admin"))
		(require-not (global-name "com.apple.cloudd"))
		(require-not (global-name "com.apple.coremedia.asset.xpc"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.neighborhood-activities"))
		(require-not (global-name "com.apple.iokit.powerdxpc"))
		(require-not (global-name "com.apple.installcoordinationd"))
		(require-not (global-name "com.apple.corefollowup.agent"))
		(require-not (global-name "com.apple.amsaccountsd.multiuser"))
		(require-not (global-name "com.apple.iohideventsystem"))
		(require-not (global-name "com.apple.pairedsyncd.syncstate"))
		(require-not (global-name "com.apple.PowerManagement.control"))
		(require-not (global-name "com.apple.pegasus"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
		(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
		(require-not (global-name "com.apple.identityservicesd.embedded.auth"))
		(require-not (global-name "com.apple.privacyaccountingd"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
		(require-not (global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
		(require-not (global-name "com.apple.medialibraryd.xpc"))
		(require-not (global-name "com.apple.systemstatus.activityattribution"))
		(require-not (global-name "com.apple.coreduetd.knowledge"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
		(require-not (global-name "com.apple.rapport"))
		(require-not (global-name "com.apple.coresymbolicationd"))
		(require-not (global-name "com.apple.security.octagon"))
		(require-not (global-name "com.apple.cache_delete.public"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
		(require-not (global-name "com.apple.networkd"))
		(require-not (global-name "com.apple.SecureBackupDaemon"))
		(require-not (global-name "com.apple.coremedia.sandboxserver"))
		(require-all (require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc")))
		(require-not (global-name "com.apple.timesync.ptp.manager"))
		(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
		(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
		(require-not (global-name "com.apple.mobilecheckpoint.checkpointd"))
		(require-not (global-name "com.apple.chronoservices"))
		(require-not (global-name "com.apple.videoconference.camera"))
		(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
		(require-not (global-name "com.apple.coremedia.player.xpc"))
		(require-not (global-name "com.apple.coreduetd.knowledgebase"))
		(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
		(require-not (global-name "com.apple.SystemConfiguration.SCNetworkReachability"))
		(require-all (require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession")))
		(require-not (global-name "com.apple.assistant.settings"))
		(require-not (global-name "com.apple.audioanalyticsd"))
		(require-not (global-name "com.apple.locationd.spi"))
		(require-not (global-name "com.apple.ABDatabaseDoctor"))
		(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
		(require-not (global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
		(require-all (require-not (global-name "com.apple.airplay.endpoint.xpc"))
(require-not (global-name "com.apple.mediaexperience.endpoint.xpc")))
		(require-not (global-name "com.apple.siri.VoiceShortcuts.xpc"))
		(require-not (global-name "com.apple.nano.nanoregistry.paireddeviceregistry"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
		(require-not (global-name "com.apple.idsremoteurlconnectionagent.embedded.auth"))
		(require-not (global-name "com.apple.photoanalysisd"))
		(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
		(require-all (require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc")))
		(require-not (global-name "com.apple.commcenter.coretelephony.xpc"))
		(require-not (global-name "com.apple.usernotifications.listener"))
		(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
		(require-not (global-name "com.apple.coremedia.sts"))
		(require-not (global-name "com.apple.NPKCompanionAgent.library"))
		(require-not (global-name "com.apple.itunescloudd.xpc"))
		(require-not (global-name "com.apple.callkit.callcontrollerhost"))
		(require-all (require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc")))
		(require-not (global-name "com.apple.appleneuralengine"))
		(require-not (global-name "com.apple.frontboard.systemappservices"))
		(require-not (global-name "com.apple.cmfsyncagent.embedded.auth"))
		(require-all (require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc")))
		(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
		(require-not (global-name "com.apple.StatusKit.presence"))
		(require-not (global-name "com.apple.geoanalyticsd"))
		(require-not (xpc-service-name "com.apple.AGXCompilerService"))
		(require-not (xpc-service-name "com.apple.ImageIOXPCService"))
		(require-not (xpc-service-name "com.apple.externalaccessory.WACEAService"))
		(require-not (xpc-service-name "com.apple.MTLCompilerService"))
		(require-not (xpc-service-name "com.apple.coremedia.decompressionsession.xpc"))
		(require-not (xpc-service-name "com.apple.coremedia.compressionsession.xpc"))
		(require-not (xpc-service-name "com.apple.MediaPlayer.RemotePlayerService"))
		(require-not (extension com.apple.security.exception.mach-lookup.global-name))
		(require-not (extension com.apple.security.exception.mach-lookup.local-name))
		(global-name "com.apple.lsd.openurl")
		(global-name "com.apple.tccd")
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-any
			(xpc-service-name "com.apple.WebKit.")
			(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
			(xpc-service-name-regex #".+")
			(global-name "com.apple.ckdiscretionaryd.debug")
			(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
			(global-name "com.apple.cloudkit.partlycloudd")
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(process-attribute is-apple-signed-executable)
				(entitlement-is-bool-true com.apple.authkit.client)
				(entitlement-is-bool-true com.apple.authkit.client.private)
				(entitlement-is-bool-true com.apple.authkit.client.internal))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(entitlement-is-bool-true com.apple.networkd.modify_settings)
				(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
				(entitlement-is-bool-true com.apple.networkd.advisory_socket)
				(entitlement-is-bool-true com.apple.networkd_privileged)
				(entitlement-is-bool-true com.apple.networkd.persistent_interface))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true com.apple.security.on-demand-install-capable)))))
(deny network*
	(require-all
		(require-not (local tcp "*:*"))
		(require-not (local udp "*:*"))
		(require-not (remote udp "*:*"))
		(require-not (remote tcp "*:*"))))
(deny network-inbound
	(require-all
		(require-not (entitlement-is-bool-true com.apple.developer.networking.multicast))
		(require-any
			(require-all
				(extension com.apple.app-sandbox.read-write)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents")))
			(require-all
				(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension com.apple.librarian.ubiquity-container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
				(require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(require-not (subpath-prefix "${FRONT_USER_HOME}"))))))
(deny network-outbound
	(require-all
		(require-not (control-name "com.apple.netsrc"))
		(require-not (control-name "com.apple.flow-divert"))
		(require-not (control-name "com.apple.network.statistics"))
		(require-not (remote tcp "*:*"))
		(require-not (remote udp "*:443"))
		(require-any
			(require-all
				(vnode-type SOCKET)
				(require-not (literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
			(require-all
				(require-not (literal "/private/var/run/mDNSResponder"))
				(require-any
					(require-all
						(extension com.apple.app-sandbox.read-write)
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(subpath-prefix "${HOME}/Library/Mobile Documents"))
					(require-all
						(entitlement-is-bool-true com.apple.private.librarian.container-proxy)
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(extension com.apple.librarian.ubiquity-container)
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(subpath-prefix "${FRONT_USER_HOME}")))))))
(deny syscall-unix
	(c1 0f0e 6155 9ce0))
(deny system-fcntl
	(ce 04d2 6153 9ce0))
(deny system-fsctl
	(require-all
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "J" 93)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "h" 32)))
		(require-not (fsctl-command-regex [UNSUPPORTED](_IO "h" 31)))))
(deny system-kas-info)
(deny user-preference-read
	(require-all
		(require-not (preference-domain "com.apple.locationd"))
		(require-not (preference-domain "com.apple.Metal"))
		(require-not (preference-domain "com.apple.CoreDuet"))
		(require-not (preference-domain "com.apple.AppSupport"))
		(require-not (preference-domain "com.apple.iokit.IOMobileGraphicsFamily"))
		(require-not (preference-domain "com.apple.itunescloud"))
		(require-not (preference-domain "com.apple.DataMigration"))
		(require-not (preference-domain "com.apple.apsd"))
		(require-not (preference-domain "com.apple.logging"))
		(require-not (preference-domain "com.apple.coremedia"))
		(require-not (preference-domain "com.apple.VideoConference"))
		(require-not (preference-domain "com.apple.CloudKit"))
		(require-not (preference-domain "com.apple.coreaudio"))
		(require-not (preference-domain "com.apple.GEO"))
		(require-not (preference-domain "com.apple.CFNetwork"))
		(require-not (preference-domain "com.apple.mobileipod"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.postwipe"))
		(require-not (preference-domain "com.apple.mediaremote"))
		(require-not (preference-domain "com.apple.demo-settings"))
		(require-not (preference-domain "com.apple.avfoundation"))
		(require-not (preference-domain "com.apple.opengl"))
		(require-not (preference-domain "com.apple.carrier"))
		(require-not (preference-domain "com.apple.homed"))
		(require-not (preference-domain "com.apple.AOSNotification.public.notbackedup"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.notbackedup"))
		(require-not (preference-domain "com.apple.c2"))
		(require-not (preference-domain "com.apple.NanoRegistry"))
		(require-not (preference-domain "com.apple.PeoplePicker"))
		(require-not (preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
		(require-not (preference-domain "com.apple.persistentconnection"))
		(require-not (preference-domain "com.apple.ids"))
		(require-not (preference-domain "com.apple.coreanimation"))
		(require-not (preference-domain "com.apple.MFAAuthentication"))
		(require-not (preference-domain "com.apple.purplebuddy"))
		(require-not (preference-domain "com.apple.facetime.bag"))
		(require-not (preference-domain "com.apple.conference"))
		(require-not (preference-domain "com.apple.pairedsyncd"))
		(require-not (preference-domain "com.apple.airplay"))
		(require-all (require-not (preference-domain "com.apple.homed.notbackedup"))
(require-not (preference-domain "com.apple.Home.ControlCenter")))
		(require-not (preference-domain "com.apple.pairedsync"))
		(require-not (preference-domain "com.apple.marco"))
		(require-not (preference-domain "com.apple.corevideo"))
		(process-attribute is-apple-signed-executable)
		(entitlement-is-bool-true com.apple.itunesstored.private)
		(preference-domain "com.apple.itunesstored")))
(deny user-preference-write
	(require-all
		(require-not (preference-domain "com.apple.itunescloud"))
		(require-not (preference-domain "com.apple.mediaremote"))
		(require-not (preference-domain "com.apple.homed"))
		(require-not (preference-domain "com.apple.MFAAuthentication"))
		(require-not (preference-domain "com.apple.facetime.bag"))
		(require-any (preference-domain "com.apple.homed.notbackedup")
(preference-domain "com.apple.Home.ControlCenter"))))
(deny storage-class-map)
